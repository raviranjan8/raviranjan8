{"version":3,"sources":["http-common.js","services/customer.service.js","services/route.service.js","components/add-customer.component.js","services/product.service.js","services/upload-files.service.js","components/add-product.component.js","services/delivery.service.js","services/route.stock.service.js","components/editor/numericeditor.component.js","components/routes-list.component.js","components/editor/dropdown.component.js","components/hooks/route.hook.js","components/product-list.component.js","services/seller.product.service.js","components/seller-product.component.js","components/seller-product-list.component.js","services/bill.service.js","services/payment.service.js","components/modal.component.js","components/daily-delivery.component.js","components/add-route.component.js","services/rate.service.js","components/hooks/countdown.latch.js","components/customer-calendar.component.js","components/customer-today.component.js","components/collection-bills-list.component.js","components/collection-daily.component.js","components/customer-list.component.js","components/bills.component.js","components/collection-bills.component.js","components/expense-bills.component.js","components/expense-list.component.js","components/add-expense.component.js","services/auth.service.js","components/login.component.js","App.js","serviceWorker.js","index.js"],"names":["baseURL","axios","create","params","http","get","id","data","post","put","mobNo","delete","AddCustomer","props","onChangeName","bind","onChangeAddress","onChangeMobNo","onChangeStartDate","onChangeActive","onChangeRoute","onChangeType","onChangeDefaultQuantity","onChangeRouteSeq","saveTutorial","newTutorial","getRoute","myRef","React","createRef","myRefType","today","moment","state","name","address","type","active","startDate","format","routeId","defaultQuantity","routes","routeSeq","submitted","e","this","setState","target","value","length","checked","disabled","current","console","log","CustomerService","then","response","Response","catch","RouteService","getAll","className","onClick","htmlFor","required","onChange","ref","map","option","defaultChecked","Component","file","prefix","formData","FormData","append","headers","AddProduct","onChangeminRate","onChangemaxRate","onChangeImagePath","onChangedescription","selectFile","upload","minRate","maxRate","imagePath","description","message","selectedFiles","undefined","uploadDisable","event","files","productId","currentFile","UploadService","ProductService","products","autoFocusAndSelect","input","select","focus","NumericEditor","row","column","onRowChange","onClose","inputmode","key","onBlur","columns","width","editor","editorOptions","editOnClick","resizable","formatter","disable","to","quantity","pending","TextEditor","RoutesList","rowChange","saveRoute","routeStockService","rows","retrieveRoutes","currentDate","initialRows","param","date","month","Array","route","index","extraInfo","customerCount","customerTotalQuantity","customerDeliveredCount","customerDeliveredQuantity","customerPendingCount","RouteStockService","stocks","stock","initialRow","col","indexes","update","routeStockId","Grid","container","spacing","xs","item","sm","onRowsChange","DropDownEditor","useState","selectData","setSelectData","useEffect","useRoutes","textEditorClassname","autoFocus","selectDataRecord","FilterContext","createContext","inputStopPropagation","includes","stopPropagation","getComparator","sortColumn","a","b","localeCompare","ProductList","setRows","sortColumns","setSortColumns","enabled","filters","setFilters","headerCellClass","headerRenderer","p","FilterRenderer","rest","onKeyDown","src","startsWith","_sort","_order","product","filteredRows","useMemo","filter","r","sort","compResult","columnKey","comparator","direction","Provider","saveDelivery","constructDeliveryUpdateData","defaultColumnOptions","sortable","onSortColumnsChange","headerRowHeight","isCellSelected","children","useContext","isSelected","useRef","useLayoutEffect","preventScroll","tabIndex","useFocusRef","SellerProduct","onChangeDescription","onChangeBrand","onChangeCompany","onChangeMrp","onChangeWeight","onChangeUnit","onChangeMeasurment","onChangeQuantity","onChangeRate","onChangeDiscount","onChangeDiscountType","onChangeDeliveryCharge","onChangeproduct","getproduct","myRefUnit","brand","company","mrp","weight","unit","measurment","rate","discount","discountType","deliveryCharge","displayImagePath","SellerProductService","alt","height","SellerProductList","productImage","sellerproducts","Modal","handleClickOpen","open","handleClose","getCustomerBill","savePayment","saveMobNo","onChangePayment","getPayment","getBill","partyId","payment","prevBill","currentBill","updateMobNo","PaymentService","bill","dues","monthprev","clone","subtract","billName","BillService","bills","category","align","readOnly","onDate","amount","onAmount","onQuantity","style","textAlign","onUpdate","onModalClose","onPrev","previousTitle","onNext","nextTitle","TableContainer","component","Paper","Table","sx","minWidth","TableHead","TableRow","TableCell","TableBody","scope","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","ProjectData","handleModalOpen","idx","activeProject","modalTitle","projects","handleModalClose","handleNextProject","arr","handlePrevProject","handleModalUpdate","getProjects","onChangeDate","onChangeAmount","match","searchFlag","dateObj","DeliveryService","response1","projectComponents","url","onModalOpen","md","i","prevTitle","Item","styled","theme","typography","body2","padding","color","palette","text","secondary","Project","AddRoute","Date","getDate","parseInt","getMonth","getFullYear","CountdownLatch","limit","count","waitBlock","prototype","countDown","await","callback","filterColumnClassName","filterClassname","CustomerCalendar","initialCalendar","setMessage","setRate","setOpen","confirm","setConfirm","calendar","setCalendar","frozen","generateBillAfterCheck","paramsBill","generateBills","deliverys","delivery","paramCustomer","RateService","rates","barrier","customers","customer","lastBillTotal","paramsBillPrev","billService","deliveryService","add","validateBillGeneration","status","defaultValue","endDate","newRate","variant","filename","columnVal","columnId","cutomerId","rowData","slice","CustomerDaily","CollectionBillsList","from","setFrom","setTo","getBills","party","generateBillsCollectionAfterCheck","generateBillsCollection","hidden","paramsFrom","validateCollectionBillsGeneration","generateBillCollection","placeholder","CollectionDaily","pa0tyId","rowCopy","qty","paid","splice","addCollectionForSameFarmer","idtoday","fat","snf","water","tempQantity","deliveryDate","CustomerList","routeName","Bills","border","totalBill","margin","colspan","rowSpan","CollectionBills","colSpan","ExpenseBills","allBills","allBill","allPayments","allPayment","ExpenseList","expenses","sortedRows","cotegory","AddExpense","saveExpense","newExpense","onChangeCategory","inputDate","JSON","parse","localStorage","getItem","userName","setItem","stringify","roles","Login","AuthService","setCurrentUser","getCurrentUser","history","push","window","location","reload","App","showModeratorBoard","showAdminBoard","currentUser","user","exact","path","EmployeeDaily","Boolean","hostname","ReactDOM","render","StyledEngineProvider","injectFirst","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.9021d6a1.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n//export const baseURL = \"http://localhost:8080/\";\r\nexport const baseURL = \"http://dairyweb-env.eba-rp2mcr7k.ap-south-1.elasticbeanstalk.com/\";\r\n//export const baseURL = \"http://192.168.43.137:3000/\";\r\n\r\nexport default axios.create({\r\n  baseURL: baseURL+'api',\r\n});","import http from \"../http-common\";\r\n\r\nclass CustomerService {\r\n  getAll(params) {\r\n    return http.get(\"/partys\", { params });\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/partys/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/partys\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/partys/${id}`, data);\r\n  }\r\n\r\n  updateMobNo(id, mobNo, data) {\r\n    return http.put(`/partys/${id}/${mobNo}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/partys/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(\"/partys\");\r\n  }\r\n}\r\n\r\nexport default new CustomerService();\r\n","import http from \"../http-common\";\r\n\r\nclass RouteService {\r\n  getAll(params) {\r\n    return http.get(\"/routes\", { params });\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/routes/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/routes\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/routes/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/routes/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(\"/routes\");\r\n  }\r\n}\r\n\r\nexport default new RouteService();\r\n","import React, { Component } from \"react\";\r\nimport CustomerService from \"../services/customer.service\";\r\nimport RouteService from \"../services/route.service\";\r\nimport moment from \"moment\";\r\n\r\nexport default class AddCustomer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeName = this.onChangeName.bind(this);\r\n    this.onChangeAddress = this.onChangeAddress.bind(this);\r\n    this.onChangeMobNo = this.onChangeMobNo.bind(this);\r\n    this.onChangeStartDate = this.onChangeStartDate.bind(this);\r\n    this.onChangeActive = this.onChangeActive.bind(this);\r\n    this.onChangeRoute = this.onChangeRoute.bind(this);\r\n  \tthis.onChangeType = this.onChangeType.bind(this);\r\n    this.onChangeDefaultQuantity = this.onChangeDefaultQuantity.bind(this);\r\n    this.onChangeRouteSeq = this.onChangeRouteSeq.bind(this);\r\n    this.saveTutorial = this.saveTutorial.bind(this);\r\n    this.newTutorial = this.newTutorial.bind(this);\r\n    this.getRoute = this.getRoute.bind(this);\r\n    this.myRef = React.createRef();\r\n  \tthis.myRefType = React.createRef();\r\n\r\n    const today = moment();\r\n    this.state = {\r\n      id: null,\r\n      name: \"\",\r\n      address: \"\", \r\n      mobNo: \"\",\r\n\t    type:\"\",\r\n      active: true,\r\n      startDate: today.format(\"DD-MMM-YYYY\"),\r\n      routeId: \"\",\r\n      defaultQuantity: 1,\r\n      routes:[],\r\n      routeSeq:null,\r\n      submitted: false\r\n    };\r\n  }\r\n\r\n\tonChangeType(e){\r\n\t\tthis.setState({\r\n\t\t  type: e.target.value\r\n\t\t});\r\n\t}\r\n  onChangeName(e) {\r\n    this.setState({\r\n      name: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeAddress(e) {\r\n    this.setState({\r\n      address: e.target.value\r\n    });\r\n  }\r\n  onChangeMobNo(e) {\r\n    if (e.target.value.length<11 ){\r\n    this.setState({\r\n    mobNo: e.target.value  \r\n    });\r\n  }\r\n  }\r\n\r\n  onChangeRouteSeq(e) {\r\n    this.setState({\r\n      routeSeq: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeStartDate(e) {\r\n    this.setState({\r\n      startDate: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeActive(e) {\r\n    this.setState({\r\n      active: e.target.checked\r\n    });\r\n  }\r\n\r\n  onChangeRoute(e) {\r\n    this.setState({\r\n      routeId: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeDefaultQuantity(e) {\r\n    this.setState({\r\n      defaultQuantity: e.target.value\r\n    });\r\n  }\r\n\r\n  saveTutorial(e) {\r\n\te.target.disabled=true;\r\n    var data = {\r\n      name: this.state.name,\r\n      address: this.state.address,\r\n      mobNo: this.state.mobNo,\r\n      startDate: this.state.startDate,\r\n      active: this.state.active,\r\n      routeId: this.myRef.current.value,\r\n\t  type: this.myRefType.current.value,\r\n      defaultQuantity: this.state.defaultQuantity,\r\n      routeSeq: this.state.routeSeq\r\n    };\r\nconsole.log(data);\r\nthis.setState({submitted: true});\r\n    CustomerService.create(data)\r\n      .then(response => {\r\n        this.setState({\r\n          id: response.data.id,\r\n          name: response.data.name,\r\n          address: response.data.address,\r\n          mobNo: Response.data.mobNo,\r\n          active: response.data.active,\r\n          startDate: response.data.startDate,\r\n          routeId: response.data.routeId,\r\n\t\t      type: response.data.type,\r\n          defaultQuantity: response.data.defaultQuantity,\r\n          routeSeq: response.data.routeSeq,\r\n          submitted: true\r\n        });\r\n\t\te.target.disabled=false;\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  newTutorial() {\r\n    this.setState({\r\n      id: null,\r\n      name: \"\",\r\n      address: \"\",\r\n      mobNo: \"\",\r\n      startDate: moment().format(\"DD-MMM-YYYY\"),\r\n      active: true,\r\n      routeId: \"\",\r\n\t  type: \"\",\r\n      defaultQuantity:1,\r\n      routeSeq: null,\r\n      submitted: false\r\n    });\r\n  }\r\n\r\n  //\r\n  componentDidMount() {\r\n    this.getRoute();\r\n  }\r\n\r\n  getRoute(){\r\n    RouteService.getAll()\r\n      .then(response => {\r\n        this.setState({\r\n          routes: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { routes } = this.state;\r\n    return (\r\n      <div className=\"submit-form\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>You submitted successfully!</h4>\r\n            <button className=\"btn btn-success\" onClick={this.newTutorial}>\r\n              Add\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"name\">Customer Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"name\"\r\n                required\r\n                value={this.state.name}\r\n                onChange={this.onChangeName}\r\n                name=\"name\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"address\">Address</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"address\"\r\n                required\r\n                value={this.state.address}\r\n                onChange={this.onChangeAddress}\r\n                name=\"address\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"mobNo\">MobNo</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control phone validate\"\r\n                id=\"mobNo\"\r\n                required\r\n                value={this.state.mobNo}\r\n                onChange={this.onChangeMobNo}\r\n                name=\"mobNo\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"startDate\">Start Date</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"startDate\"\r\n                required\r\n                value={this.state.startDate}\r\n                onChange={this.onChangeStartDate}\r\n                name=\"startDate\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"defaultQuantity\">Default Quantity</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                id=\"defaultQuantity\"\r\n                required\r\n                value={this.state.defaultQuantity}\r\n                onChange={this.onChangeDefaultQuantity}\r\n                name=\"defaultQuantity\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">        \r\n                  <label htmlFor=\"routeId\">Route</label>\r\n                  <div className=\"select-container\">\r\n                    <select className=\"form-control\" value={this.state.routeId} \r\n                    onChange={this.onChangeRoute} ref={this.myRef} name=\"routeId\">\r\n                      {routes.map((option) => (\r\n                        <option value={option.id}>{option.name}</option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"routeSeq\">Route Sequene</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                id=\"routeSeq\"\r\n                required\r\n                value={this.state.routeSeq}\r\n                onChange={this.onChangeRouteSeq}\r\n                name=\"routeSeq\"\r\n              />\r\n            </div>\r\n\t\t\t <div className=\"form-group\">        \r\n                  <label htmlFor=\"type\">Type</label>\r\n                  <div className=\"select-container\">\r\n                    <select className=\"form-control\" value={this.state.type} \r\n\t\t\t\t\t\tonChange={this.onChangeType} ref={this.myRefType} name=\"type\">\r\n                        <option value=\"customer\">Customer</option>\r\n                        <option value=\"staff\">Staff</option>\r\n                        <option value=\"vendor\">Vendor</option>\r\n                        <option value=\"farmer\">Farmer</option>\r\n                        <option value=\"chicken\">Chicken</option>\r\n                        <option value=\"car\">Car</option>\r\n                        <option value=\"ace\">Ace</option>\r\n                        <option value=\"vegetable\">Vegetable</option>\r\n                        <option value=\"grains\">Grains</option>\r\n                        <option value=\"fuel\">Fuel</option>\r\n                    </select>\r\n                  </div>\r\n            </div>\r\n            <div className=\"form-group\">        \r\n                  <label htmlFor=\"active\">Active</label>\r\n                  <input type=\"checkbox\" className=\"form-control\"\r\n                  id=\"active\" name=\"active\"\r\n                  onChange={this.onChangeActive} defaultChecked={this.state.active}/>\r\n            </div>\r\n\r\n            <button onClick={this.saveTutorial} className=\"btn btn-success\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import http from \"../http-common\";\r\n\r\nclass ProductService {\r\n  getAll(params) {\r\n    return http.get(\"/products\", { params });\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/products/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/products\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/products/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/products/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(\"/products\");\r\n  }\r\n}\r\n\r\nexport default new ProductService();\r\n","import http from \"../http-common\";\n\nclass UploadFilesService {\n  upload(file, prefix) {\n    let formData = new FormData();\n    \n    formData.append(\"file\", file);\n    formData.append(\"prefix\", prefix);\n  \n    return http.post(\"/upload\", formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      }      \n    });\n  }\n\n  getFiles() {\n    return http.get(\"/files\");\n  }\n}\n\nexport default new UploadFilesService();\n","import React, { Component } from \"react\";\r\nimport ProductService from \"../services/product.service\";\r\nimport UploadService from \"../services/upload-files.service\";\r\nimport moment from \"moment\";\r\n\r\nexport default class AddProduct extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeName = this.onChangeName.bind(this);\r\n    this.onChangeminRate = this.onChangeminRate.bind(this);\r\n    this.onChangemaxRate = this.onChangemaxRate.bind(this);\r\n    this.onChangeImagePath = this.onChangeImagePath.bind(this);\r\n    this.onChangedescription = this.onChangedescription.bind(this);\r\n  \tthis.onChangeType = this.onChangeType.bind(this);\r\n    this.saveTutorial = this.saveTutorial.bind(this);\r\n    this.newTutorial = this.newTutorial.bind(this);\r\n\r\n    this.selectFile = this.selectFile.bind(this);\r\n    this.upload = this.upload.bind(this);\r\n    \r\n    const today = moment();\r\n    this.state = {\r\n      id: null,\r\n      name: \"\",\r\n      minRate: \"\",\r\n      maxRate: \"\",\r\n      imagePath: \"\",\r\n      description: \"\",\r\n      submitted: false,\r\n      message: \"\",\r\n      selectedFiles: undefined,\r\n      uploadDisable: false\r\n    };\r\n  }\r\n\r\n\tonChangeType(e){\r\n\t\tthis.setState({\r\n\t\t  type: e.target.value\r\n\t\t});\r\n\t}\r\n  onChangeName(e) {\r\n    this.setState({\r\n      name: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeminRate(e) {\r\n    this.setState({\r\n      minRate: e.target.value\r\n    });\r\n  }\r\n  onChangemaxRate(e) {\r\n    this.setState({\r\n      maxRate: e.target.value  \r\n    });\r\n  }\r\n  \r\n\r\n  onChangeImagePath(e) {\r\n    this.setState({\r\n      imagePath: e.target.value,\r\n      selectedFiles: undefined,\r\n      uploadDisable: true\r\n    });\r\n  }\r\n\r\n  selectFile(event) {\r\n    this.setState({\r\n      selectedFiles: event.target.files,\r\n      imagePath: event.target.files[0].name\r\n    });\r\n  }\r\n\r\n  upload(productId) {\r\n    let currentFile = this.state.selectedFiles[0];\r\n\r\n    this.setState({\r\n      currentFile: currentFile,\r\n    });\r\n\r\n    UploadService.upload(currentFile, 'P_'+productId).then((response) => {\r\n        this.setState({\r\n          message: response.data.message,\r\n        });\r\n      })\r\n      .catch(() => {\r\n        this.setState({\r\n          message: \"Could not upload the file!\",\r\n          currentFile: undefined,\r\n        });\r\n      });\r\n\r\n    this.setState({\r\n      selectedFiles: undefined,\r\n    });\r\n  }\r\n\r\n\r\n  onChangedescription(e) {\r\n    this.setState({\r\n      description: e.target.value\r\n    });\r\n  }\r\n\r\n  saveTutorial(e) {\r\n\t  e.target.disabled=true;\r\n    var data = {\r\n      name: this.state.name,\r\n      minRate: this.state.minRate,\r\n      maxRate: this.state.maxRate,\r\n      imagePath: this.state.imagePath,\r\n      description: this.state.description,\r\n     \r\n    };\r\n    this.setState({submitted: true});\r\n    ProductService.create(data)\r\n      .then(response => {\r\n        this.setState({\r\n          id: response.data.id,\r\n          name: response.data.name,\r\n          minRate: response.data.minRate,\r\n          maxRate: response.data.maxRate,\r\n          imagePath: response.data.imagePath,\r\n          description: response.data.description,\r\n          submitted: true\r\n        });\r\n        if(this.state.selectedFiles){\r\n          this.upload(response.data.id);\r\n        }\r\n\t\t    e.target.disabled=false;\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  newTutorial() {\r\n    this.setState({\r\n      id: null,\r\n      name: \"\",\r\n      minRate: \"\",\r\n      maxRate: \"\",\r\n      imagePath: \"\",\r\n      description: \"\",\r\n      submitted: false\r\n    });\r\n  }\r\n\r\n  //\r\n  componentDidMount() {\r\n  }\r\n  \r\n  render() {\r\n    const { products,message, selectedFiles } = this.state;\r\n\r\n    return (\r\n      <div className=\"submit-form\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>You submitted successfully!</h4>\r\n            {message}\r\n            <button className=\"btn btn-success\" onClick={this.newTutorial}>\r\n              Add\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"name\">Product Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"name\"\r\n                required\r\n                value={this.state.name}\r\n                onChange={this.onChangeName}\r\n                name=\"name\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"minRate\">MinRate</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                id=\"minRate\"\r\n                required\r\n                value={this.state.minRate}\r\n                onChange={this.onChangeminRate}\r\n                name=\"minRate\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"maxRate\">MaxRate</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                id=\"maxRate\"\r\n                required\r\n                value={this.state.maxRate}\r\n                onChange={this.onChangemaxRate}\r\n                name=\"maxRate\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"imagePath\">ImagePath\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"imagePath\"\r\n                required\r\n                value={this.state.imagePath}\r\n                onChange={this.onChangeImagePath}\r\n                  name=\"imagePath\"\r\n              />\r\n\r\n              <label className=\"btn btn-default\">\r\n                <input disabled={this.state.uploadDisable} type=\"file\" onChange={this.selectFile} />\r\n              </label>\r\n             \r\n                  \r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"description\">Description</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"description\"\r\n                required\r\n                value={this.state.description}\r\n                onChange={this.onChangedescription}\r\n                name=\"description\"\r\n              />\r\n            </div>\r\n            \r\n            <button onClick={this.saveTutorial} className=\"btn btn-success\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import http from \"../http-common\";\r\n\r\nclass DeliveryService {\r\n  getAll(params) {\r\n    return http.get(\"/dailyBills\", { params });\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/dailyBills/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/dailyBills\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/dailyBills/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/dailyBills/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(\"/dailyBills\");\r\n  }\r\n}\r\n\r\nexport default new DeliveryService();\r\n","import http from \"../http-common\";\r\n\r\nclass RouteStockService {\r\n  getAll(params) {\r\n    return http.get(\"/routeStocks\", { params });\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/routeStocks/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/routeStocks\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/routeStocks/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/routeStocks/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(\"/routeStocks\");\r\n  }\r\n}\r\n\r\nexport default new RouteStockService();\r\n","import React from \"react\";\r\nimport type { EditorProps } from 'react-data-grid';\r\n\r\nexport const textEditorClassname = `rdg-text-editor textEditor`;\r\n\r\nfunction autoFocusAndSelect(input: HTMLInputElement | null) {\r\n  if(input)input.select();\r\n  if(input)input.focus();\r\n}\r\n\r\nexport default function NumericEditor({\r\n  row,\r\n  column,\r\n  onRowChange,\r\n  onClose\r\n}: EditorProps) {\r\n  return (\r\n    <input\r\n\t\ttype=\"number\"\r\n\t\tinputmode=\"numeric\" \r\n      className={textEditorClassname}\r\n      ref={autoFocusAndSelect}\r\n      value={row[column.key]}\r\n      onChange={(event) => onRowChange({ ...row, [column.key]: event.target.value })}\r\n      onBlur={() => onClose(true)}\r\n    />\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport RouteService from \"../services/route.service\";\r\nimport RouteStockService from \"../services/route.stock.service\";\r\nimport CustomerService from \"../services/customer.service\";\r\nimport DeliveryService from \"../services/delivery.service\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DataGrid, {TextEditor} from 'react-data-grid';\r\nimport NumericEditor from \"../components/editor/numericeditor.component\";\r\nimport moment from \"moment\";\r\nimport Grid from '@mui/material/Grid';\r\n\r\nconst columns = [\r\n  { key: 'quantity', name: 'Stock Q' , width: 40, editor: NumericEditor, editorOptions: {editOnClick: true} , resizable: true },\r\n  { key: 'routeId', name: 'Action' , width: 40, resizable: true ,\r\n            formatter(props) {\r\n              return <>\r\n                <Link disable=\"true\"\r\n                to={props.row.quantity ? (\"/gui/dailyDelivery/\" + props.row.id ) : \"\"}\r\n                className=\"badge badge-warning\">\r\n                Start\r\n                </Link>\r\n              </>;\r\n            }},\r\n  { key: 'delivered', name: 'Delivered Q' , width: 100 , resizable: true },\r\n  { key: 'pending', name: 'Pending' , width: 80 , resizable: true ,\r\n\t\tformatter(props) {\r\n              return <>\r\n                <Link disable=\"true\"\r\n                to={props.row.quantity ? (\"/gui/dailyDelivery/\" + props.row.id+\"/\"+props.row.pending ): \"\"}\r\n                className=\"badge badge-warning\">\r\n                Pending - {props.row.pending}\r\n                </Link>\r\n              </>;\r\n            }},\r\n\t\t\t\r\n  { key: 'served', name: 'Customer Served' , width: 140 , resizable: true },\r\n  { key: 'totalCustomer', name: 'Total Customer' , width: 130 , resizable: true },\r\n  { key: 'customerQuantity', name: 'Required Q' , width: 100 , resizable: true },\r\n  { key: 'id', name: 'Route ID' , width: 80 , resizable: true },\r\n  { key: 'name', name: 'Name' , editor: TextEditor, editorOptions: {editOnClick: true} , resizable: true },\r\n  { key: 'address', name: 'Address' , editor: TextEditor, editorOptions: {editOnClick: true} , resizable: true }\r\n];\r\n\r\nexport default class RoutesList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.rowChange = this.rowChange.bind(this);\r\n    this.saveRoute = this.saveRoute.bind(this);\r\n    this.routeStockService = this.routeStockService.bind(this);    \r\n\r\n    this.state = {\r\n      rows: []\r\n    };\r\n    \r\n  }\r\n\r\n  componentDidMount() {\r\n    this.retrieveRoutes();\r\n  }\r\n  retrieveRoutes() {\r\n    var currentDate = moment();\r\n    var initialRows = null;\r\n    const param = {\r\n      date: currentDate.format(\"DD\") ,\r\n      month: currentDate.format(\"MMM-YYYY\") , \r\n      type: \"income\"\r\n    };\r\n    RouteService.getAll(param).then(response => {\r\n        var routes = response.data;\r\n\t\t    console.log(routes);\r\n        initialRows = new Array(routes.length);\r\n        routes.map((route, index) => {\r\n          initialRows[index]={};\r\n          initialRows[index][\"id\"]=route.id;\r\n          initialRows[index][\"name\"]=route.name;\r\n          initialRows[index][\"address\"]=route.address;    \r\n          \r\n          if(route.extraInfo){\r\n            initialRows[index][\"totalCustomer\"]=route.extraInfo.customerCount;\r\n            initialRows[index][\"customerQuantity\"]=route.extraInfo.customerTotalQuantity;\r\n\r\n            initialRows[index][\"served\"]=route.extraInfo.customerDeliveredCount;\r\n            initialRows[index][\"delivered\"]=route.extraInfo.customerDeliveredQuantity;\r\n            initialRows[index][\"pending\"]=route.extraInfo.customerPendingCount;\r\n          }\r\n        });\r\n        \r\n        this.routeStockService(param, initialRows);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  routeStockService(param, initialRows){\r\n    RouteStockService.getAll(param).then((response) => {\r\n      var stocks = response.data;    \r\n      if(stocks){\r\n        stocks.map((stock, index) => {\r\n        for(var initialRow of initialRows){\r\n          if(initialRow.id == stock.routeId){\r\n            initialRow[\"quantity\"]=stock.quantity;\r\n            initialRow[\"routeStockId\"]=stock.id;\r\n          break;\r\n          }\r\n        };\r\n        });\r\n      }\r\n      this.setState({\r\n        rows: initialRows\r\n      });\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n    });   \r\n  }  \r\n\r\n  rowChange(row, col) {\r\n    this.saveRoute(row[col.indexes],col);\r\n    this.setState({\r\n      rows: row\r\n    });\r\n  };\r\n\r\n  saveRoute(row,col) {\r\n    if(col.column.key != 'quantity'){\r\n        var data = {\r\n          id: row.id,\r\n          name: row.name,\r\n          address: row.address,\r\n        };\r\n        RouteService.update(row.id, data)\r\n          .then(response => {\r\n            console.log(response.data);\r\n          })\r\n          .catch(e => {\r\n            console.log(e);\r\n          });\r\n    }else{\r\n      var data = {\r\n        id: row.routeStockId,\r\n        routeId: row.id,\r\n        quantity: +row.quantity,\r\n        date: moment().format(\"DD\"),\r\n        month: moment().format(\"MMM-YYYY\")\r\n      };\r\n      if(data.id){\r\n        RouteStockService.update(data.id, data)\r\n        .then(response => {\r\n          console.log(response.data);\r\n          row.routeStockId = response.data.id;\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n      }else{\r\n        RouteStockService.create(data)\r\n        .then(response => {\r\n          console.log(response.data);\r\n          row.routeStockId = response.data.id;\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    const { rows } = this.state;\r\n\r\n    return (\r\n      <div >\r\n        <Grid container spacing={{ xs: 4}} >\r\n            <Grid item xs={6} sm={6}> \r\n              <Link to={\"/gui/route\"} className=\"nav-link\">\r\n                        Add Route\r\n              </Link>\r\n            </Grid>\r\n            <Grid item xs={6} sm={6}> \r\n            <Link className=\"nav-link\">\r\n                  {moment().format(\"DD-MMM-YYYY\")}\r\n              </Link>\r\n            </Grid>\r\n        </Grid>\r\n        <DataGrid columns={columns} rows={rows} onRowsChange={this.rowChange} />  \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useState , useEffect } from \"react\";\r\nimport RouteService from \"../../services/route.service\";\r\nimport DataGrid, {TextEditor, EditorProps, Row} from 'react-data-grid';\r\nimport RoutesList from \"../routes-list.component\";\r\nimport { useRoutes } from \"../hooks/route.hook\";\r\n\r\nexport default function DropDownEditor({ row, onRowChange }) {\r\n  const { selectData } = useRoutes(); \r\n    \r\n  return (\r\n    <select\r\n      className={TextEditor.textEditorClassname}\r\n      value={row.routeId}\r\n      onChange={(event) => onRowChange({ ...row, routeId: event.target.value }, true)}\r\n      autoFocus\r\n    >\r\n      {selectData && selectData.map((selectDataRecord) => (\r\n        <option key={selectDataRecord.id} value={selectDataRecord.id}>\r\n          {selectDataRecord.name}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n}","import React, { useState , useEffect } from \"react\";\r\nimport RouteService from \"../../services/route.service\";\r\n\r\nexport const useRoutes = () => {\r\n  const [selectData, setSelectData] = useState();\r\n  useEffect(() => {\r\n    if(!selectData || selectData.length === 0){\r\n      RouteService.getAll()\r\n      .then(response => {\r\n        setSelectData(response.data);\r\n        console.log(selectData);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n    }\r\n  }, [selectData]);\r\n  return {selectData};\r\n}","import React, { useState , useEffect, useMemo, useContext, createContext, useRef , useLayoutEffect } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport DataGrid, {TextEditor, SelectCellFormatter} from 'react-data-grid';\r\nimport DeliveryService from \"../services/delivery.service\";\r\nimport ProductService from \"../services/product.service\";\r\nimport DropDownEditor, {useRoute} from \"./editor/dropdown.component\";\r\nimport NumericEditor from \"./editor/numericeditor.component\";\r\nimport {baseURL} from \"../http-common\";\r\nimport moment from 'moment';\r\n\r\n//const rootClassname = 'rootClassname';\r\nconst filterColumnClassName = 'filter-cell';\r\nconst filterContainerClassname = 'filterContainerClassname';\r\nconst filterClassname = 'filterClassname';\r\n\r\nconst FilterContext = createContext(undefined);\r\n\r\nfunction inputStopPropagation(event) {\r\n  if (['ArrowLeft', 'ArrowRight'].includes(event.key)) {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n\r\nexport function stopPropagation(event) {\r\n  event.stopPropagation();\r\n}\r\n\r\nfunction getComparator(sortColumn) {\r\n  switch (sortColumn) {\r\n    case 'name':\r\n\tcase 'description':\r\n\r\n      return (a, b) => {\r\n        return a[sortColumn].localeCompare(b[sortColumn]);\r\n      };\r\n    default:\r\n      return (a, b) => {\r\n        return a[sortColumn] - b[sortColumn];\r\n      };\r\n  }\r\n}\r\n\r\nconst ProductList = props => {  \r\n\r\n  const [rows, setRows] = useState([]);\r\n\tconst [sortColumns, setSortColumns] = useState([]);  \r\n  const [filters, setFilters] = useState({\r\n    name: '',\r\n    enabled: true\r\n  });\r\n\r\n  const columns = [\r\n    { key: 'id', name: 'ID' , width: 40 , resizable: true,\r\n        headerCellClass: filterColumnClassName,\r\n        headerRenderer: (p) => (\r\n          <FilterRenderer {...p}>\r\n            {({ filters, ...rest }) => (\r\n              <input\r\n                {...rest}\r\n                className={filterClassname}\r\n                value={filters.name}\r\n                onChange={(e) =>\r\n                  setFilters({\r\n                    ...filters,\r\n                    name: e.target.value\r\n                  })\r\n                }\r\n                onKeyDown={inputStopPropagation}\r\n              />\r\n            )}\r\n          </FilterRenderer>\r\n        )\r\n    },\r\n    { key: 'name', name: 'Name' , editor: TextEditor, editorOptions: {editOnClick: true} , resizable: true },\r\n    { key: 'minRate', name: 'minRate' , editor: NumericEditor, editorOptions: {editOnClick: true} , resizable: true },\r\n    { key: 'maxRate', name: 'maxRate' , editor: NumericEditor, editorOptions: {editOnClick: true} , resizable: true },\r\n    { key: 'imagePath', name: 'ImagePath' , editor: TextEditor, editorOptions: {editOnClick: true} , resizable: true },\r\n    { key: 'description', name: 'Description' , editor: TextEditor, editorOptions: {editOnClick: true} , resizable: true },\r\n    { key: 'image', name: 'Image' , width: 80 , resizable: true ,\r\n\t\tformatter(props) {\r\n              return <>\r\n                <img src={props.row.imagePath.startsWith('http') ? props.row.imagePath\r\n                            : (baseURL+'static/images/P_'+ props.row.id + '_' + props.row.imagePath)} />\r\n              </>;\r\n            }},\r\n  ];\r\n\r\n    useEffect(() => {\r\n      var initialRows = null;\r\n      const paramProduct= { _sort: \"routeId\",\r\n                        _order: \"asc\"};\r\n     ProductService.getAll(paramProduct).then((response) => {\r\n        var products = response.data;\r\n        initialRows = new Array(products.length);\r\n        products.map((product, index) => {\r\n          initialRows[index]={};\r\n          initialRows[index][\"id\"]=product.id;\r\n          initialRows[index][\"name\"]=product.name;\r\n          initialRows[index][\"minRate\"]=product.minRate;\r\n          initialRows[index][\"maxRate\"]=product.maxRate;\r\n          initialRows[index][\"imagePath\"]=product.imagePath;\r\n          initialRows[index][\"description\"]=product.description;\r\n          \r\n        });\r\n        setRows(initialRows);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });    \r\n    }, []);\r\n\r\n    function rowChange(row, col) {\r\n      constructDeliveryUpdateData(row,col);\r\n      setRows (row);\r\n    }\r\n\r\n    function constructDeliveryUpdateData(row, col){\r\n      console.log(row[col.indexes].id+ \" - \"+row[col.indexes][col.column.key]);\r\n      saveDelivery(row[col.indexes]);\r\n    }\r\n\r\n    function saveDelivery (row) {\r\n      var data = {\r\n        id: row.id,\r\n        name: row.name,\r\n        minRate: row.minRate,\r\n        maxRate: row.maxRate,\r\n        imagePath: row.imagePath,\r\n        description: row.description,\r\n      };\r\n      console.log(data);\r\n      \r\n           ProductService.update(row.id, data)\r\n            .then(response => {\r\n              console.log(response.data);\r\n            })\r\n            .catch(e => {\r\n              console.log(e);\r\n            }); \r\n    }\r\n\r\n\t  const filteredRows = useMemo( () => {\r\n      function filter(){\r\n        var filteredRows = null;\r\n         filteredRows = rows.filter((r) => {\r\n          return (\r\n            (filters.name ? r.name.includes(filters.name) : true)\r\n          );\r\n        })\r\n        if (sortColumns.length === 0) return filteredRows;\r\n        filteredRows = [...filteredRows].sort((a, b) => {\r\n          for (const sort of sortColumns) {\r\n            const comparator = getComparator(sort.columnKey);\r\n            const compResult = comparator(a, b);\r\n            if (compResult !== 0) {\r\n              return sort.direction === 'ASC' ? compResult : -compResult;\r\n            }\r\n          }\r\n          return 0;\r\n        })\r\n        return filteredRows;\r\n      }\r\n      return filter();\r\n    }, [rows, filters, sortColumns]);\r\n  \r\n    return (\r\n      <div >\r\n                <Link to={\"/gui/addProduct\"} className=\"nav-link\">\r\n                  Add Product\r\n                </Link>\r\n        <div className=\"rootClassname\">\r\n          <FilterContext.Provider value={filters}>\r\n            <DataGrid columns={columns} onRowsChange={rowChange} \r\n             defaultColumnOptions={{\r\n              sortable: true,\r\n              resizable: true\r\n            }}\r\n              className={filters.enabled ? filterContainerClassname : undefined}\r\n              rows={filteredRows}\r\n              sortColumns={sortColumns}\r\n              onSortColumnsChange={setSortColumns}\r\n              headerRowHeight={filters.enabled ? 50 : undefined}\r\n              />\r\n            </FilterContext.Provider>\r\n          </div>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default ProductList;\r\n\r\n  \r\nfunction FilterRenderer({isCellSelected,column,children}) {\r\n  const filters = useContext(FilterContext);\r\n  const { ref, tabIndex } = useFocusRef(isCellSelected);\r\n\r\n  return (\r\n    <>\r\n      <div>{column.name}</div>\r\n      {filters.enabled && <div>{children({ ref, tabIndex, filters })}</div>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport function useFocusRef(isSelected) {\r\n  const ref = useRef(null);\r\n\r\n  useLayoutEffect(() => {\r\n    if (!isSelected) return;\r\n    ref.current && ref.current.focus({ preventScroll: true });\r\n  }, [isSelected]);\r\n\r\n\r\n  return {\r\n    ref,\r\n    tabIndex: isSelected ? 0 : -1\r\n  };\r\n}","import http from \"../http-common\";\r\n\r\nclass SellerProductService {\r\n  getAll(params) {\r\n    return http.get(\"/sellerProducts\", { params });\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/sellerProducts/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/sellerProducts\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/sellerProducts/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/sellerProducts/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(\"/sellerProducts\");\r\n  }\r\n}\r\n\r\nexport default new SellerProductService();\r\n","import React, { Component } from \"react\";\r\nimport moment from \"moment\";\r\nimport ProductService from \"../services/product.service\";\r\nimport SellerProductService from \"../services/seller.product.service\";\r\nimport {baseURL} from \"../http-common\";\r\nimport UploadService from \"../services/upload-files.service\";\r\n\r\nexport default class SellerProduct extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeName = this.onChangeName.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    this.onChangeImagePath = this.onChangeImagePath.bind(this);\r\n    this.onChangeBrand = this.onChangeBrand.bind(this);\r\n    this.onChangeCompany = this.onChangeCompany.bind(this);\r\n    this.onChangeMrp = this.onChangeMrp.bind(this);\r\n    this.onChangeWeight = this.onChangeWeight.bind(this);\r\n    this.onChangeUnit = this.onChangeUnit.bind(this);\r\n  \tthis.onChangeMeasurment = this.onChangeMeasurment.bind(this);\r\n    this.onChangeQuantity = this.onChangeQuantity.bind(this);\r\n    this.onChangeRate = this.onChangeRate.bind(this);\r\n    this.onChangeDiscount = this.onChangeDiscount.bind(this);\r\n    this.onChangeDiscountType = this.onChangeDiscountType.bind(this);\r\n    this.onChangeDeliveryCharge = this.onChangeDeliveryCharge.bind(this);\r\n    this.saveTutorial = this.saveTutorial.bind(this);\r\n    this.newTutorial = this.newTutorial.bind(this);\r\n    this.onChangeproduct=this.onChangeproduct.bind(this);\r\n    this.getproduct=this.getproduct.bind(this);\r\n    this.selectFile=this.selectFile.bind(this);\r\n    this.myRef = React.createRef();\r\n    this.myRefUnit = React.createRef();    \r\n    const today = moment();\r\n    this.state = {\r\n      id: null,\r\n      name: \"\",\r\n      description: \"\", \r\n      imagePath: \"\",\r\n      brand: \"\",\r\n\t    company:\"\",\r\n      mrp:\"\",\r\n      weight:\"\",\r\n      unit:\"\",\r\n      measurment:\"\",\r\n      quantity:\"\",\r\n      rate:\"\",\r\n      discount:\"\",\r\n      discountType:\"\",\r\n      deliveryCharge:\"\",\r\n      products:[],\r\n      productId: \"\",\r\n      submitted: false,\r\n      message: \"\",\r\n      selectedFiles: undefined,\r\n      uploadDisable: false,\r\n      displayImagePath: \"\",\r\n    };\r\n  }\r\n\r\n\tonChangeType(e){\r\n\t\tthis.setState({\r\n\t\t  type: e.target.value\r\n\t\t});\r\n\t}\r\n  onChangeName(e) {\r\n    this.setState({\r\n      name: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeDescription(e) {\r\n    this.setState({\r\n      description: e.target.value\r\n    });\r\n  }\r\n  onChangeImagePath(e) {\r\n    this.setState({\r\n      imagePath: e.target.value,\r\n      selectedFiles: undefined,\r\n      uploadDisable: true\r\n    });\r\n  }\r\n  selectFile(event) {\r\n    this.setState({\r\n      selectedFiles: event.target.files,\r\n      imagePath: event.target.files[0].name\r\n    });\r\n  }\r\n\r\n  onChangeBrand(e) {\r\n    if (e.target.value.length<11 ){\r\n    this.setState({\r\n    brand: e.target.value  \r\n    });\r\n  }\r\n  }\r\n\r\n  onChangeCompany(e) {\r\n    this.setState({\r\n      company: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeMrp(e) {\r\n    this.setState({\r\n      mrp: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeWeight(e) {\r\n    this.setState({\r\n      weight: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeUnit(e) {\r\n    this.setState({\r\n      unit: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeMeasurment(e) {\r\n    this.setState({\r\n      measurment: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeQuantity(e) {\r\n    this.setState({\r\n      quantity: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeRate(e) {\r\n    this.setState({\r\n      rate: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeDiscount(e) {\r\n    this.setState({\r\n      discount: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeDiscountType(e) {\r\n    this.setState({\r\n      discountType: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeDeliveryCharge(e) {\r\n    this.setState({\r\n      deliveryCharge: e.target.value\r\n    });\r\n  }\r\n  onChangeproduct(e) {\r\n    this.setState({\r\n      productId: e.target.value\r\n    });\r\n    console.log(e.target.value);\r\n    this.state.products.map((product)=>{\r\n      if (e.target.value==product.id){\r\n        this.setState({\r\n          description: product.description,\r\n          displayImagePath: product.imagePath\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  onChangeActive(e) {\r\n    this.setState({\r\n      active: e.target.checked\r\n    });\r\n  }\r\n\r\n  upload(productId) {\r\n    let currentFile = this.state.selectedFiles[0];\r\n\r\n    this.setState({\r\n      currentFile: currentFile,\r\n    });\r\n\r\n    UploadService.upload(currentFile, 'SP_'+productId).then((response) => {\r\n        this.setState({\r\n          message: response.data.message,\r\n        });\r\n      })\r\n      .catch(() => {\r\n        this.setState({\r\n          message: \"Could not upload the file!\",\r\n          currentFile: undefined,\r\n        });\r\n      });\r\n\r\n    this.setState({\r\n      selectedFiles: undefined,\r\n    });\r\n  }\r\n\r\n\r\n  saveTutorial(e) {\r\n\te.target.disabled=true;\r\n  \r\n    var data = {\r\n      name: this.state.name,\r\n      description: this.state.description,\r\n      imagePath: this.state.imagePath,\r\n      brand: this.state.brand,\r\n      company: this.state.company,\r\n      mrp: this.state.mrp,\r\n      weight: this.state.weight,\r\n      unit: this.state.unit,\r\n      measurment: this.state.measurment,\r\n      quantity: this.state.quantity,\r\n      rate: this.state.rate,\r\n      discount: this.state.discount,\r\n      discountType: this.state.discountType,\r\n      deliveryCharge: this.state.deliveryCharge,\r\n      active: this.state.active,\r\n      productId: this.state.productId,\r\n     \r\n    };\r\nconsole.log(data);\r\nthis.setState({submitted: true});\r\n    SellerProductService.create(data)\r\n      .then(response => {\r\n        this.setState({\r\n          id: response.data.id,\r\n          name: response.data.name,\r\n          description: response.data.description,\r\n          imagePath: response.data.imagePath,\r\n          brand: response.data.brand,\r\n          company: response.data.company,\r\n          mrp: response.data.mrp,\r\n          weight: response.data.weight,\r\n          unit: response.data.unit,\r\n          measurment: response.data.measurment,\r\n          quantity: response.data.quantity,\r\n          rate: response.data.rate,\r\n          discount: response.data.discount,\r\n          discountType: response.data.discountType,\r\n          deliveryCharge: response.data.deliveryCharge,\r\n          active: response.data.active,\r\n          productId: response.data.productId,\r\n         \r\n          submitted: true\r\n        });\r\n        if(this.state.selectedFiles){\r\n          this.upload(response.data.id);\r\n        }\r\n\t\t    e.target.disabled=false;\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  newTutorial() {\r\n    this.setState({\r\n      id: null,\r\n      name: \"\",\r\n      description: \"\",\r\n      imagePath: \"\",\r\n      brand: \"\",\r\n      company: \"\",\r\n      mrp: \"\",\r\n      weight: \"\",\r\n      unit: \"\",\r\n      measurment: \"\",\r\n      quantity: \"\",\r\n      rate: \"\",\r\n      discount: \"\",\r\n      discountType: \"\",\r\n      deliveryCharge: \"\",\r\n      productId: \"\",\r\n      submitted: false\r\n    });\r\n  }\r\n\r\n  //\r\n  componentDidMount() {\r\n    this.getproduct();\r\n  }\r\n\r\n  getproduct(){\r\n    ProductService.getAll()\r\n      .then(response => {\r\n        this.setState({\r\n          products: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { products, message } = this.state;\r\n    return (\r\n      <div className=\"submit-form\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>You submitted successfully!</h4>\r\n            {message}\r\n            <button className=\"btn btn-success\" onClick={this.newTutorial}>\r\n              Add\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className=\"form-group\">        \r\n                  <label htmlFor=\"productId\">Product Name</label>\r\n                  <div className=\"select-container\">\r\n                    <select className=\"form-control\" value={this.state.productId} \r\n                    onChange={this.onChangeproduct} ref={this.myRef} name=\"productId\">\r\n                      <option value=\"\">Select Product</option>\r\n                      {products && products.map((option) => (\r\n                        <option value={option.id}>{option.name}</option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"description\">Description</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"description\"\r\n                required\r\n                value={this.state.description}\r\n                onChange={this.onChangeDescription}\r\n                name=\"description\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"imagePath\">Imagepath</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"imagePath\"\r\n                required\r\n                value={this.state.imagePath}\r\n                onChange={this.onChangeImagePath}\r\n                name=\"imagePath\"\r\n              />\r\n              <img alt=\"\" height={60} width={80} src={this.state.displayImagePath.startsWith('http') ? this.state.displayImagePath\r\n                            : (baseURL+'static/images/P_'+ this.state.productId + '_' + this.state.displayImagePath)} />\r\n               <label className=\"btn btn-default\">\r\n                <input disabled={this.state.uploadDisable} type=\"file\" onChange={this.selectFile} />\r\n              </label>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"brand\">Brand</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"brand\"\r\n                required\r\n                value={this.state.brand}\r\n                onChange={this.onChangeBrand}\r\n                name=\"brand\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"company\">Company Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"company\"\r\n                required\r\n                value={this.state.company}\r\n                onChange={this.onChangeCompany}\r\n                name=\"company\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"mrp\">MRP</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"mrp\"\r\n                required\r\n                value={this.state.mrp}\r\n                onChange={this.onChangeMrp}\r\n                name=\"mrp\"\r\n              />\r\n            </div>\r\n           \r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"weight\">Weight</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"weight\"\r\n                required\r\n                value={this.state.weight}\r\n                onChange={this.onChangeWeight}\r\n                name=\"weight\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">        \r\n                  <label htmlFor=\"unit\">Unit</label>\r\n                  <div className=\"select-container\">\r\n                    <select className=\"form-control\" value={this.state.unit} \r\n\t\t\t\t\t\tonChange={this.onChangeUnit} ref={this.myRefUnit} name=\"unit\">\r\n                        <option value=\"killogram\">Kg</option>\r\n                        <option value=\"gram\">grm</option>\r\n                        <option value=\"litre\">litre</option>\r\n\r\n                    </select>\r\n                  </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"measurment\">Measurment</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"measurment\"\r\n                required\r\n                value={this.state.measurment}\r\n                onChange={this.onChangeMeasurment}\r\n                name=\"measurment\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"quantity\">Quantity</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"quantity\"\r\n                required\r\n                value={this.state.quantity}\r\n                onChange={this.onChangeQuantity}\r\n                name=\"quantity\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"rate\">Product Rate</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"rate\"\r\n                required\r\n                value={this.state.rate}\r\n                onChange={this.onChangeRate}\r\n                name=\"rate\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"discount\">Discount </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"discount\"\r\n                required\r\n                value={this.state.discount}\r\n                onChange={this.onChangeDiscount}\r\n                name=\"discount\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"discountType\">DiscountType </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"discountType\"\r\n                required\r\n                value={this.state.discountType}\r\n                onChange={this.onChangeDiscountType}\r\n                name=\"discountType\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"deliveryCharge\">DeliveryCharge </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"deliveryCharge\"\r\n                required\r\n                value={this.state.deliveryCharge}\r\n                onChange={this.onChangeDeliveryCharge}\r\n                name=\"deliveryCharge\"\r\n              />\r\n            </div>\r\n\r\n            <button onClick={this.saveTutorial} className=\"btn btn-success\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useState , useEffect, useMemo, useContext, createContext, useRef , useLayoutEffect } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport DataGrid, {TextEditor, SelectCellFormatter} from 'react-data-grid';\r\nimport DeliveryService from \"../services/delivery.service\";\r\nimport SellerProductService from \"../services/seller.product.service\";\r\nimport DropDownEditor, {useRoute} from \"./editor/dropdown.component\";\r\nimport NumericEditor from \"./editor/numericeditor.component\";\r\nimport moment from 'moment';\r\nimport {baseURL} from \"../http-common\";\r\n\r\n//const rootClassname = 'rootClassname';\r\nconst filterColumnClassName = 'filter-cell';\r\nconst filterContainerClassname = 'filterContainerClassname';\r\nconst filterClassname = 'filterClassname';\r\n\r\nconst FilterContext = createContext(undefined);\r\n\r\nfunction inputStopPropagation(event) {\r\n  if (['ArrowLeft', 'ArrowRight'].includes(event.key)) {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n\r\nexport function stopPropagation(event) {\r\n  event.stopPropagation();\r\n}\r\n\r\nfunction getComparator(sortColumn) {\r\n  switch (sortColumn) {\r\n    case 'name':\r\n\t  case 'description':\r\n    case 'brand':\r\n    case 'company':\r\n    case 'measurment':\r\n    case 'discountType':\r\n           \r\n    return (a, b) => {\r\n        return a[sortColumn].localeCompare(b[sortColumn]);\r\n      };\r\n    default:\r\n      return (a, b) => {\r\n        return a[sortColumn] - b[sortColumn];\r\n      };\r\n  }\r\n}\r\n\r\nconst SellerProductList = props => {  \r\n\r\n  const [rows, setRows] = useState([]);\r\n\tconst [sortColumns, setSortColumns] = useState([]);  \r\n  const [filters, setFilters] = useState({\r\n    name: '',\r\n    enabled: true\r\n  });\r\n\r\n  const columns = [\r\n    { key: 'id', name: 'ID' , width: 40 , resizable: true,\r\n        headerCellClass: filterColumnClassName,\r\n        headerRenderer: (p) => (\r\n          <FilterRenderer {...p}>\r\n            {({ filters, ...rest }) => (\r\n              <input\r\n                {...rest}\r\n                className={filterClassname}\r\n                value={filters.name}\r\n                onChange={(e) =>\r\n                  setFilters({\r\n                    ...filters,\r\n                    name: e.target.value\r\n                  })\r\n                }\r\n                onKeyDown={inputStopPropagation}\r\n              />\r\n            )}\r\n          </FilterRenderer>\r\n        )\r\n    },\r\n    { key: 'name', name: 'Name' , editor: TextEditor, editorOptions: {editOnClick: true} , resizable: true },\r\n    { key: 'description', name: 'Description' , editor: TextEditor, editorOptions: {editOnClick: true} , resizable: true },\r\n    { key: 'imagePath', name: 'Imagepath' , editor: TextEditor, editorOptions: {editOnClick: true} , resizable: true },\r\n    { key: 'brand', name: 'Brand' , editor: TextEditor, editorOptions: {editOnClick: true} , resizable: true },\r\n    { key: 'company', name: 'Company' , editor: TextEditor, editorOptions: {editOnClick: true} , resizable: true },\r\n    { key: 'mrp', name: 'Mrp' , editor: NumericEditor, editorOptions: {editOnClick: true} , resizable: true },\r\n    { key: 'weight', name: 'Weight' , editor: NumericEditor, editorOptions: {editOnClick: true} , resizable: true },\r\n    { key: 'unit', name: 'Unit' , editor: NumericEditor, editorOptions: {editOnClick: true} , resizable: true },\r\n    { key: 'measurment', name: 'Measurment' , editor: NumericEditor, editorOptions: {editOnClick: true} , resizable: true },\r\n    { key: 'quantity', name: 'Quantity' , editor: NumericEditor, editorOptions: {editOnClick: true} , resizable: true },\r\n    { key: 'rate', name: 'Rate' , editor: NumericEditor, editorOptions: {editOnClick: true} , resizable: true },\r\n    { key: 'discount', name: 'Discount' , editor: NumericEditor, editorOptions: {editOnClick: true} , resizable: true },\r\n    { key: 'discountType', name: 'DiscountType' , editor: NumericEditor, editorOptions: {editOnClick: true} , resizable: true },\r\n    { key: 'deliveryCharge', name: 'DeliveryCharge' , editor: NumericEditor, editorOptions: {editOnClick: true} , resizable: true,},\r\n    { key: 'image', name: 'Image' , width: 80 , resizable: true ,\r\n\t\tformatter(props) {\r\n              return <>\r\n                <img src={props.row.imagePath ? ( props.row.imagePath.startsWith('http') ? props.row.imagePath\r\n                                                    : (baseURL+'static/images/SP_'+ props.row.id + '_' + props.row.imagePath)\r\n                                                  ) : (baseURL+'static/images/P_'+ props.row.productId + '_' + props.row.productImage)} />\r\n              </>;\r\n            }},\r\n  ];\r\n\r\n    useEffect(() => {\r\n      var initialRows = null;\r\n      const paramSellerProduct= { _sort: \"routeId\", _order: \"asc\"};\r\n     SellerProductService.getAll(paramSellerProduct).then((response) => {\r\n        var sellerproducts = response.data;\r\n        initialRows = new Array(sellerproducts.length);\r\n        sellerproducts && sellerproducts.map((sellerproducts, index) => {\r\n          initialRows[index]={};\r\n          initialRows[index][\"id\"]=sellerproducts.id;\r\n          initialRows[index][\"name\"]=sellerproducts.name;\r\n          initialRows[index][\"description\"]=sellerproducts.description;\r\n          initialRows[index][\"imagePath\"]=sellerproducts.imagePath;\r\n          initialRows[index][\"brand\"]=sellerproducts.brand;\r\n          initialRows[index][\"company\"]=sellerproducts.company;\r\n          initialRows[index][\"mrp\"]=sellerproducts.mrp;\r\n          initialRows[index][\"weight\"]=sellerproducts.weight;\r\n          initialRows[index][\"unit\"]=sellerproducts.unit;\r\n          initialRows[index][\"measurment\"]=sellerproducts.measurment;\r\n          initialRows[index][\"quantity\"]=sellerproducts.quantity;\r\n          initialRows[index][\"rate\"]=sellerproducts.rate;\r\n          initialRows[index][\"discount\"]=sellerproducts.discount;\r\n          initialRows[index][\"discountType\"]=sellerproducts.discountType;\r\n          initialRows[index][\"deliveryCharge\"]=sellerproducts.deliveryCharge;\r\n          initialRows[index][\"productImage\"]=sellerproducts.product.imagePath;\r\n          initialRows[index][\"productId\"]=sellerproducts.product.id;\r\n          initialRows[index][\"name\"]=sellerproducts.product.name;\r\n        });\r\n        setRows(initialRows);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });    \r\n    }, []);\r\n\r\n    function rowChange(row, col) {\r\n      constructDeliveryUpdateData(row,col);\r\n      setRows (row);\r\n    }\r\n\r\n    function constructDeliveryUpdateData(row, col){\r\n      console.log(row[col.indexes].id+ \" - \"+row[col.indexes][col.column.key]);\r\n      saveDelivery(row[col.indexes]);\r\n    }\r\n\r\n    function saveDelivery (row) {\r\n      var data = {\r\n        id: row.id,\r\n        name: row.name,\r\n        description: row.description,\r\n        imagePath: row.imagePath,\r\n        brand: row.brand,\r\n        company: row.company,\r\n        mrp: row.mrp,\r\n        weight: row.weight,\r\n        unit: row.unit,\r\n        measurment: row.measurment,\r\n        quantity: row.quantity,\r\n        rate: row.rate,\r\n        discount: row.discount,\r\n        discountType: row.discountType,\r\n        deliveryCharge: row.deliveryCharge,\r\n        \r\n      };\r\n      console.log(data);\r\n      \r\n           SellerProductService.update(row.id, data)\r\n            .then(response => {\r\n              console.log(response.data); \r\n            })\r\n            .catch(e => {\r\n              console.log(e);\r\n            }); \r\n    }\r\n\r\n\t  const filteredRows = useMemo( () => {\r\n      function filter(){\r\n        var filteredRows = null;\r\n         filteredRows = rows.filter((r) => {\r\n          return (\r\n            (filters.name ? r.name.includes(filters.name) : true)\r\n          );\r\n        })\r\n        if (sortColumns.length === 0) return filteredRows;\r\n        filteredRows = [...filteredRows].sort((a, b) => {\r\n          for (const sort of sortColumns) {\r\n            const comparator = getComparator(sort.columnKey);\r\n            const compResult = comparator(a, b);\r\n            if (compResult !== 0) {\r\n              return sort.direction === 'ASC' ? compResult : -compResult;\r\n            }\r\n          }\r\n          return 0;\r\n        })\r\n        return filteredRows;\r\n      }\r\n      return filter();\r\n    }, [rows, filters, sortColumns]);\r\n  \r\n    return (\r\n      <div >\r\n                <Link to={\"/gui/sellerProduct\"} className=\"nav-link\">\r\n                  Add Seller Product\r\n                </Link>\r\n        <div className=\"rootClassname\">\r\n          <FilterContext.Provider value={filters}>\r\n            <DataGrid columns={columns} onRowsChange={rowChange} \r\n             defaultColumnOptions={{\r\n              sortable: true,\r\n              resizable: true\r\n            }}\r\n              className={filters.enabled ? filterContainerClassname : undefined}\r\n              rows={filteredRows}\r\n              sortColumns={sortColumns}\r\n              onSortColumnsChange={setSortColumns}\r\n              headerRowHeight={filters.enabled ? 50 : undefined}\r\n              />\r\n            </FilterContext.Provider>\r\n          </div>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default SellerProductList;\r\n\r\n  \r\nfunction FilterRenderer({isCellSelected,column,children}) {\r\n  const filters = useContext(FilterContext);\r\n  const { ref, tabIndex } = useFocusRef(isCellSelected);\r\n\r\n  return (\r\n    <>\r\n      <div>{column.name}</div>\r\n      {filters.enabled && <div>{children({ ref, tabIndex, filters })}</div>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport function useFocusRef(isSelected) {\r\n  const ref = useRef(null);\r\n\r\n  useLayoutEffect(() => {\r\n    if (!isSelected) return;\r\n    ref.current && ref.current.focus({ preventScroll: true });\r\n  }, [isSelected]);\r\n\r\n\r\n  return {\r\n    ref,\r\n    tabIndex: isSelected ? 0 : -1\r\n  };\r\n}","import http from \"../http-common\";\r\n\r\nclass BillService {\r\n  getAll(params) {\r\n    return http.get(\"/bills\", { params });\r\n  }\r\n\r\n  generateBillsCollection(params) {\r\n    return http.get(\"/generateBillsCollection\",{params});\r\n  }\r\n  \r\n  validateCollectionBillsGeneration(type,params) {\r\n    return http.get(`/generateBillsCollection/${type}`,{params});\r\n}\r\n\r\n  generateBills(params) {\r\n    return http.get(\"/generateBills\", { params });\r\n  }\r\n  \r\n  validateBillGeneration(month,type) {\r\n    return http.get(`/generateBills/${month}/${type}`);\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/bills/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/bills\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/bills/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/bills/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(\"/bills\");\r\n  }\r\n}\r\n\r\nexport default new BillService();\r\n","import http from \"../http-common\";\r\n\r\nclass PaymentService {\r\n  getAll(params) {\r\n    return http.get(\"/payments\", { params });\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/payments/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/payments\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/payments/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/payments/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(\"/payments\");\r\n  }\r\n}\r\n\r\nexport default new PaymentService();\r\n","import React, { Component } from \"react\";\r\nimport moment from 'moment';\r\n\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\n\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nimport { experimentalStyled as styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nimport BillService from \"../services/bill.service\";\r\nimport PaymentService from \"../services/payment.service\";\r\nimport CustomerService from \"../services/customer.service\";\r\n\r\nexport default class Modal extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.getCustomerBill = this.getCustomerBill.bind(this);\r\n      this.savePayment = this.savePayment.bind(this);\r\n      this.saveMobNo = this.saveMobNo.bind(this);\r\n      this.onChangePayment = this.onChangePayment.bind(this);\r\n      this.onChangeMobNo = this.onChangeMobNo.bind(this);\r\n      this.handleClickOpen = this.handleClickOpen.bind(this);\r\n      this.handleClose = this.handleClose.bind(this);\r\n      this.getPayment = this.getPayment.bind(this);\r\n      this.getBill = this.getBill.bind(this);\r\n  \r\n      this.state = {\r\n        partyId: props.partyId,\r\n        payment: null,\r\n        prevBill: {},\r\n        currentBill: {},\r\n        open: false,\r\n        mobNo: null\r\n      }; \r\n    }\r\n  \r\n    componentDidMount() {\r\n      this.getCustomerBill(this.props);\r\n    }\r\n\r\n    \r\n    onChangePayment(e){\r\n      this.setState({\r\n        payment: +e.target.value\r\n      });\r\n    }\r\n\r\n    onChangeMobNo(e){\r\n      if (e.target.value.length<11 ){\r\n        this.setState({\r\n          mobNo: +e.target.value\r\n        });\r\n      }\r\n    }\r\n    saveMobNo(e){\r\n      e.target.disabled=true;\r\n      if(this.state.mobNo){\r\n        var data = {id: this.props.partyId};\r\n             CustomerService.updateMobNo(this.props.partyId, this.state.mobNo, data)\r\n              .then(response => {\r\n                console.log(response.data);\r\n                e.target.disabled=false;\r\n              })\r\n              .catch(e => {\r\n                console.log(e);\r\n              }); \r\n      }\r\n    }\r\n\r\n    savePayment(e){\r\n\t    e.target.disabled=true;\r\n      if(this.state.payment){\r\n        var data = {\r\n          partyId: this.props.partyId,\r\n          month: moment(this.props.date, \"DD-MMM-YYYY\").format(\"MMM-YYYY\"),\r\n          date: moment(this.props.date, \"DD-MMM-YYYY\").format(\"DD\"),\r\n\t\t      active: true,\r\n          payment: this.state.payment,\r\n          type: \"income\"\r\n        };\r\n        PaymentService.create(data)\r\n          .then(response => {\r\n            this.setState({\r\n              currentBill: {\r\n                quantity: this.state.currentBill.quantity,\r\n                rate: this.state.currentBill.rate,\r\n                bill: this.state.currentBill.bill,\r\n                dues: this.state.currentBill.dues,\r\n                month: moment(this.props.date, \"DD-MMM-YYYY\").format(\"MMM-YYYY\"),\r\n                payment: (this.state.currentBill.payment? this.state.currentBill.payment : 0) + response.data.payment\r\n              }\r\n            });\r\n            console.log(response.data);\r\n\t\t\t      e.target.disabled=false;\r\n            this.handleClickOpen();\r\n            this.state.payment=\"\";\r\n          })\r\n          .catch(e => {\r\n            console.log(e);\r\n          });\r\n        }\r\n    }\r\n  \r\n    handleClickOpen = () => {\r\n      this.setState({\r\n        open: true\r\n      });\r\n    };\r\n  \r\n    handleClose = () => {\r\n      this.setState({\r\n        open: false\r\n      });\r\n    };\r\n  \r\n    getCustomerBill(props){\r\n      var date = moment(props.date, \"DD-MMM-YYYY\");\r\n      var month = date.format(\"MMM-YYYY\");\r\n\r\n      var currentBill = {month: month};\r\n      this.getPayment(month, props.partyId, currentBill);\r\n      this.getBill(month, props.partyId, \"currentBill\", currentBill);\r\n    \r\n      var monthprev = date.clone().subtract(1, 'months').format(\"MMM-YYYY\");\r\n      var prevBill = {month: monthprev};\r\n      this.getPayment(monthprev, props.partyId, prevBill);\r\n      this.getBill(monthprev, props.partyId, \"prevBill\", prevBill);\r\n    \r\n    }\r\n\r\n    getBill(month, partyId, billName, prevBill){\r\n      var params ={ \"partyId\" : partyId ,\r\n              \"month\": month, \"active\": true, type: \"income\"};\r\n      BillService.getAll(params).then(response => {\r\n        var bills = response.data;\r\n        if(bills){\r\n          bills.map((bill) => {\r\n              prevBill[\"quantity\"] = bill.quantity;\r\n              prevBill[\"rate\"]=bill.rate;\r\n              prevBill[\"bill\"]=bill.bill;\r\n              prevBill[\"dues\"]=bill.dues;\r\n          });\r\n        }\r\n        this.setState({\r\n          [billName]: prevBill\r\n        });\r\n        console.log(this.state);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n    }\r\n\r\n    getPayment(month, partyId, prevBill){\r\n      var params ={ \"partyId\" : partyId ,\r\n                    \"month\": month, \"active\": true, type: \"income\"};\r\n      PaymentService.getAll(params).then(response => {\r\n        var bills = response.data;\r\n        if(bills){\r\n          bills.map((bill) => {\r\n            if(bill.category == 'discount'){\r\n              prevBill[\"discount\"]=bill.payment;\r\n            } else{\r\n              if(prevBill[\"payment\"]){\r\n                prevBill[\"payment\"]=prevBill[\"payment\"]+bill.payment;\r\n              }else{\r\n                prevBill[\"payment\"]=+bill.payment\r\n              }\r\n            }\r\n          });\r\n        }\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n    }\r\n  \r\n    render() {\r\n      const {prevBill, currentBill} = this.state;\r\n      if(this.props.partyId != this.state.partyId){\r\n        this.getCustomerBill(this.props);\r\n        this.setState({\r\n          partyId: this.props.partyId\r\n        });\r\n      }\r\n      return (\r\n        <div>\r\n          <h1 align=\"center\">{this.props.name}</h1>\r\n          <Grid container spacing={{ xs: 4}} >\r\n            <Grid item xs={12} sm={6}> \r\n                <div className=\"form-group\">\r\n                      <label htmlFor=\"date\"> Date</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"date\"\r\n                        required\r\n\t\t\t\t\t\t            readOnly =\"readOnly\"\r\n                        value={this.props.date}\r\n                        onChange={this.props.onDate}\r\n                        name=\"date\"\r\n                      />\r\n                </div>\r\n\t\t\t\t<div className=\"form-group\">\r\n                      <label htmlFor=\"amount\">Amount</label>\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        id=\"amount\"\r\n                        required\r\n                        value={this.props.amount}\r\n                        onChange={this.props.onAmount}\r\n                        name=\"amount\"\r\n                      />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                      <label htmlFor=\"defaultQuantity\">Quantity</label>\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        id=\"defaultQuantity\"\r\n                        required\r\n                        value={this.props.defaultQuantity}\r\n                        onChange={this.props.onQuantity}\r\n                        name=\"defaultQuantity\"\r\n                      />\r\n                </div>\r\n                    <div className=\"form-group\" style={{ textAlign: 'center' }}>\r\n                      <button className=\"btn btn-success\" onClick={this.props.onUpdate}>Update & Next</button>\r\n                    </div>\r\n                    <div className=\"form-group\" style={{ textAlign: 'center' }}>\r\n                      <button className=\"btn btn-success\" onClick={this.props.onModalClose}>Back</button>\r\n                      {\" \"}\r\n                      <button className=\"btn btn-success\" onClick={this.props.onPrev}>{'\\u2B05'}{this.props.previousTitle} </button>\r\n                      {\" \"}                      \r\n                      <button className=\"btn btn-success\" onClick={this.props.onNext}>{this.props.nextTitle} {'\\u27A1'}</button>\r\n                    </div>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}> \r\n                <div className=\"form-group\">\r\n  \r\n                <TableContainer component={Paper}>\r\n                        <Table sx={{ minWidth: 200 }} aria-label=\"simple table\">\r\n                          <TableHead>\r\n                            <TableRow>\r\n                              <TableCell>Billing</TableCell>\r\n                              <TableCell align=\"right\">Prev Month ({prevBill.month})</TableCell>\r\n                              <TableCell align=\"right\">Current Month ({currentBill.month})</TableCell>\r\n                            </TableRow>\r\n                          </TableHead>\r\n                          <TableBody>\r\n                              <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    Quantity\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">{prevBill.quantity}</TableCell>\r\n                                <TableCell align=\"right\">{currentBill.quantity}</TableCell>\r\n                              </TableRow>\r\n                              <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    Rate\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">{prevBill.rate}</TableCell>\r\n                                <TableCell align=\"right\">{currentBill.rate}</TableCell>\r\n                              </TableRow>\r\n                              <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    Bill\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">{prevBill.bill}</TableCell>\r\n                                <TableCell align=\"right\">{currentBill.bill}</TableCell>\r\n                              </TableRow>\r\n                              <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    Payment\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">{prevBill.payment}</TableCell>\r\n                                <TableCell align=\"right\">{currentBill.payment}</TableCell>\r\n                              </TableRow>\r\n                              <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    Dues\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">{prevBill.dues}</TableCell>\r\n                                <TableCell align=\"right\">{currentBill.dues}</TableCell>\r\n                              </TableRow>\r\n                          </TableBody>\r\n                        </Table>\r\n                      </TableContainer>\r\n                    \r\n                </div>\r\n                <div className=\"form-group\">\r\n                      <label htmlFor=\"payment\">Payment</label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        id=\"payment\"\r\n                        required\r\n                        value={this.state.payment}\r\n                        onChange={this.onChangePayment}\r\n                        name=\"payment\"\r\n\t\t\t\t\t\t            type=\"number\"\r\n                      />\r\n                </div>\r\n                <button className=\"btn btn-success\" onClick={this.savePayment}>Payment Received</button>\r\n\r\n                <div className=\"form-group\">\r\n                      <label htmlFor=\"mobNo\">MobileNo</label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        id=\"mobNo\"\r\n                        required\r\n                        value={this.state.mobNo}\r\n                        onChange={this.onChangeMobNo}\r\n                        name=\"mobNo\"\r\n\t\t\t\t\t\t            type=\"number\"\r\n                      />\r\n                </div>\r\n                <button className=\"btn btn-success\" onClick={this.saveMobNo}>Set Mob No</button>  \r\n          </Grid>\r\n        </Grid>\r\n  \r\n        <Dialog\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\">\r\n          <DialogTitle id=\"alert-dialog-title\">\r\n            {\"Payments\"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              Payment of amount {this.state.payment} is confirmed.\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose}>Close</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        </div>\r\n      );\r\n    }\r\n  }","import React, { Component } from \"react\";\r\nimport moment from 'moment';\r\n\r\nimport { experimentalStyled as styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport Grid from '@mui/material/Grid';\r\n\r\n\r\nimport CustomerService from \"../services/customer.service\";\r\nimport DeliveryService from \"../services/delivery.service\";\r\nimport Modal from \"./modal.component\";\r\n\r\nexport default class ProjectData extends Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.getProjects= this.getProjects.bind(this);\r\n    this.saveDelivery= this.saveDelivery.bind(this);\r\n    this.onChangeDate = this.onChangeDate.bind(this);\r\n    this.handleNextProject = this.handleNextProject.bind(this);\r\n    this.onChangeDefaultQuantity = this.onChangeDefaultQuantity.bind(this);\r\n\tthis.onChangeAmount = this.onChangeAmount.bind(this);\r\n\r\n    this.state = {\r\n      projects: [],\r\n      activeProject: '',\r\n      modalTitle: '',\r\n      partyId: null,\r\n      quantity: null,\r\n\t    amount: null,\r\n      date: moment().format(\"DD-MMM-YYYY\")\r\n    }\r\n   \r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.getProjects(this.props.match.params.id, this.props.match.params.pending);\r\n  }\r\n\r\n  getProjects(id, pending) {\r\n\tif(pending){\r\n\t\tconst params ={ \"routeId\" : id, type: \"customer\", searchFlag: \"pending\" };\r\n\t\tCustomerService.getAll(params)\r\n\t\t  .then(response => {\r\n\t\t\tconsole.log(response.data);\r\n\t\t\tthis.setState({\r\n\t\t\t  projects: response.data\r\n\t\t\t});\r\n\t\t  })\r\n\t\t  .catch(e => {\r\n\t\t\tconsole.log(e);\r\n\t\t  });\r\n\t}else{\r\n\t\tconst params ={ \"routeId\" : id, type: \"customer\" };\r\n\t\tCustomerService.getAll(params)\r\n\t\t  .then(response => {\r\n\t\t\tconsole.log(response.data);\r\n\t\t\tthis.setState({\r\n\t\t\t  projects: response.data\r\n\t\t\t});\r\n\t\t  })\r\n\t\t  .catch(e => {\r\n\t\t\tconsole.log(e);\r\n\t\t  });\r\n\t}\r\n  }\r\n\r\n\r\n  handleModalOpen = (idx) => {\r\n    this.setState({\r\n      activeProject: idx,\r\n      modalTitle: this.state.projects[idx].name,\r\n      quantity: this.state.projects[idx].defaultQuantity,\r\n\t    amount: this.state.projects[idx].amount,\r\n      date: this.state.date,\r\n      partyId: this.state.projects[idx].id\r\n    });  \r\n  };\r\n\r\n  handleModalClose = () => {\r\n    this.setState({\r\n      activeProject: ''\r\n    });  \r\n  };\r\n\r\n  handleNextProject = () => {\r\n    \r\n    var arr = this.state.projects.length;\r\n    var idx = this.state.activeProject + 1;\r\n    var idx = idx % arr;\r\n    \r\n    this.setState({\r\n      activeProject: idx,\r\n      modalTitle: this.state.projects[idx].name,\r\n      quantity: this.state.projects[idx].defaultQuantity,\r\n\t    amount: this.state.projects[idx].amount,\r\n      date: this.state.date,\r\n      partyId: this.state.projects[idx].id\r\n    }); \r\n    \r\n  }\r\n\r\n  handlePrevProject = () => {\r\n    var arr = this.state.projects.length;\r\n    var idx = this.state.activeProject;    \r\n    if (idx === 0) {\r\n      var idx = arr - 1;\r\n    } else {\r\n      var idx = idx -1;\r\n    }\r\n    \r\n    this.setState({\r\n      activeProject: idx,\r\n      modalTitle: this.state.projects[idx].name,\r\n      quantity: this.state.projects[idx].defaultQuantity,\r\n\t  amount: this.state.projects[idx].amount,\r\n      date: this.state.date,\r\n      partyId: this.state.projects[idx].id\r\n    });  \r\n    \r\n  }\r\n\r\n  handleModalUpdate = (e) => {\r\n\t  e.target.disabled=true;\r\n    this.saveDelivery(this.state.partyId,this.state.date, this.state.quantity,this.state.amount, e);\r\n  }\r\n\r\n  onChangeDefaultQuantity(e) {\r\n    this.setState({\r\n      quantity: e.target.value\r\n    });\r\n  }\r\n  onChangeAmount(e) {\r\n    this.setState({\r\n      amount: e.target.value\r\n    });\r\n  }\r\n  onChangeDate(e) {\r\n    this.setState({\r\n      date: e.target.value\r\n    });\r\n  }\r\n\r\n  saveDelivery (id, date, quantity, amount, e) {\r\n    const dateObj = moment(date, \"DD-MMM-YYYY\");\r\n    var data = {\r\n      partyId: id,\r\n      date: dateObj.format(\"DD\"),\r\n      month: dateObj.format(\"MMM-YYYY\"),\r\n      quantity: quantity,\r\n      amount: amount,\r\n      type: \"income\"\r\n    };\r\n    \r\n    const params =  { \"partyId\" : id , \r\n                      \"date\": data.date,\r\n                      \"month\": data.month, \r\n\t\t\t\t\t  type: \"income\"\r\n                   };\r\n\t\t\t\t   //checking if already delivered for the day\r\n    DeliveryService.getAll(params).then(response => {\r\n        if(response.data && response.data.length > 0){\r\n          data[\"id\"]=response.data[0].id;\r\n          DeliveryService.update(data[\"id\"], data).then(response1 => {\r\n            console.log(response1.data);\r\n              e.target.disabled=false;\r\n              this.handleNextProject();\r\n          })\r\n          .catch(e => {\r\n            console.log(e);\r\n          });\r\n        } else {\r\n          DeliveryService.create(data).then(response1 => {\r\n            console.log(response1.data);\r\n            e.target.disabled=false;\r\n            this.handleNextProject();\r\n          })\r\n          .catch(e => {\r\n            console.log(e);\r\n          });\r\n        }\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n    \r\n    this.state.date=moment().format(\"DD-MMM-YYYY\");\r\n  }\r\n\r\n  render() {\r\n    const { projects } = this.state;\r\n    \r\n    function nextTitle(idx, arr) {\r\n      var i = idx + 1;\r\n      var i = i % arr.length;\r\n      return arr[i].name;\r\n    }\r\n    \r\n    function prevTitle(idx, arr) {\r\n      \r\n      if (idx === 0) {\r\n        var i = arr.length -1;\r\n      } else {\r\n        var i = idx -1;\r\n      }\r\n      \r\n      return arr[i].name;\r\n    }\r\n\r\n    const projectComponents = projects && projects.map((data, idx, arr) =>\r\n      <Project\r\n        key={'project-' + data.id}\r\n        index={idx}\r\n        name={data.name}\r\n        url={data.address}\r\n        onModalOpen={this.handleModalOpen}\r\n      />,\r\n    );\r\n\r\n    if(this.state.activeProject === '') {\r\n      return (\r\n        <div>\r\n          <div style={{ textAlign: 'center' }}><h1>Route - {projects && projects[0] && projects[0].route.name}</h1></div>\r\n          <Grid container spacing={{ xs: 1, md: 1 }} columns={{ xs: 4, sm: 8, md: 12 }}>\r\n                {projectComponents}\r\n          </Grid>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <Modal \r\n            name={this.state.modalTitle}\r\n            defaultQuantity={this.state.quantity}\r\n\t\t\t      amount={this.state.amount}\r\n            date={this.state.date}\r\n            partyId={this.state.partyId}\r\n            previousTitle={prevTitle(this.state.activeProject, projects)}\r\n            nextTitle={nextTitle(this.state.activeProject, projects)}\r\n            onModalClose={this.handleModalClose}\r\n            onNext={this.handleNextProject}\r\n            onPrev={this.handlePrevProject}\r\n            onDate={this.onChangeDate}\r\n            onQuantity={this.onChangeDefaultQuantity}\r\n\t\t\t      onAmount={this.onChangeAmount}\r\n            onUpdate={this.handleModalUpdate}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    color: theme.success.main\r\n  }\r\n});\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(2),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\n\r\n\r\nclass Project extends React.Component {\r\n  render() {\r\n    return (\r\n\r\n  <Grid item xs={2} sm={4} md={4} key={this.props.index} onClick={this.props.onModalOpen.bind(this, this.props.index)}>\r\n    <Item><h1>{this.props.name}</h1></Item>\r\n  </Grid>                \r\n    );\r\n  }\r\n}\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport RouteService from \"../services/route.service\";\r\n\r\nexport default class AddRoute extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeName = this.onChangeName.bind(this);\r\n    this.onChangeAddress = this.onChangeAddress.bind(this);\r\n    this.onChangeStartDate = this.onChangeStartDate.bind(this);\r\n    this.onChangeActive = this.onChangeActive.bind(this);\r\n    this.saveTutorial = this.saveTutorial.bind(this);\r\n    this.newTutorial = this.newTutorial.bind(this);\r\n    const today = new Date();\r\n    this.state = {\r\n      id: null,\r\n      name: \"\",\r\n      address: \"\", \r\n      active: true,\r\n      startDate: today.getDate() + \"-\"+ parseInt(today.getMonth()+1) +\"-\"+today.getFullYear(),\r\n\r\n      submitted: false\r\n    };\r\n  }\r\n\r\n  onChangeName(e) {\r\n    this.setState({\r\n      name: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeAddress(e) {\r\n    this.setState({\r\n      address: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeStartDate(e) {\r\n    this.setState({\r\n      startDate: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeActive(e) {\r\n    console.log(e.target.checked);\r\n    this.setState({\r\n      active: e.target.checked\r\n    });\r\n  }\r\n\r\n  saveTutorial() {\r\n    var data = {\r\n      name: this.state.name,\r\n      address: this.state.address,\r\n      startDate: this.state.startDate,\r\n      active: this.state.active\r\n    };\r\n    console.log(this.state.active);\r\n    RouteService.create(data)\r\n      .then(response => {\r\n        this.setState({\r\n          id: response.data.id,\r\n          name: response.data.name,\r\n          address: response.data.address,\r\n          active: response.data.active,\r\n          startDate: response.data.startDate,\r\n\r\n          submitted: true\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  newTutorial() {\r\n    this.today = new Date();\r\n    this.setState({\r\n      id: null,\r\n      name: \"\",\r\n      address: \"\",\r\n      startDate: this.today.getDate() + \"-\"+ parseInt(this.today.getMonth()+1) +\"-\"+this.today.getFullYear(),\r\n      active: true,\r\n\r\n      submitted: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"submit-form\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>You submitted successfully!</h4>\r\n            <button className=\"btn btn-success\" onClick={this.newTutorial}>\r\n              Add\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"name\">Route Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"name\"\r\n                required\r\n                value={this.state.name}\r\n                onChange={this.onChangeName}\r\n                name=\"name\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"address\">Address</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"address\"\r\n                required\r\n                value={this.state.address}\r\n                onChange={this.onChangeAddress}\r\n                name=\"address\"\r\n              />\r\n            </div>            \r\n\r\n            <button onClick={this.saveTutorial} className=\"btn btn-success\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import http from \"../http-common\";\r\n\r\nclass RateService {\r\n  getAll(params) {\r\n    return http.get(\"/rates\", { params });\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/rates/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/rates\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/rates/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/rates/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(\"/rates\");\r\n  }\r\n}\r\n\r\nexport default new RateService();\r\n","\r\n function CountdownLatch (limit) {\r\n  this.limit = limit;\r\n  this.count = 0;\r\n  this.waitBlock = function (){};\r\n};\r\n\r\nCountdownLatch.prototype.countDown = function (){\r\n  this.count = this.count + 1;\r\n  if(this.limit <= this.count){\r\n    return this.waitBlock();\r\n  }\r\n};\r\n\r\nCountdownLatch.prototype.await = function(callback){\r\n  this.waitBlock = callback;\r\n};\r\n\r\nexport default CountdownLatch;","import React, { useState , useEffect, useMemo, useContext, createContext, useRef , useLayoutEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DataGrid from 'react-data-grid';\r\nimport NumericEditor from \"../components/editor/numericeditor.component\";\r\nimport DeliveryService from \"../services/delivery.service\";\r\nimport CustomerService from \"../services/customer.service\";\r\nimport BillService from \"../services/bill.service\";\r\nimport RateService from \"../services/rate.service\";\r\nimport PaymentService from \"../services/payment.service\";\r\nimport CountdownLatch from \"../components/hooks/countdown.latch\";\r\nimport moment from 'moment';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nimport { CSVLink } from 'react-csv';\r\n\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\n\r\n\r\nconst rootClassname = 'rootClassname';\r\nconst filterColumnClassName = 'filter-cell';\r\nconst filterContainerClassname = 'filterContainerClassname';\r\nconst filterClassname = 'filterClassname';\r\n\r\nconst FilterContext = createContext(undefined);\r\n\r\nfunction inputStopPropagation(event) {\r\n  if (['ArrowLeft', 'ArrowRight'].includes(event.key)) {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n\r\nfunction getComparator(sortColumn) {\r\n  switch (sortColumn) {\r\n    case 'name':\r\n      return (a, b) => {\r\n        return a[sortColumn].localeCompare(b[sortColumn]);\r\n      };\r\n    default:\r\n      return (a, b) => {\r\n        return a[sortColumn] - b[sortColumn];\r\n      };\r\n  }\r\n}\r\n\r\nconst CustomerCalendar = props => {\r\n\r\n  const [filters, setFilters] = useState({\r\n    name: '',\r\n    route: '',\r\n    enabled: true\r\n  });\r\n\r\n  const initialCalendar = {\r\n    currentDate: moment()\r\n  };\r\n  \r\n    const [rows, setRows] = useState([]);  \r\n\t  const [message, setMessage] = useState();\r\n\t  const [rate, setRate] = useState({});\r\n\t  const [open, setOpen] = useState(false);\r\n\t  const [confirm, setConfirm] = useState(false);\r\n    const [calendar, setCalendar] = useState(initialCalendar);\r\n    const [sortColumns, setSortColumns] = useState([]);  \r\n    \r\n    const columns = [\r\n      { key: 'id', name: 'ID' , minWidth: 60 , resizable: true , frozen: true,\r\n          headerCellClass: filterColumnClassName,\r\n          headerRenderer: (p) => (\r\n            <FilterRenderer {...p}>\r\n              {({ filters, ...rest }) => (\r\n                <input\r\n                  {...rest}\r\n                  className={filterClassname}\r\n                  value={filters.name}\r\n                  onChange={(e) =>\r\n                    setFilters({\r\n                      ...filters,\r\n                      name: e.target.value\r\n                    })\r\n                  }\r\n                  onKeyDown={inputStopPropagation}\r\n                />\r\n              )}\r\n            </FilterRenderer>\r\n          )\r\n      },\r\n      { key: 'name', name: 'Name' , width: 200, resizable: true, frozen: true },\r\n      { key: 'route', name: 'Route' , minWidth:100 , resizable: true ,\r\n          headerCellClass: filterColumnClassName,\r\n          headerRenderer: (p) => (\r\n            <FilterRenderer {...p}>\r\n              {({ filters, ...rest }) => (\r\n                <input\r\n                  {...rest}\r\n                  className={filterClassname}\r\n                  value={filters.route}\r\n                  onChange={(e) =>\r\n                    setFilters({\r\n                      ...filters,\r\n                      route: e.target.value\r\n                    })\r\n                  }\r\n                  onKeyDown={inputStopPropagation}\r\n                />\r\n              )}\r\n            </FilterRenderer>\r\n          )\r\n      },\r\n      { key: '01', name: '1' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40, resizable: true },\r\n      { key: '02', name: '2' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '03', name: '3' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '04', name: '4' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '05', name: '5' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '06', name: '6' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '07', name: '7' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '08', name: '8' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '09', name: '9' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '10', name: '10' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '11', name: '11' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '12', name: '12' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '13', name: '13' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '14', name: '14' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '15', name: '15' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '16', name: '16' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '17', name: '17' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '18', name: '18' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '19', name: '19' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '20', name: '20' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '21', name: '21' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '22', name: '22' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '23', name: '23' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '24', name: '24' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '25', name: '25' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '26', name: '26' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '27', name: '27' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '28', name: '28' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '29', name: '29' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '30', name: '30' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '31', name: '31' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: 'qty', name: 'Qty' , minWidth:40 , resizable: true },\r\n      { key: 'rate', name: 'Rate' , minWidth:40 , resizable: true },\r\n      { key: 'bill', name: 'Bill' , minWidth:60 , resizable: true },\r\n      { key: 'dues', name: 'Dues' , minWidth:40 , resizable: true },\r\n      { key: 'totalBill', name: 'Total' , minWidth:60 , resizable: true },\r\n      { key: 'prevBill', name: 'P-Bill' , minWidth:75 , resizable: true },\r\n      { key: 'paid', name: 'Paid' , minWidth:60 , resizable: true },\r\n      { key: 'currentDue', name: 'C-Due' , minWidth:60 , resizable: true },\r\n      { key: 'discount', name: 'Discount' , width:80 , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: 'pay', name: 'Pay' , minWidth:60 , resizable: true , editor: NumericEditor, editorOptions: {editOnClick: true} }\r\n    ];\r\n\r\n    useEffect(() => {\r\n      var calendar={currentDate: moment(props.match.params.date,'MMM-YYYY')};\r\n      setCalendar(calendar);\r\n      var initialRows = null;\r\n      const paramCustomer = { active: true, type: \"customer\"}; \r\n\r\n      RateService.getAll(paramCustomer).then((response) => {\r\n        var rates = response.data;\r\n        var rate ={};\r\n        rates && rates.map((r, index) => {\r\n          rate = {\r\n            id: r.id,\r\n            rate: r.rate,\r\n            startDate: r.startDate,\r\n          };\r\n          });\r\n        setRate(rate);\r\n        })\r\n          .catch((e) => {\r\n            console.log(e);\r\n      });\r\n      var barrier = new CountdownLatch(3);\r\n      CustomerService.getAll(paramCustomer).then((response) => {\r\n        var customers = response.data;\r\n        initialRows = new Array(customers.length);\r\n        customers.map((customer, index) => {\r\n          initialRows[index]={};\r\n          initialRows[index][\"id\"]=customer.id;\r\n          initialRows[index][\"name\"]=customer.name;\r\n          initialRows[index][\"route\"]=customer.route.name;\r\n        });\r\n        billService(calendar, initialRows,barrier);\r\n        getPayment(calendar, initialRows,barrier);\r\n        deliveryService(calendar, initialRows,barrier);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\t  \r\n      barrier.await(function(){\r\n        setRows(initialRows);\r\n        console.log('done all');\r\n      });\r\n    }, [props.match.params.date]);\r\n\r\n    function getPayment(calendar, initialRows, barrier){\r\n      var params ={ \"month\": calendar.currentDate.format(\"MMM-YYYY\"), \"active\": true, type: \"income\"};\r\n      PaymentService.getAll(params).then(response => {\r\n        var bills = response.data;\r\n        initialRows && initialRows.map((initialRow) => {\r\n          bills && bills.map((bill) => {\r\n              if(bill.partyId == initialRow.id){\r\n                if(bill.category == 'discount'){\r\n                  initialRow[\"discount\"]=bill.payment;\r\n                  initialRow[\"iddiscount\"]=bill.id;\r\n                } else{\r\n                  if(initialRow[\"paid\"]){\r\n                    initialRow[\"paid\"]=initialRow[\"paid\"]+bill.payment;\r\n                  }else{\r\n                    initialRow[\"paid\"]=+bill.payment;\r\n                  }\r\n                }\r\n              }\r\n            });\r\n        });  \r\n        barrier.countDown();      \r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n    }\r\n\r\n    function deliveryService(calendar, initialRows,barrier){\r\n      const params ={ \"month\" : calendar.currentDate.format(\"MMM-YYYY\"), type: \"income\"};\r\n      DeliveryService.getAll(params).then((response) => {\r\n        var deliverys = response.data;\r\n        deliverys && deliverys.map((delivery) => {\r\n          for(var initialRow of initialRows){\r\n            if(initialRow.id == delivery.partyId){\r\n              initialRow[delivery.date] = delivery.quantity;\r\n              initialRow[\"id\"+delivery.date]=delivery.id;\r\n              break;\r\n            }\r\n          };\r\n        });\r\n        barrier.countDown();\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n    }\r\n\r\n    function billService(calendar, initialRows,barrier){\r\n      const paramsBill ={ month : calendar.currentDate.format(\"MMM-YYYY\"), active: true, type: \"income\"};\r\n      BillService.getAll(paramsBill).then((response) => {\r\n        var deliverys = response.data;\r\n        deliverys && deliverys.map((delivery) => {\r\n          for(var initialRow of initialRows){\r\n            if(initialRow.id == delivery.partyId){\r\n              if(delivery.rate){\r\n                initialRow[\"qty\"] = delivery.quantity;\r\n                initialRow[\"rate\"]=delivery.rate;\r\n                initialRow[\"bill\"]=delivery.bill;\r\n                initialRow[\"dues\"]=delivery.dues;\r\n                initialRow[\"totalBill\"]=initialRow[\"bill\"]+(initialRow[\"dues\"]? initialRow[\"dues\"] : 0);\r\n                initialRow[\"prevBill\"]=delivery.lastBillTotal;\r\n                initialRow[\"currentDue\"]=initialRow[\"prevBill\"]-(initialRow[\"paid\"]? initialRow[\"paid\"] : 0);\r\n              }\r\n              break;\r\n            }\r\n          };\r\n        });\r\n        barrier.countDown();   \r\n        //previous month bill and due amount\r\n\t  const paramsBillPrev ={ month :  calendar.currentDate.clone().subtract(1, 'months').format('MMM-YYYY'), active: true, type: \"income\"};\r\n\t  BillService.getAll(paramsBillPrev).then((response) => {\r\n        var deliverys = response.data;\r\n        deliverys && deliverys.map((delivery) => {\r\n          for(var initialRow of initialRows){\r\n            if(initialRow.id == delivery.partyId){\r\n              if(delivery.rate){\r\n                initialRow[\"prevBill\"]=delivery.bill+delivery.dues;\r\n                initialRow[\"prevDues\"]=delivery.dues;\r\n                initialRow[\"currentDue\"]=initialRow[\"prevBill\"]-(initialRow[\"paid\"]? initialRow[\"paid\"] : 0);\r\n              }\r\n              break;\r\n            }\r\n          };\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n    }\r\n   \r\n    function rowChange(row, col) {\r\n      constructDeliveryUpdateData(row,col);\r\n    }\r\n\r\n\tfunction handleClickOpen () {\r\n      setOpen(true);\r\n    };\r\n  \r\n    function handleClose () {\r\n\t\tsetConfirm(false);\r\n\t\tsetOpen(false);\r\n    };\r\n\t\r\n\tfunction handleConfirm () {\r\n\t\tsetConfirm(false);\r\n\t\tgenerateBillAfterCheck(calendar.currentDate.format(\"MMM-YYYY\"));\r\n\t\tsetOpen(false);\r\n\t}\r\n\r\n    function constructDeliveryUpdateData(row, col){\r\n      var columnVal = row[col.indexes][col.column.key]; \r\n      var columnId = row[col.indexes][\"id\"+col.column.key];\r\n      /* for (const [key, value] of Object.entries(row[col.indexes])) {\r\n        if(key == col.column.key){\r\n          columnVal = value;\r\n        }else if(key == (\"id\"+col.column.key)){\r\n          columnId = value;\r\n        }\r\n      } */\r\n      console.log(row[col.indexes].id+ \" - \"+columnVal + \" - \" +columnId);\r\n      saveDelivery(row[col.indexes].id, col.column.key, calendar.currentDate , columnVal, columnId, row[col.indexes]);\r\n      rows[col.indexes] = row[col.indexes];\r\n      //row gives filtered rows, so putting updated data into rows\r\n      setRows (rows.slice());\r\n    }\r\n    \r\n    function saveDelivery (cutomerId, date, month, columnVal, id, rowData) {\r\n      var data = {\r\n        id: id,\r\n        partyId: cutomerId,\r\n        date: date,\r\n        month: month.format(\"MMM-YYYY\"),\r\n        quantity: columnVal,\r\n        type: \"income\",\r\n        category:null,\r\n        active: true,\r\n        payment: null\r\n      };\r\n      if(date != \"discount\" && date != \"pay\"){\r\n          if(id){\r\n              DeliveryService.update(id, data)\r\n                .then(response => {\r\n                  console.log(response.data);\r\n                })\r\n                .catch(e => {\r\n                  console.log(e);\r\n                });\r\n          } else {\r\n            DeliveryService.create(data)\r\n                .then(response => {\r\n                  var idName = \"id\"+date;\r\n                  rowData[idName]=response.data.id;\r\n                  console.log(rowData);\r\n                })\r\n                .catch(e => {\r\n                  console.log(e);\r\n                });\r\n            }\r\n      }else{\r\n        if(date == \"discount\"){\r\n          data.category=\"discount\";\r\n        }\r\n        data.payment=columnVal;\r\n        data.date=moment().format(\"DD\");\r\n        if(id){\r\n          PaymentService.update(id, data)\r\n            .then(response => {\r\n              console.log(response.data);\r\n            })\r\n            .catch(e => {\r\n              console.log(e);\r\n            });\r\n        } else {\r\n          PaymentService.create(data)\r\n            .then(response => {\r\n              var idName = \"id\"+date;\r\n              rowData[idName]=response.data.id;\r\n              console.log(rowData);\r\n            })\r\n            .catch(e => {\r\n              console.log(e);\r\n            });\r\n        }\r\n      }\r\n    }\r\n\r\n    function generateBill(month){\r\n\t\tBillService.validateBillGeneration(month,\"income\").then((response) => {\r\n\t\t\tvar bill = response.data;\r\n\t\t\t//bill object has bill, means the bill was generated\r\n\t\t\tif(bill.rate){\r\n\t\t\t\tsetConfirm(true);\r\n\t\t\t\tsetMessage(\"Bill already generated for the month \"+month+\". Do you want to continue? Please confirm to proceed.\");\r\n\t\t\t\thandleClickOpen();\r\n\t\t\t}else{\r\n\t\t\t\tgenerateBillAfterCheck(month);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\tconsole.log(e);\r\n\t\t\t//no bill exist for the month, so generate bill without prompting user\r\n\t\t\tif(e.response.status == 404){\r\n\t\t\t\tgenerateBillAfterCheck(month);\r\n\t\t\t}\r\n\t\t});\r\n    }\r\n\t\r\n\tfunction generateBillAfterCheck(month){\r\n\t\tconst paramsBill ={ \"month\" : month, \"type\": \"income\"};\r\n\t\tBillService.generateBills(paramsBill).then((response) => {\r\n        var deliverys = response.data;\r\n        deliverys && deliverys.map((delivery) => {\r\n          for(var initialRow of rows){\r\n            if(initialRow.id == delivery.partyId){\r\n              initialRow[\"qty\"] = delivery.quantity;\r\n              initialRow[\"rate\"]=delivery.rate;\r\n              initialRow[\"bill\"]=delivery.bill;\r\n              initialRow[\"dues\"]=delivery.dues;\r\n              initialRow[\"totalBill\"]=initialRow[\"bill\"]+(initialRow[\"dues\"]? initialRow[\"dues\"] : 0);\r\n              break;\r\n            }\r\n          };\r\n        });\r\n\t\tsetMessage(\"Bill generated for the month \"+month+\".\");\r\n\t\thandleClickOpen();\r\n\t\tsetRows(rows);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e.response);\r\n      });\r\n\t}\r\n\t\r\n\tfunction onChangeRate(e){\r\n\t\trate.rate = e.target.value;\r\n\t\tsetRate(rate);\r\n\t}\r\n  function sendMail(){\r\n    \r\n  }\r\n\tfunction saveRate(){\r\n      var data = {\r\n        id: rate.id,\r\n        rate: rate.rate,\r\n\t\t    active: false,\r\n\t    \tstartDate: rate.startDate,\r\n\t    \tendDate: calendar.currentDate.format(\"DD-MMM-YYYY\")\r\n      };\r\n      if(rate.id){\r\n          RateService.update(data.id, data)\r\n            .then(response => {\r\n              console.log(response.data);\r\n            })\r\n            .catch(e => {\r\n              console.log(e);\r\n            });\r\n      }\r\n\t  var newRate = {\r\n        rate: rate.rate,\r\n\t\t    active: true,\r\n\t\t    startDate: calendar.currentDate.format(\"DD-MMM-YYYY\")\r\n      };\r\n\t  RateService.create(newRate)\r\n\t\t.then(response => {\r\n\t\t   setRate(response.data);\r\n        setMessage(\"New rate saved.\");\r\n        handleClickOpen();\r\n\t\t})\r\n\t\t.catch(e => {\r\n\t\t  console.log(e);\r\n\t\t});\r\n\t}\r\n\r\n  const filteredRows = useMemo( () => {\r\n    function filter(){\r\n      var filteredRows = null;\r\n       filteredRows = rows.filter((r) => {\r\n        return (\r\n          (filters.name ? r.name.includes(filters.name) : true)\r\n          && (filters.route ? r.route.includes(filters.route) : true)\r\n        );\r\n      })\r\n      if (sortColumns.length === 0) return filteredRows;\r\n      filteredRows = [...filteredRows].sort((a, b) => {\r\n        for (const sort of sortColumns) {\r\n          const comparator = getComparator(sort.columnKey);\r\n          const compResult = comparator(a, b);\r\n          if (compResult !== 0) {\r\n            return sort.direction === 'ASC' ? compResult : -compResult;\r\n          }\r\n        }\r\n        return 0;\r\n      })\r\n      return filteredRows;\r\n    }\r\n    return filter();\r\n  }, [rows, filters, sortColumns]);\r\n\r\n    return (\r\n      <div >\r\n        {calendar ? (\r\n        <div >\r\n          <Grid container spacing={{ xs: 1}} >\r\n          <Grid item xs={6} sm={3}> \r\n              <Link\r\n                to={\"/gui/customerCalendar/\"+calendar.currentDate.clone().subtract(1, 'months').format('MMM-YYYY')}\r\n                className=\"badge badge-warning\">\r\n                Prev\r\n              </Link>\r\n              {calendar.currentDate.format(\"DD-MMM-YYYY\")}\r\n              <Link\r\n                to={\"/gui/customerCalendar/\"+calendar.currentDate.clone().add(1, 'months').format('MMM-YYYY')}\r\n                className=\"badge badge-warning\">\r\n                Next\r\n              </Link>\r\n          </Grid>\r\n          <Grid item xs={6} sm={3}> \r\n              <Link to=\"#\"\r\n                onClick={ () => generateBill(calendar.currentDate.format(\"MMM-YYYY\"))}\r\n                className=\"badge\">\r\n                 Generate Bill Month - {calendar.currentDate.format(\"MMM-YYYY\")}\r\n              </Link>\r\n               \r\n          </Grid> \r\n\t\t  <Grid item xs={6} sm={3}> \r\n\t\t\t<input\r\n                type=\"number\"\r\n                id=\"rate\"\r\n                required\r\n                defaultValue={rate.rate}\r\n                onChange={onChangeRate}\r\n                name=\"rate\"\r\n\t\t\t\tstyle={{ width:60, height:20 }}\r\n              />\r\n              <Link to=\"#\"\r\n                onClick={saveRate}\r\n                className=\"badge\">\r\n                 Set Rate\r\n              </Link>\r\n\t\t\t  \r\n          </Grid> \r\n          <Grid item xs={3} sm={2}> \r\n              <Link\r\n                to={\"/gui/bills/\"+calendar.currentDate.format('MMM-YYYY')}\r\n                className=\"badge\">\r\n                 Print - {calendar.currentDate.format(\"MMM-YYYY\")}\r\n              </Link>\r\n          </Grid> \r\n\t\t  <Grid item xs={3} sm={1}>\r\n\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t<Button variant=\"warning\" className=\"badge\">\r\n\t\t\t\t\t\t\t\t<CSVLink data={filteredRows} filename={'income.txt'}>Export</CSVLink>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Grid> \r\n        </Grid>\r\n        </div>     \r\n         ) : (\r\n          <div>\r\n            <br />\r\n            <p>Please click on a Customer...</p>\r\n          </div>\r\n        )}\r\n        <div className=\"rootClassname\">\r\n          <FilterContext.Provider value={filters}>\r\n            <DataGrid columns={columns} onRowsChange={rowChange} \r\n             defaultColumnOptions={{\r\n              sortable: true,\r\n              resizable: true\r\n            }}\r\n              className={filters.enabled ? filterContainerClassname : undefined}\r\n              rows={filteredRows}\r\n              sortColumns={sortColumns}\r\n              onSortColumnsChange={setSortColumns}\r\n              headerRowHeight={filters.enabled ? 50 : undefined}\r\n              />\r\n            </FilterContext.Provider>\r\n          </div>\r\n\t\t\r\n\t\t\r\n\t\t<Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\">\r\n          <DialogTitle id=\"alert-dialog-title\">\r\n            {\"Bills\"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n\t\t\t{message}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n\t\t  {confirm ? (\r\n\t\t\t<Button onClick={handleConfirm}>Confirm</Button>\r\n\t\t  ) : \"\"}\r\n            <Button onClick={handleClose}>Close</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default CustomerCalendar;\r\n\r\n\r\n  function FilterRenderer({isCellSelected,column,children}) {\r\n    const filters = useContext(FilterContext);\r\n    const { ref, tabIndex } = useFocusRef(isCellSelected);\r\n  \r\n    return (\r\n      <>\r\n        <div>{column.name}</div>\r\n        {filters.enabled && <div>{children({ ref, tabIndex, filters })}</div>}\r\n      </>\r\n    );\r\n  }\r\n  \r\n  export function useFocusRef(isSelected) {\r\n    const ref = useRef(null);\r\n  \r\n    useLayoutEffect(() => {\r\n      if (!isSelected) return;\r\n      ref.current && ref.current.focus({ preventScroll: true });\r\n    }, [isSelected]);\r\n  \r\n  \r\n    return {\r\n      ref,\r\n      tabIndex: isSelected ? 0 : -1\r\n    };\r\n  }","import React, { useState , useEffect, useMemo, useContext, createContext, useRef , useLayoutEffect } from \"react\";\r\nimport DataGrid,  {HeaderRendererProps} from 'react-data-grid';\r\n\r\nimport NumericEditor from \"../components/editor/numericeditor.component\";\r\nimport DeliveryService from \"../services/delivery.service\";\r\nimport CustomerService from \"../services/customer.service\";\r\nimport BillService from \"../services/bill.service\";\r\nimport PaymentService from \"../services/payment.service\";\r\nimport moment from 'moment';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nimport { CSVLink } from 'react-csv';\r\nimport Button from '@mui/material/Button';\r\n\r\nconst rootClassname = 'rootClassname';\r\nconst filterColumnClassName = 'filter-cell';\r\nconst filterContainerClassname = 'filterContainerClassname';\r\nconst filterClassname = 'filterClassname';\r\n\r\nconst FilterContext = createContext(undefined);\r\n\r\nfunction inputStopPropagation(event) {\r\n  if (['ArrowLeft', 'ArrowRight'].includes(event.key)) {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n\r\nfunction getComparator(sortColumn) {\r\n  switch (sortColumn) {\r\n    case 'name':\r\n      return (a, b) => {\r\n        return a[sortColumn].localeCompare(b[sortColumn]);\r\n      };\r\n    default:\r\n      return (a, b) => {\r\n        return a[sortColumn] - b[sortColumn];\r\n      };\r\n  }\r\n}\r\n\r\nconst CustomerDaily = props => {\r\n\r\n  const [filters, setFilters] = useState({\r\n    name: '',\r\n    route: '',\r\n    enabled: true\r\n  });\r\n\r\n  const initialCalendar = {\r\n    currentDate: moment()\r\n  };\r\n  \r\n    const [rows, setRows] = useState([]);  \r\n    const [calendar, setCalendar] = useState(initialCalendar);\r\n    const [sortColumns, setSortColumns] = useState([]);  \r\n\r\n\r\n    const columns = [\r\n      { key: 'id', name: 'ID' , minWidth: 40 , resizable: true ,\r\n      headerCellClass: filterColumnClassName,\r\n      headerRenderer: (p) => (\r\n        <FilterRenderer {...p}>\r\n          {({ filters, ...rest }) => (\r\n            <input\r\n              {...rest}\r\n              className={filterClassname}\r\n              value={filters.name}\r\n              onChange={(e) =>\r\n                setFilters({\r\n                  ...filters,\r\n                  name: e.target.value\r\n                })\r\n              }\r\n              onKeyDown={inputStopPropagation}\r\n            />\r\n          )}\r\n        </FilterRenderer>\r\n      )\r\n      },\r\n      { key: 'name', name: 'Name' , width: 200, resizable: true},\r\n      { key: 'today', name: 'Today Quantity' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:80, resizable: true },\r\n      { key: 'dailyQuantity', name: 'Daily Quantity' , minWidth:80 , resizable: true },\r\n      { key: 'route', name: 'Route' , minWidth:100 , resizable: true ,\r\n          headerCellClass: filterColumnClassName,\r\n          headerRenderer: (p) => (\r\n            <FilterRenderer {...p}>\r\n              {({ filters, ...rest }) => (\r\n                <input\r\n                  {...rest}\r\n                  className={filterClassname}\r\n                  value={filters.route}\r\n                  onChange={(e) =>\r\n                    setFilters({\r\n                      ...filters,\r\n                      route: e.target.value\r\n                    })\r\n                  }\r\n                  onKeyDown={inputStopPropagation}\r\n                />\r\n              )}\r\n            </FilterRenderer>\r\n          )\r\n      },\r\n      { key: 'qty', name: 'Qty' , minWidth:40 , resizable: true },\r\n      { key: 'rate', name: 'Rate' , minWidth:40 , resizable: true },\r\n      { key: 'bill', name: 'Bill' , minWidth:40 , resizable: true },\r\n      { key: 'dues', name: 'Dues' , minWidth:40 , resizable: true },\r\n      { key: 'totalBill', name: 'Total' , minWidth:60 , resizable: true },\r\n      { key: 'prevBill', name: 'P-Bill' , minWidth:75 , resizable: true },\r\n      { key: 'prevDues', name: 'P-Dues' , minWidth:70 , resizable: true },\r\n      { key: 'paid', name: 'Paid' , minWidth:60 , resizable: true }\r\n    ];\r\n    \r\n    \r\n    useEffect(() => {\r\n      var calendar={currentDate: moment(props.match.params.date,'DD-MMM-YYYY')};\r\n      setCalendar(calendar);\r\n      var initialRows = null;\r\n      const paramCustomer = { active: true, type: \"customer\"};\r\n\r\n      CustomerService.getAll(paramCustomer).then((response) => {\r\n        var customers = response.data;\r\n        initialRows = new Array(customers.length);\r\n        customers.map((customer, index) => {\r\n          initialRows[index]={};\r\n          initialRows[index][\"id\"]=customer.id;\r\n          initialRows[index][\"name\"]=customer.name;\r\n          initialRows[index][\"dailyQuantity\"]=customer.defaultQuantity;\r\n          initialRows[index][\"route\"]=customer.route.name;\r\n        });\r\n        getPayment(calendar, initialRows);\r\n        deliveryService(calendar, initialRows);\r\n        billService(calendar, initialRows);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\t  \r\n    }, [props.match.params.date]);\r\n\r\n    function deliveryService(calendar, initialRows){\r\n      const params ={ \"date\": calendar.currentDate.format(\"DD\"), \r\n                      \"month\" : calendar.currentDate.format(\"MMM-YYYY\"), type: \"income\"};\r\n      DeliveryService.getAll(params).then((response) => {\r\n        var deliverys = response.data;\r\n        deliverys && deliverys.map((delivery) => {\r\n          for(var initialRow of initialRows){\r\n            if(initialRow.id == delivery.partyId){\r\n              initialRow[\"today\"] = delivery.quantity;\r\n              initialRow[\"idtoday\"]=delivery.id;\r\n              break;\r\n            }\r\n          };\r\n        });\r\n        console.log(initialRows);\r\n        setRows(initialRows);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n    }\r\n\r\n    function billService(calendar, initialRows){\r\n      const paramsBill ={ month : calendar.currentDate.format(\"MMM-YYYY\"), active: true, type: \"income\"};\r\n      BillService.getAll(paramsBill).then((response) => {\r\n        var deliverys = response.data;\r\n        deliverys && deliverys.map((delivery) => {\r\n          for(var initialRow of initialRows){\r\n            if(initialRow.id == delivery.partyId){\r\n              if(delivery.rate){\r\n                initialRow[\"qty\"] = delivery.quantity;\r\n                initialRow[\"rate\"]=delivery.rate;\r\n                initialRow[\"bill\"]=delivery.bill;\r\n                initialRow[\"dues\"]=delivery.dues;\r\n                initialRow[\"totalBill\"]=initialRow[\"bill\"]+(initialRow[\"dues\"]? initialRow[\"dues\"] : 0);\r\n              }\r\n              break;\r\n            }\r\n          };\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\t  \r\n      //previous month bill and due amount\r\n\t  const paramsBillPrev ={ month :  calendar.currentDate.clone().subtract(1, 'months').format('MMM-YYYY'), active: true, type: \"income\"};\r\n\t  BillService.getAll(paramsBillPrev).then((response) => {\r\n        var deliverys = response.data;\r\n        deliverys && deliverys.map((delivery) => {\r\n          for(var initialRow of initialRows){\r\n            if(initialRow.id == delivery.partyId){\r\n              if(delivery.rate){\r\n                initialRow[\"prevBill\"]=delivery.bill;\r\n                initialRow[\"prevDues\"]=delivery.dues;\r\n              }\r\n              break;\r\n            }\r\n          };\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n    }\r\n\r\n    function getPayment(calendar, initialRows){\r\n      var params ={ \"month\": calendar.currentDate.format(\"MMM-YYYY\"), \"active\": true, type: \"income\"};\r\n      PaymentService.getAll(params).then(response => {\r\n        var bills = response.data;\r\n        initialRows && initialRows.map((initialRow) => {\r\n          bills && bills.map((bill) => {\r\n              if(bill.partyId == initialRow.id){\r\n                if(bill.category == 'discount'){\r\n                  initialRow[\"discount\"]=bill.payment;\r\n                  initialRow[\"iddiscount\"]=bill.id;\r\n                } else{\r\n                  if(initialRow[\"paid\"]){\r\n                    initialRow[\"paid\"]=initialRow[\"paid\"]+bill.payment;\r\n                  }else{\r\n                    initialRow[\"paid\"]=+bill.payment;\r\n                  }\r\n                }\r\n              }\r\n            });\r\n        });\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n    }\r\n\r\n    function rowChange(row, col) {\r\n      constructDeliveryUpdateData(row,col);\r\n    }\r\n\r\n    function constructDeliveryUpdateData(row, col){\r\n      var columnVal = row[col.indexes][col.column.key]; \r\n      var columnId = row[col.indexes][\"idtoday\"];\r\n      console.log(row[col.indexes].id+ \" - \"+columnVal + \" - \" +columnId+\" - \" + col.column.key);\r\n      saveDelivery(row[col.indexes].id, calendar.currentDate, calendar.currentDate , columnVal, columnId, row[col.indexes]);\r\n      rows[col.indexes] = row[col.indexes];\r\n      //row gives filtered rows, so putting updated data into rows\r\n      setRows (rows.slice());\r\n    }\r\n\r\n    function saveDelivery (cutomerId, date, month, quantity, id, rowData) {\r\n      var data = {\r\n        id: id,\r\n        partyId: cutomerId,\r\n        date: date.format(\"DD\"),\r\n        month: month.format(\"MMM-YYYY\"),\r\n        quantity: quantity,\r\n\t\t    type: \"income\"\r\n      };\r\n      if(id){\r\n          DeliveryService.update(id, data)\r\n            .then(response => {\r\n              console.log(response.data);\r\n            })\r\n            .catch(e => {\r\n              console.log(e);\r\n            });\r\n      } else {\r\n        DeliveryService.create(data)\r\n            .then(response => {\r\n              rowData[\"idtoday\"]=response.data.id;\r\n              console.log(rowData);\r\n            })\r\n            .catch(e => {\r\n              console.log(e);\r\n            });\r\n        }\r\n      }\r\n\r\n  const filteredRows = useMemo( () => {\r\n    function filter(){\r\n      var filteredRows = null;\r\n       filteredRows = rows.filter((r) => {\r\n        return (\r\n          (filters.name ? r.name.includes(filters.name) : true)\r\n          && (filters.route ? r.route.includes(filters.route) : true)\r\n        );\r\n      })\r\n      if (sortColumns.length === 0) return filteredRows;\r\n      filteredRows = [...filteredRows].sort((a, b) => {\r\n        for (const sort of sortColumns) {\r\n          const comparator = getComparator(sort.columnKey);\r\n          const compResult = comparator(a, b);\r\n          if (compResult !== 0) {\r\n            return sort.direction === 'ASC' ? compResult : -compResult;\r\n          }\r\n        }\r\n        return 0;\r\n      })\r\n      return filteredRows;\r\n    }\r\n    return filter();\r\n  }, [rows, filters, sortColumns]);\r\n\r\n    return (\r\n      <div >\r\n        {calendar ? (\r\n        <div >\r\n          <Grid container spacing={{ xs: 1}} >\r\n            <Grid item xs={3} sm={1}>\r\n                &nbsp;\r\n                <Button variant=\"warning\" className=\"badge\">\r\n                      <CSVLink data={filteredRows} filename={'dailyIncome.txt'}>Export</CSVLink>\r\n                </Button>\r\n              </Grid> \r\n          </Grid>\r\n        </div>     \r\n         ) : (\r\n          <div>\r\n            <br />\r\n            <p>Please click on a Customer...</p>\r\n          </div>\r\n        )}\r\n        <div className=\"rootClassname\">\r\n          <FilterContext.Provider value={filters}>\r\n            <DataGrid columns={columns} onRowsChange={rowChange} \r\n             defaultColumnOptions={{\r\n              sortable: true,\r\n              resizable: true\r\n            }}\r\n              className={filters.enabled ? filterContainerClassname : undefined}\r\n              rows={filteredRows}\r\n              sortColumns={sortColumns}\r\n              onSortColumnsChange={setSortColumns}\r\n              headerRowHeight={filters.enabled ? 50 : undefined}\r\n              />\r\n            </FilterContext.Provider>\r\n          </div>\r\n      </div>\r\n    );\r\n  };\r\nexport default CustomerDaily;\r\n\r\n\r\nfunction FilterRenderer({isCellSelected,column,children}) {\r\n  const filters = useContext(FilterContext);\r\n  const { ref, tabIndex } = useFocusRef(isCellSelected);\r\n\r\n  return (\r\n    <>\r\n      <div>{column.name}</div>\r\n      {filters.enabled && <div>{children({ ref, tabIndex, filters })}</div>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport function useFocusRef(isSelected) {\r\n  const ref = useRef(null);\r\n\r\n  useLayoutEffect(() => {\r\n    if (!isSelected) return;\r\n    ref.current && ref.current.focus({ preventScroll: true });\r\n  }, [isSelected]);\r\n\r\n\r\n  return {\r\n    ref,\r\n    tabIndex: isSelected ? 0 : -1\r\n  };\r\n}","import React, { useState , useEffect, useMemo, useContext, createContext, useRef , useLayoutEffect } from \"react\";\r\nimport DataGrid,  {HeaderRendererProps} from 'react-data-grid';\r\n\r\nimport NumericEditor from \"./editor/numericeditor.component\";\r\nimport DeliveryService from \"../services/delivery.service\";\r\nimport CustomerService from \"../services/customer.service\";\r\nimport BillService from \"../services/bill.service\";\r\nimport PaymentService from \"../services/payment.service\";\r\nimport moment from 'moment';\r\nimport Grid from '@mui/material/Grid';\r\nimport { Link } from \"react-router-dom\";\r\nimport { CSVLink } from 'react-csv';\r\n\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nconst rootClassname = 'rootClassname';\r\nconst filterColumnClassName = 'filter-cell';\r\nconst filterContainerClassname = 'filterContainerClassname';\r\nconst filterClassname = 'filterClassname';\r\n\r\nconst FilterContext = createContext(undefined);\r\n\r\nfunction inputStopPropagation(event) {\r\n  if (['ArrowLeft', 'ArrowRight'].includes(event.key)) {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n\r\nfunction getComparator(sortColumn) {\r\n  switch (sortColumn) {\r\n    case 'name':\r\n      return (a, b) => {\r\n        return a[sortColumn].localeCompare(b[sortColumn]);\r\n      };\r\n    default:\r\n      return (a, b) => {\r\n        return a[sortColumn] - b[sortColumn];\r\n      };\r\n  }\r\n}\r\n\r\nconst CollectionBillsList = props => {\r\n\r\n  const [filters, setFilters] = useState({\r\n    enabled: true\r\n  });\r\n\r\n  const initialCalendar = {\r\n    currentDate: moment()\r\n  };\r\n  \r\n    const [rows, setRows] = useState([]);  \r\n    const [calendar, setCalendar] = useState(initialCalendar);\r\n    const [sortColumns, setSortColumns] = useState([]);  \r\n    const [from, setFrom] = useState(); \r\n    const [to, setTo] = useState();   \r\n    const [confirm, setConfirm] = useState(false);\r\n    const [open, setOpen] = useState(false); \r\n    const [message, setMessage] = useState();\r\n\r\n    const columns = [\r\n\r\n      { key: 'print', name: 'PRINT' , width: 70, resizable: true,\r\n      formatter(props) {\r\n        return <>\r\n          <Link disable=\"true\"\r\n          to={ (\"/gui/collectionBills/\"+moment(props.row.from,'YYYY-MMM-DD').format(\"YYYY-MM-DD\")+\"/\"+moment(props.row.to,'YYYY-MMM-DD').format(\"YYYY-MM-DD\")+\"/\"+(props.row.partyId)) }\r\n          className=\"badge badge-warning\">\r\n          Print\r\n          </Link>\r\n        </>;\r\n      }\r\n    },\r\n\r\n      { key: 'id', name: 'ID' ,width:50, resizable: true ,\r\n      headerCellClass: filterColumnClassName,\r\n      headerRenderer: (p) => (\r\n        <FilterRenderer {...p}>\r\n          {({ filters, ...rest }) => (\r\n            <input\r\n              {...rest}\r\n              className={filterClassname}\r\n              value={filters.name}\r\n              onChange={(e) =>\r\n                setFilters({\r\n                  ...filters,\r\n                  name: e.target.value\r\n                })\r\n              }\r\n              onKeyDown={inputStopPropagation}\r\n            />\r\n          )}\r\n        </FilterRenderer>\r\n      )\r\n      },\r\n      { key: 'name', name: 'Name' ,  resizable: true},\r\n      { key: 'from', name: 'FROM' ,  resizable: true},\r\n      { key: 'to', name: 'TO' ,  resizable: true},\r\n      { key: 'qty', name: 'Quantity' , resizable: true},\r\n      { key: 'bill', name: 'Total' ,   resizable: true }\r\n    ];\r\n    \r\n    \r\n    useEffect(() => {\r\n      getBills();\r\n    }, [props.match.params.date]);\r\n\r\n\r\n\r\n    function getBills(){\r\n      var calendar={currentDate: moment(props.match.params.date,'DD-MMM-YYYY')};\r\n      setCalendar(calendar);\r\n      var initialRows = null;\r\n     const paramsBill={active:true, type:\"expense\", category: \"collection\"};\r\n     BillService.getAll(paramsBill).then((response) => {\r\n       var deliverys = response.data;\r\n       console.log(deliverys);\r\n       initialRows=new Array (deliverys.length);\r\n        deliverys && deliverys.map((bill, index)=>{\r\n          initialRows[index]={};\r\n          initialRows[index][\"id\"]=bill.id;\r\n          initialRows[index][\"name\"]=bill.party;\r\n            initialRows[index][\"qty\"]=bill.quantity;\r\n          initialRows[index][\"rate\"]=bill.rate;\r\n          initialRows[index][\"from\"]=bill.from;\r\n          initialRows[index][\"to\"]=bill.to;\r\n          initialRows[index][\"bill\"]=bill.bill;\r\n          initialRows[index][\"partyId\"]=bill.partyId;\r\n        });\r\n        billService(calendar, initialRows);\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });    \r\n      \r\n    }\r\n\r\n    function onChangeFrom(e){\r\n      setFrom(e.target.value);\r\n    }\r\n\r\n    function onChangeTo(e){\r\n      setTo(e.target.value);\r\n    }\r\n\r\n    function handleClickOpen () {\r\n      setOpen(true);\r\n    }\r\n  \r\n    function handleClose () {\r\n      setConfirm(false);\r\n      setOpen(false);\r\n    };\r\n\t\r\n      function handleConfirm () {\r\n        setConfirm(false);\r\n        generateBillsCollectionAfterCheck(calendar.currentDate.format(\"MMM-YYYY\"));\r\n        setOpen(false);\r\n      }\r\n\r\n\r\n\r\n    function deliveryService(calendar, initialRows){\r\n      const params ={ \"date\": calendar.currentDate.format(\"DD\"),  type: \"expence\"};\r\n      DeliveryService.getAll(params).then((response) => {\r\n        var deliverys = response.data;\r\n        deliverys && deliverys.map((delivery) => {\r\n          for(var initialRow of initialRows){\r\n            if(initialRow.id == delivery.partyId){\r\n              initialRow[\"today\"] = delivery.quantity;\r\n              initialRow[\"idtoday\"]=delivery.id;\r\n              break;\r\n            }\r\n          };\r\n        });\r\n        console.log(initialRows);\r\n        setRows(initialRows);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n    }\r\n\r\n    function billService(calendar, initialRows){\r\n      const paramsBill ={ active: true, type: \"expense\", category: \"collection\"};\r\n      BillService.getAll(paramsBill).then((response) => {\r\n        var deliverys = response.data;\r\n        console.log(deliverys);\r\n        deliverys && deliverys.map((delivery) => {\r\n          for(var initialRow of initialRows){\r\n            if(initialRow.id == delivery.partyId){\r\n              if(delivery.from){\r\n                initialRow[\"qty\"] = delivery.quantity;\r\n                initialRow[\"rate\"]=delivery.rate;\r\n                initialRow[\"bill\"]=delivery.bill;\r\n                initialRow[\"from\"]=delivery.from;\r\n                initialRow[\"to\"]=delivery.to;\r\n              }\r\n              break;\r\n            }\r\n          };\r\n        });\r\n        deliveryService(calendar, initialRows);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });    \r\n    }\r\n\r\n    function rowChange(row, col) {\r\n      constructDeliveryUpdateData(row,col);\r\n    }\r\n\r\n     function generateBillCollection(){\r\n        const paramsFrom ={ \"type\": \"expense\",\"from\":from, \"to\":to };\r\n        BillService.validateCollectionBillsGeneration(\"expense\",paramsFrom).then((response) => {\r\n          console.log(response.data);\r\n          var bill = response.data;\r\n          //bill object has bill, means the bill was generated\r\n          if(bill.from){\r\n            setConfirm(true);\r\n            setMessage(\"Bill already generated for the period. Do you want to continue? Please confirm to proceed.\");\r\n            handleClickOpen();\r\n          }else{\r\n            generateBillsCollectionAfterCheck();\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n          //no bill exist for the month, so generate bill without prompting user\r\n          if(e.response.status == 404){\r\n            generateBillsCollectionAfterCheck();\r\n          }\r\n        });\r\n        }\r\n      \r\n      function generateBillsCollectionAfterCheck(){\r\n        const paramsBill ={  \"type\": \"expense\",\"from\":from, \"to\":to , \"category\":\"collection\"};\r\n        BillService.generateBillsCollection(paramsBill).then((response) => {\r\n            var deliverys = response.data;\r\n            deliverys && deliverys.map((delivery) => {\r\n              for(var initialRow of rows){\r\n                if(initialRow.id == delivery.partyId){\r\n                  initialRow[\"qty\"] = delivery.quantity;\r\n                  initialRow[\"rate\"]=delivery.rate;\r\n                  initialRow[\"bill\"]=delivery.bill;\r\n                  break;\r\n                }\r\n              };\r\n            });\r\n            //call getBills\r\n             getBills();\r\n            setMessage(\"Bill generated for the period .\");\r\n            handleClickOpen();\r\n            console.log(rows);\r\n            setRows(rows);\r\n          })\r\n          .catch((e) => {\r\n            if(e.response.status == 404){\r\n              setMessage(\"Bill could not be generated for the period as there are overlapping bills.\");\r\n              setConfirm(false);\r\n              handleClickOpen();\r\n            }\r\n          });\r\n      }\r\n      \r\n    function constructDeliveryUpdateData(row, col){\r\n      var columnVal = row[col.indexes][col.column.key]; \r\n      var columnId = row[col.indexes][\"idtoday\"];\r\n      console.log(row[col.indexes].id+ \" - \"+columnVal + \" - \" +columnId+\" - \" + col.column.key);\r\n      saveDelivery(row[col.indexes].id, calendar.currentDate, calendar.currentDate , columnVal, columnId, row[col.indexes]);\r\n      rows[col.indexes] = row[col.indexes];\r\n      //row gives filtered rows, so putting updated data into rows\r\n      setRows (rows.slice());\r\n    }\r\n\r\n    function saveDelivery (cutomerId, date, month, quantity, id, rowData) {\r\n      var data = {\r\n        id: id,\r\n        partyId: cutomerId,\r\n        date: date.format(\"DD\"),\r\n        month: month.format(\"MMM-YYYY\"),\r\n        quantity: quantity,\r\n\t\t    type: \"expence\"\r\n      };\r\n      if(id){\r\n          DeliveryService.update(id, data)\r\n            .then(response => {\r\n              console.log(response.data);\r\n            })\r\n            .catch(e => {\r\n              console.log(e);\r\n            });\r\n      } else {\r\n        DeliveryService.create(data)\r\n            .then(response => {\r\n              rowData[\"idtoday\"]=response.data.id;\r\n              console.log(rowData);\r\n            })\r\n            .catch(e => {\r\n              console.log(e);\r\n            });\r\n        }\r\n      }\r\n\r\n  const filteredRows = useMemo( () => {\r\n    function filter(){\r\n      var filteredRows = null;\r\n       filteredRows = rows.filter((r) => {\r\n        return (\r\n          (filters.name ? r.name.includes(filters.name) : true)\r\n        );\r\n      })\r\n      if (sortColumns.length === 0) return filteredRows;\r\n      filteredRows = [...filteredRows].sort((a, b) => {\r\n        for (const sort of sortColumns) {\r\n          const comparator = getComparator(sort.columnKey);\r\n          const compResult = comparator(a, b);\r\n          if (compResult !== 0) {\r\n            return sort.direction === 'ASC' ? compResult : -compResult;\r\n          }\r\n        }\r\n        return 0;\r\n      })\r\n      return filteredRows;\r\n    }\r\n    return filter();\r\n  }, [rows, filters, sortColumns]);\r\n\r\n    return (\r\n      <div >\r\n        {calendar ? (\r\n        <div >\r\n          <Grid container spacing={{ xs: 1}} >\r\n            <Grid item xs={3} sm={1}>\r\n                &nbsp;\r\n                <Button variant=\"warning\" className=\"badge\">\r\n                      <CSVLink data={filteredRows} filename={'dailyIncome.txt'}>Export</CSVLink>\r\n                </Button>\r\n              </Grid> \r\n          <Grid item xs={3} sm={2}> \r\n              <Link\r\n                to={(from && to) ? (\"/gui/collectionBills/\"+from+\"/\"+to) : \"\"}\r\n                hidden={(from && to) ? false : true}\r\n                className=\"badge\">\r\n                 Print Collection\r\n              </Link>\r\n          </Grid> \r\n\r\n          <Grid item xs={6} sm={3}> \r\n              <Link to=\"#\"\r\n                onClick={ (from && to) ? (() => generateBillCollection(calendar.currentDate.format(\"DD-MM-YYYY\"))): \"\"}\r\n                className=\"badge\">\r\n                 Generate Collection Bill\r\n              </Link>    \r\n          </Grid> \r\n          <Grid item xs={6} sm={6}> \r\n\t\t\t      <input\r\n                type=\"date\"\r\n                id=\"from\"\r\n                required\r\n                onChange={onChangeFrom}\r\n                name=\"from\"\r\n\t\t\t\t        style={{ width:150, height:20 }}\r\n                placeholder=\"From\"\r\n              />\r\n              <input\r\n                type=\"date\"\r\n                id=\"to\"\r\n                required\r\n                onChange={onChangeTo}\r\n                name=\"to\"\r\n\t\t\t\t        style={{ width:150, height:20 }}\r\n                placeholder=\"To\"\r\n              />\r\n\t\t\t  \r\n          </Grid> \r\n          </Grid>\r\n        </div>     \r\n         ) : (\r\n          <div>\r\n            <br />\r\n            <p>Please click on a Customer...</p>\r\n          </div>\r\n        )}\r\n        <div className=\"rootClassname\">\r\n          <FilterContext.Provider value={filters}>\r\n            <DataGrid columns={columns} onRowsChange={rowChange} \r\n             defaultColumnOptions={{\r\n              sortable: true,\r\n              resizable: true\r\n            }}\r\n              className={filters.enabled ? filterContainerClassname : undefined}\r\n              rows={filteredRows}\r\n              sortColumns={sortColumns}\r\n              onSortColumnsChange={setSortColumns}\r\n              headerRowHeight={filters.enabled ? 50 : undefined}\r\n              />\r\n            </FilterContext.Provider>\r\n          </div>\r\n\r\n          <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\">\r\n              <DialogTitle id=\"alert-dialog-title\">\r\n                {\"Bills\"}\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                {message}\r\n                </DialogContentText>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                  {confirm ? (\r\n                    <Button onClick={handleConfirm}>Confirm</Button>\r\n                    ) : \"\"}\r\n                <Button onClick={handleClose}>Close</Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n      </div>\r\n    );\r\n  };\r\nexport default CollectionBillsList;\r\n\r\n\r\nfunction FilterRenderer({isCellSelected,column,children}) {\r\n  const filters = useContext(FilterContext);\r\n  const { ref, tabIndex } = useFocusRef(isCellSelected);\r\n\r\n  return (\r\n    <>\r\n      <div>{column.name}</div>\r\n      {filters.enabled && <div>{children({ ref, tabIndex, filters })}</div>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport function useFocusRef(isSelected) {\r\n  const ref = useRef(null);\r\n\r\n  useLayoutEffect(() => {\r\n    if (!isSelected) return;\r\n    ref.current && ref.current.focus({ preventScroll: true });\r\n  }, [isSelected]);\r\n\r\n\r\n  return {\r\n    ref,\r\n    tabIndex: isSelected ? 0 : -1\r\n  };\r\n}","import React, { useState , useEffect, useMemo, useContext, createContext, useRef , useLayoutEffect } from \"react\";\r\nimport DataGrid,  {HeaderRendererProps} from 'react-data-grid';\r\nimport { Link } from \"react-router-dom\";\r\nimport NumericEditor from \"./editor/numericeditor.component\";\r\nimport DeliveryService from \"../services/delivery.service\";\r\nimport CustomerService from \"../services/customer.service\";\r\nimport BillService from \"../services/bill.service\";\r\nimport PaymentService from \"../services/payment.service\";\r\nimport moment from 'moment';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nimport { CSVLink } from 'react-csv';\r\nimport Button from '@mui/material/Button';\r\nimport { collapseClasses } from \"@mui/material\";\r\n\r\nconst rootClassname = 'rootClassname';\r\nconst filterColumnClassName = 'filter-cell';\r\nconst filterContainerClassname = 'filterContainerClassname';\r\nconst filterClassname = 'filterClassname';\r\n\r\nconst FilterContext = createContext(undefined);\r\n\r\nfunction inputStopPropagation(event) {\r\n  if (['ArrowLeft', 'ArrowRight'].includes(event.key)) {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n\r\nfunction getComparator(sortColumn) {\r\n  switch (sortColumn) {\r\n    case 'name':\r\n      return (a, b) => {\r\n        return a[sortColumn].localeCompare(b[sortColumn]);\r\n      };\r\n    default:\r\n      return (a, b) => {\r\n        return a[sortColumn] - b[sortColumn];\r\n      };\r\n  }\r\n}\r\n\r\nconst CollectionDaily = props => {\r\n\r\n  const [filters, setFilters] = useState({\r\n    name: '',\r\n    route: '',\r\n    enabled: true\r\n  });\r\n\r\n  const initialCalendar = {\r\n    currentDate: moment()\r\n  };\r\n  \r\n    const [rows, setRows] = useState([]);  \r\n\t  const [message, setMessage] = useState();\r\n\t  const [rate, setRate] = useState({});\r\n\t  const [open, setOpen] = useState(false);\r\n\t  const [confirm, setConfirm] = useState(false);\r\n    const [calendar, setCalendar] = useState(initialCalendar);\r\n    const [sortColumns, setSortColumns] = useState([]);  \r\n    const [from, setFrom] = useState();\r\n    const [to, setTo] = useState();\r\n \r\n    const columns = [\r\n      { key: 'id', name: 'ID' , minWidth: 40 , resizable: true ,\r\n      headerCellClass: filterColumnClassName,\r\n      headerRenderer: (p) => (\r\n        <FilterRenderer {...p}>\r\n          {({ filters, ...rest }) => (\r\n            <input\r\n              {...rest}\r\n              className={filterClassname}\r\n              value={filters.name}\r\n              onChange={(e) =>\r\n                setFilters({\r\n                  ...filters,\r\n                  name: e.target.value\r\n                })\r\n              }\r\n              onKeyDown={inputStopPropagation}\r\n            />\r\n          )}\r\n        </FilterRenderer>\r\n      )\r\n      },\r\n      { key: 'name', name: 'Name' , width: 200, resizable: true,\r\n      formatter(props) {\r\n        return <>\r\n          {props.row.name}\r\n          <Link disable=\"true\" to=\"#\"\r\n          onClick={() => addCollectionForSameFarmer(props.row.id, props.row.index, props.row)}\r\n          className=\"badge badge-warning\">\r\n          Add\r\n          </Link>\r\n        </>;\r\n      }\r\n      },\r\n      { key: 'today', name: 'Quantity' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:80, resizable: true },\r\n      { key: 'fat', name: 'Fat' , minWidth:20 , resizable: true , editor: NumericEditor, editorOptions: {editOnClick: true} },\r\n      { key: 'snf', name: 'Snf' , minWidth:20 , resizable: true, editor: NumericEditor, editorOptions: {editOnClick: true} },\r\n      { key: 'water', name: 'Water' , minWidth:40 , resizable: true, editor: NumericEditor, editorOptions: {editOnClick: true} },\r\n      { key: 'rate', name: 'Rate' , minWidth:40 , resizable: true ,editor: NumericEditor, editorOptions: {editOnClick: true}},\r\n      { key: 'amount', name: 'Amount' , minWidth:40 , resizable: true },\r\n      { key: 'route', name: 'Route' , minWidth:40, resizable: true ,\r\n          headerCellClass: filterColumnClassName,\r\n          headerRenderer: (p) => (\r\n            <FilterRenderer {...p}>\r\n              {({ filters, ...rest }) => (\r\n                <input\r\n                  {...rest}\r\n                  className={filterClassname}\r\n                  value={filters.route}\r\n                  onChange={(e) =>\r\n                    setFilters({\r\n                      ...filters,\r\n                      route: e.target.value\r\n                    })\r\n                  }\r\n                  onKeyDown={inputStopPropagation}\r\n                />\r\n              )}\r\n            </FilterRenderer>\r\n          )\r\n      },\r\n      { key: 'bill', name: 'Bill' , minWidth:40 , resizable: true },\r\n      { key: 'qty', name: 'Bill Qty' , minWidth:70 , resizable: true },\r\n      { key: 'paid', name: 'Paid' , minWidth:60 , resizable: true }\r\n    ];\r\n    \r\n    \r\n    useEffect(() => {\r\n      var calendar={currentDate:moment(props.match.params.date,'DD-MMM-YYYY')};\r\n      setCalendar(calendar);\r\n      var initialRows = null;\r\n      const paramCustomer = { active: true, type: \"farmer\"};\r\n\r\n      CustomerService.getAll(paramCustomer).then((response) => {\r\n        var customers = response.data;\r\n        initialRows = new Array(customers.length);\r\n        customers.map((customer, index) => {\r\n          initialRows[index]={};\r\n          initialRows[index][\"id\"]=customer.id;\r\n          initialRows[index][\"name\"]=customer.name;\r\n          initialRows[index][\"route\"]=customer.route.name;\r\n          initialRows[index][\"index\"]=index;\r\n        });\r\n        deliveryService(calendar, initialRows);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\t  \r\n    }, [props.match.params.date]);\r\n\r\n    function deliveryService(calendar, initialRows){\r\n      const params ={ \"date\": calendar.currentDate.format(\"DD\"), \r\n                      \"month\" : calendar.currentDate.format(\"MMM-YYYY\"), type: \"expense\"};\r\n      DeliveryService.getAll(params).then((response) => {\r\n        var deliverys = response.data;\r\n       \r\n        deliverys && deliverys.map((delivery) => {\r\n          for(var initialRow of initialRows){\r\n            if(initialRow.id == delivery.partyId){\r\n              if(initialRow[\"idtoday\"]){\r\n                var rowCopy = {\r\n                  id: initialRow.id,\r\n                  name: initialRow.name,\r\n                  route: initialRow.route,\r\n                  index: initialRow.index+1,\r\n\r\n                  today: delivery.quantity,\r\n                  idtoday: delivery.id,\r\n                  fat: delivery.fat,\r\n                  snf: delivery.snf,\r\n                  water: delivery.water,\r\n                  rate: delivery.rate,\r\n                  amount: delivery.amount\r\n                }\r\n                initialRows.splice(initialRow.index, 0, rowCopy);\r\n              }else{\r\n                initialRow[\"today\"] = delivery.quantity;\r\n                initialRow[\"idtoday\"]=delivery.id;\r\n                initialRow[\"fat\"]=delivery.fat;\r\n                initialRow[\"snf\"]=delivery.snf;\r\n                initialRow[\"water\"]=delivery.water;\r\n                initialRow[\"rate\"]=delivery.rate;\r\n                initialRow[\"amount\"]=delivery.amount;\r\n              }\r\n              break;\r\n            }\r\n          };\r\n        });\r\n        billService(calendar, initialRows);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n    }\r\n\r\n    function billService(calendar, initialRows){\r\n      const paramsBill ={ from: calendar.currentDate.format(\"YYYY-MM-DD\"), month : calendar.currentDate.format(\"MMM-YYYY\"), active: true, type: \"expense\"};\r\n      BillService.getAll(paramsBill).then((response) => {\r\n        var deliverys = response.data;        \r\n        initialRows && initialRows.map((initialRow) => {\r\n          for(var delivery of deliverys){\r\n            if(initialRow.id == delivery.partyId){\r\n              if(delivery.bill){\r\n                initialRow[\"qty\"] = delivery.quantity;                \r\n                initialRow[\"bill\"]=delivery.bill;                \r\n              }\r\n              break;\r\n            }\r\n          };\r\n        });\r\n        getPayment(calendar, initialRows);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\t  \r\n      //previous month bill and due amount\r\n\t  \r\n    }\r\n\r\n    function getPayment(calendar, initialRows){\r\n      var params ={ \"month\": calendar.currentDate.format(\"MMM-YYYY\"), \"active\": true, type: \"expense\"};\r\n      PaymentService.getAll(params).then(response => {\r\n        var bills = response.data;\r\n        initialRows && initialRows.map((initialRow) => {\r\n          bills && bills.map((bill) => {\r\n              if(bill.partyId == initialRow.id){\r\n                if(initialRow[\"paid\"]){\r\n                  initialRow[\"paid\"]=initialRow[\"paid\"]+bill.payment;\r\n                }else{\r\n                  initialRow[\"paid\"]=+bill.payment\r\n                }\r\n              }\r\n            });\r\n        });\r\n\r\n        console.log(initialRows);\r\n        setRows(initialRows);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n    }\r\n\r\n    function addCollectionForSameFarmer(pa0tyId, index, row){\r\n        var rowCopy = {\r\n          id: row.id,\r\n          name: row.name,\r\n          route: row.route,\r\n          index: row.index,\r\n          qty: row.quantity,\r\n          bill: row.bill,\r\n          paid: row.paid\r\n        }\r\n        row.index=index+1;\r\n        rows.splice(index, 0, rowCopy);\r\n        setRows(rows.slice());\r\n    }\r\n\r\n    function rowChange(row, col) {\r\n      constructDeliveryUpdateData(row,col);\r\n      setRows (row);\r\n    }\r\n\r\n    function constructDeliveryUpdateData(row, col){\r\n      var rowData = row[col.indexes];\r\n      var columnVal = rowData[col.column.key]; \r\n      var columnId = rowData[\"idtoday\"];\r\n      console.log(rowData.id+ \" - \"+columnVal + \" - \" +columnId+\" - \" + col.column.key);\r\n      saveDelivery(rowData.id, calendar.currentDate, calendar.currentDate , rowData.today, \r\n        columnId, rowData, rowData.fat, rowData.snf, rowData.water, rowData.rate);\r\n    }\r\n\r\n    function saveDelivery (cutomerId, date, month, quantity, id, rowData, fat, snf, water, rate) {\r\n      var amount = 0;\r\n      var tempRate = 0;\r\n      var tempQantity = 0;\r\n      if(rate){\r\n        if(rate<30){\r\n          tempRate = 30;\r\n        }else {\r\n          tempRate = rate;\r\n        }\r\n      }\r\n      if(quantity){\r\n        tempQantity = quantity;\r\n      }\r\n\r\n      amount = rate * tempQantity;\r\n      rowData[\"amount\"]=amount;\r\n\r\n\r\n      var data = {\r\n        id: id,\r\n        partyId: cutomerId,\r\n        date: date.format(\"DD\"),\r\n        deliveryDate: date.format(\"DD-MMM-YYYY\"),\r\n        month: month.format(\"MMM-YYYY\"),\r\n        fat: fat,\r\n        snf: snf,\r\n        water: water,\r\n        quantity: quantity,\r\n        rate: rate,\r\n\t\t    type: \"expense\",   \r\n        amount: amount,\r\n        category: \"collection\"      \r\n      };\r\n      console.log(data);\r\n      if(id){\r\n          DeliveryService.update(id, data)\r\n            .then(response => {\r\n              console.log(response.data);\r\n            })\r\n            .catch(e => {\r\n              console.log(e);\r\n            });\r\n      } else {\r\n        DeliveryService.create(data)\r\n            .then(response => {\r\n              rowData[\"idtoday\"]=response.data.id;\r\n              console.log(rowData);\r\n            })\r\n            .catch(e => {\r\n              console.log(e);\r\n            });\r\n        }\r\n      } \r\n\r\n  const filteredRows = useMemo( () => {\r\n    function filter(){\r\n      var filteredRows = null;\r\n       filteredRows = rows.filter((r) => {\r\n        return (\r\n          (filters.name ? r.name.includes(filters.name) : true)\r\n          && (filters.route ? r.route.includes(filters.route) : true)\r\n        );\r\n      })\r\n      if (sortColumns.length === 0) return filteredRows;\r\n      filteredRows = [...filteredRows].sort((a, b) => {\r\n        for (const sort of sortColumns) {\r\n          const comparator = getComparator(sort.columnKey);\r\n          const compResult = comparator(a, b);\r\n          if (compResult !== 0) {\r\n            return sort.direction === 'ASC' ? compResult : -compResult;\r\n          }\r\n        }\r\n        return 0;\r\n      })\r\n      return filteredRows;\r\n    }\r\n    return filter();\r\n  }, [rows, filters, sortColumns]);\r\n\r\n    return (\r\n      <div >\r\n        {calendar ? (\r\n        <div >\r\n         \r\n            <Grid container spacing={{ xs: 1}} >\r\n          <Grid item xs={6} sm={3}> \r\n            <Link\r\n                to={\"/gui/collectionDaily/\"+calendar.currentDate.clone().subtract(1, 'days').format('DD-MMM-YYYY')}\r\n                className=\"badge badge-warning\">\r\n                Prev\r\n              </Link>\r\n              {calendar.currentDate.format(\"DD-MMM-YYYY\")}\r\n              <Link\r\n                to={\"/gui/collectionDaily/\"+calendar.currentDate.clone().add(1, 'days').format('DD-MMM-YYYY')}\r\n                className=\"badge badge-warning\">\r\n                Next\r\n              </Link>\r\n            </Grid>\r\n           \r\n            <Grid item xs={3} sm={1}>\r\n                &nbsp;\r\n                <Button variant=\"warning\" className=\"badge\">\r\n                      <CSVLink \r\n                      data={filteredRows} filename={'dailyCollectionExpense.txt'}>Export\r\n                      </CSVLink>\r\n                </Button>\r\n              </Grid> \r\n          </Grid>  \r\n          \r\n        </div>     \r\n         ) : (\r\n          <div>\r\n            <br />\r\n            <p>Please click on a Customer...</p>\r\n          </div>\r\n        )}\r\n        <div className=\"rootClassname\">\r\n          <FilterContext.Provider value={filters}>\r\n            <DataGrid columns={columns} onRowsChange={rowChange} \r\n             defaultColumnOptions={{\r\n              sortable: true,\r\n              resizable: true\r\n            }}\r\n              className={filters.enabled ? filterContainerClassname : undefined}\r\n              rows={filteredRows}\r\n              sortColumns={sortColumns}\r\n              onSortColumnsChange={setSortColumns}\r\n              headerRowHeight={filters.enabled ? 50 : undefined}\r\n              />\r\n            </FilterContext.Provider>\r\n          </div>\r\n      </div>\r\n    );\r\n  };\r\nexport default CollectionDaily;\r\n\r\n\r\nfunction FilterRenderer({isCellSelected,column,children}) {\r\n  const filters = useContext(FilterContext);\r\n  const { ref, tabIndex } = useFocusRef(isCellSelected);\r\n\r\n  return (\r\n    <>\r\n      <div>{column.name}</div>\r\n      {filters.enabled && <div>{children({ ref, tabIndex, filters })}</div>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport function useFocusRef(isSelected) {\r\n  const ref = useRef(null);\r\n\r\n  useLayoutEffect(() => {\r\n    if (!isSelected) return;\r\n    ref.current && ref.current.focus({ preventScroll: true });\r\n  }, [isSelected]);\r\n\r\n\r\n  return {\r\n    ref,\r\n    tabIndex: isSelected ? 0 : -1\r\n  };\r\n}","import React, { useState , useEffect, useMemo, useContext, createContext, useRef , useLayoutEffect } from \"react\";\r\nimport RouteService from \"../services/route.service\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DataGrid, {TextEditor, SelectCellFormatter} from 'react-data-grid';\r\nimport DeliveryService from \"../services/delivery.service\";\r\nimport CustomerService from \"../services/customer.service\";\r\nimport DropDownEditor, {useRoute} from \"../components/editor/dropdown.component\";\r\nimport NumericEditor from \"../components/editor/numericeditor.component\";\r\nimport moment from 'moment';\r\n\r\nconst rootClassname = 'rootClassname';\r\nconst filterColumnClassName = 'filter-cell';\r\nconst filterContainerClassname = 'filterContainerClassname';\r\nconst filterClassname = 'filterClassname';\r\n\r\nconst FilterContext = createContext(undefined);\r\n\r\nfunction inputStopPropagation(event) {\r\n  if (['ArrowLeft', 'ArrowRight'].includes(event.key)) {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n\r\nexport function stopPropagation(event) {\r\n  event.stopPropagation();\r\n}\r\n\r\nfunction getComparator(sortColumn) {\r\n  switch (sortColumn) {\r\n    case 'name':\r\n\tcase 'address':\r\n\tcase 'startDate':\r\n\tcase 'endDate':\r\n\tcase 'type':\r\n      return (a, b) => {\r\n        return a[sortColumn].localeCompare(b[sortColumn]);\r\n      };\r\n    default:\r\n      return (a, b) => {\r\n        return a[sortColumn] - b[sortColumn];\r\n      };\r\n  }\r\n}\r\n\r\nconst CustomerList = props => {  \r\n\r\n  const [rows, setRows] = useState([]);\r\n\tconst [sortColumns, setSortColumns] = useState([]);  \r\n  const [filters, setFilters] = useState({\r\n    name: '',\r\n    enabled: true\r\n  });\r\n\r\n  const columns = [\r\n    { key: 'id', name: 'ID' , width: 40 , resizable: true,frozen: true,\r\n        headerCellClass: filterColumnClassName,\r\n        headerRenderer: (p) => (\r\n          <FilterRenderer {...p}>\r\n            {({ filters, ...rest }) => (\r\n              <input\r\n                {...rest}\r\n                className={filterClassname}\r\n                value={filters.name}\r\n                onChange={(e) =>\r\n                  setFilters({\r\n                    ...filters,\r\n                    name: e.target.value\r\n                  })\r\n                }\r\n                onKeyDown={inputStopPropagation}\r\n              />\r\n            )}\r\n          </FilterRenderer>\r\n        )\r\n    },\r\n    { key: 'name', name: 'Name' , editor: TextEditor, editorOptions: {editOnClick: true} , resizable: true ,frozen: true,},\r\n    { key: 'address', name: 'Address' , editor: TextEditor, editorOptions: {editOnClick: true} , resizable: true },\r\n    { key: 'mobNo', name: 'MobNo' , editor: NumericEditor, editorOptions: {editOnClick: true} , resizable: true },\r\n    { key: 'startDate', name: 'StartDate' , editor: TextEditor, editorOptions: {editOnClick: true} , resizable: true },\r\n    { key: 'endDate', name: 'EndDate' , editor: TextEditor, editorOptions: {editOnClick: true} , resizable: true },\r\n    { key: 'defaultQuantity', name: 'Quantity' , width: 40  , editor: NumericEditor, editorOptions: {editOnClick: true} , resizable: true },\r\n    { key: 'active', name: 'Active' , width: 40 ,\r\n            formatter({ row, onRowChange, isCellSelected }) {\r\n              return (\r\n                <SelectCellFormatter\r\n                  value={row.active}\r\n                  onChange={() => {\r\n                    onRowChange({ ...row, active: !row.active });\r\n                  }}\r\n                  onClick={stopPropagation}\r\n                  isCellSelected={isCellSelected}\r\n                />\r\n              );\r\n            } },\r\n    { key: 'routeId', name: 'Route' , resizable: true ,\r\n              formatter(props) {\r\n                return <>{props.row.routeName}</>;\r\n              },\r\n              editor: DropDownEditor,\r\n              editorOptions: {\r\n                editOnClick: true\r\n              }},\r\n    { key: 'routeSeq', name: 'Seq' , width: 40 , editor: NumericEditor, editorOptions: {editOnClick: true} , resizable: true },\r\n    { key: 'type', name: 'Type' , width: 80 , editor: TextEditor, editorOptions: {editOnClick: true} , resizable: true }\r\n  ];\r\n\r\n    useEffect(() => {\r\n      var initialRows = null;\r\n      const paramCustomer = { _sort: \"routeId\", _order: \"asc\"};\r\n      console.log(paramCustomer);\r\n      CustomerService.getAll(paramCustomer).then((response) => {\r\n        var customers = response.data;\r\n        initialRows = new Array(customers.length);\r\n        customers.map((customer, index) => {\r\n          initialRows[index]={};\r\n          initialRows[index][\"id\"]=customer.id;\r\n          initialRows[index][\"name\"]=customer.name;\r\n          initialRows[index][\"address\"]=customer.address;\r\n          initialRows[index][\"mobNo\"]=customer.mobNo;\r\n          initialRows[index][\"startDate\"]=customer.startDate;\r\n          initialRows[index][\"endDate\"]=customer.endDate;\r\n          initialRows[index][\"defaultQuantity\"]=customer.defaultQuantity;\r\n          initialRows[index][\"active\"]=customer.active;\r\n          initialRows[index][\"routeId\"]=customer.routeId;\r\n          initialRows[index][\"routeSeq\"]=customer.routeSeq;\r\n\t\t      initialRows[index][\"type\"]=customer.type;\r\n          if(customer.route){\r\n            initialRows[index][\"routeName\"]=customer.route.name;\r\n          }\r\n        });\r\n        setRows(initialRows);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });    \r\n    }, []);\r\n\r\n    function rowChange(row, col) {\r\n      constructDeliveryUpdateData(row,col);\r\n      setRows (row);\r\n    }\r\n\r\n    function constructDeliveryUpdateData(row, col){\r\n      console.log(row[col.indexes].id+ \" - \"+row[col.indexes][col.column.key]);\r\n      saveDelivery(row[col.indexes]);\r\n    }\r\n\r\n    function saveDelivery (row) {\r\n      var data = {\r\n        id: row.id,\r\n        name: row.name,\r\n        address: row.address,\r\n        mobNo: row.mobNo,\r\n        startDate: row.startDate,\r\n        endDate: row.endDate,\r\n        active: row.active,\r\n        routeId: row.routeId,\r\n        defaultQuantity: row.defaultQuantity,\r\n        routeSeq: row.routeSeq,\r\n\t\ttype: row.type\r\n      };\r\n      console.log(data);\r\n      \r\n           CustomerService.update(row.id, data)\r\n            .then(response => {\r\n              console.log(response.data);\r\n            })\r\n            .catch(e => {\r\n              console.log(e);\r\n            }); \r\n    }\r\n\r\n\t  const filteredRows = useMemo( () => {\r\n      function filter(){\r\n        var filteredRows = null;\r\n         filteredRows = rows.filter((r) => {\r\n          return (\r\n            (filters.name ? r.name.includes(filters.name) : true)\r\n          );\r\n        })\r\n        if (sortColumns.length === 0) return filteredRows;\r\n        filteredRows = [...filteredRows].sort((a, b) => {\r\n          for (const sort of sortColumns) {\r\n            const comparator = getComparator(sort.columnKey);\r\n            const compResult = comparator(a, b);\r\n            if (compResult !== 0) {\r\n              return sort.direction === 'ASC' ? compResult : -compResult;\r\n            }\r\n          }\r\n          return 0;\r\n        })\r\n        return filteredRows;\r\n      }\r\n      return filter();\r\n    }, [rows, filters, sortColumns]);\r\n  \r\n    return (\r\n      <div >\r\n                <Link to={\"/gui/addCustomer\"} className=\"nav-link\">\r\n                  Add Customer\r\n                </Link>\r\n        <div className={rootClassname}>\r\n          <FilterContext.Provider value={filters}>\r\n            <DataGrid columns={columns} onRowsChange={rowChange} \r\n             defaultColumnOptions={{\r\n              sortable: true,\r\n              resizable: true\r\n            }}\r\n              className={filters.enabled ? filterContainerClassname : undefined}\r\n              rows={filteredRows}\r\n              sortColumns={sortColumns}\r\n              onSortColumnsChange={setSortColumns}\r\n              headerRowHeight={filters.enabled ? 50 : undefined}\r\n              />\r\n            </FilterContext.Provider>\r\n          </div>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default CustomerList;\r\n\r\n  \r\nfunction FilterRenderer({isCellSelected,column,children}) {\r\n  const filters = useContext(FilterContext);\r\n  const { ref, tabIndex } = useFocusRef(isCellSelected);\r\n\r\n  return (\r\n    <>\r\n      <div>{column.name}</div>\r\n      {filters.enabled && <div>{children({ ref, tabIndex, filters })}</div>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport function useFocusRef(isSelected) {\r\n  const ref = useRef(null);\r\n\r\n  useLayoutEffect(() => {\r\n    if (!isSelected) return;\r\n    ref.current && ref.current.focus({ preventScroll: true });\r\n  }, [isSelected]);\r\n\r\n\r\n  return {\r\n    ref,\r\n    tabIndex: isSelected ? 0 : -1\r\n  };\r\n}","import React, { Component } from \"react\";\r\nimport DeliveryService from \"../services/delivery.service\";\r\nimport BillService from \"../services/bill.service\";\r\nimport moment from \"moment\";\r\n\r\nexport default class Bills extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      bills: null\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getBills(this.props.match.params.month);\r\n  }\r\n\r\n  getBills(month){\r\n      const paramsBill ={ month : month, active: true, type: \"income\"};\r\n      var initialRows = [];\r\n      BillService.getAll(paramsBill).then((response) => {\r\n        var bills = response.data;\r\n        bills && bills.map((bill,index) => {\r\n\t\t\tif(bill.quantity > 0 || bill.dues > 0){\r\n\t\t\t\tvar initialRow = {};  \r\n\t\t\t\tinitialRow[\"id\"]=bill.id;\r\n\t\t\t\tinitialRow[\"partyId\"]=bill.partyId;\r\n\t\t\t\tinitialRow[\"month\"]=month;\r\n\t\t\t\tinitialRow[\"qty\"] = bill.quantity;\r\n\t\t\t\tinitialRow[\"rate\"]=bill.rate;\r\n\t\t\t\tinitialRow[\"bill\"]=bill.bill;\r\n\t\t\t\tinitialRow[\"dues\"]=bill.dues;\r\n\t\t\t\tinitialRow[\"totalBill\"]=initialRow[\"bill\"]+(initialRow[\"dues\"]? initialRow[\"dues\"] : 0);\r\n\t\t\t\tinitialRow[\"paid\"]=+bill.payment;\r\n        initialRow[\"discount\"]=+bill.discount;\r\n        initialRow[\"lastBillTotal\"]=+bill.lastBillTotal;\r\n\t\t\t\t\r\n\t\t\t\tinitialRow[\"name\"]=bill.party;\r\n\t\t\t\t\r\n\t\t\t\tinitialRows[index]={};\r\n\t\t\t\tinitialRows[index]=initialRow;\r\n\t\t\t}\r\n        });\r\n\t\t\r\n\t  const params ={ \"month\" : month, type: \"income\"};\r\n\t  DeliveryService.getAll(params).then((response) => {\r\n\t\tvar deliverys = response.data;\r\n\t\tdeliverys && deliverys.map((delivery) => {\r\n\t\t  for(var initialRow of initialRows){\r\n\t\t\tif(initialRow && initialRow.partyId == delivery.partyId){\r\n\t\t\t  initialRow[delivery.date] = delivery.quantity;\r\n\t\t\t  break;\r\n\t\t\t}\r\n\t\t  };\r\n\t\t});\r\n\t\tconsole.log(initialRows);\r\n\t\tthis.setState({\r\n\t\t  bills: initialRows\r\n\t\t});\r\n\t  })\r\n\t  .catch((e) => {\r\n\t\tconsole.log(e);\r\n\t  });\r\n\t  \r\n        this.setState({\r\n          bills: initialRows\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\r\n    \r\n  }\r\n\r\n  render() {\r\n    const { bills } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <table className=\"table\">\r\n          {bills && bills.map((count) => (\r\n            <tr>\r\n                <td >\r\n                      <table className=\"table noBorder\" border=\"1\" >\r\n                          <tr>\r\n                             <th>Name</th>\r\n                             <td><b>{count.name ? count.name : count.id}</b></td>\r\n                           \r\n                             <th>Month</th>\r\n                             <td>{count.month}</td>\r\n                           \r\n                             <th>Last Bill</th>\r\n                             <td>{count.lastBillTotal}</td>\r\n\r\n                             <th>Payment</th>\r\n                             <td>{count.paid}</td>\r\n\r\n                             <th>Discount</th>\r\n                             <td>{count.discount}</td>\r\n                             \r\n                           </tr>\r\n                           <tr>\r\n                             <th >Quantity</th>\r\n                             <td >{count.qty + ' Ltr'}</td>\r\n\r\n                             <th >Rate</th>\r\n                             <td >{count.rate}</td>\r\n                           \r\n                             <th >Bill</th>\r\n                             <td >{count.bill}</td>\r\n\r\n                             <th>Dues</th>\r\n                             <td>{count.dues}</td>\r\n\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t               <th>Total Bill</th>\r\n                             <td>{count.totalBill} </td>\r\n                           </tr>\r\n                           <tr>\r\n                             <td style={{margin:0, padding:0}} colspan={10}>\r\n                               <table style={{margin:0, padding:0}}>\r\n                                 <tr>\r\n                                   <td >Day</td>\r\n                                   <td >1</td>\r\n                                   <td >2</td>\r\n                                   <td >3</td>\r\n                                   <td >4</td>\r\n                                   <td >5</td>\r\n                                   <td >6</td>\r\n                                   <td >7</td>\r\n                                   <td >8</td>\r\n                                   <td >9</td>\r\n                                   <td >10</td>\r\n                                   <td >11</td>\r\n                                   <td >12</td>\r\n                                   <td >13</td>\r\n                                   <td >14</td>\r\n                                   <td >15</td>\r\n                                   <td >16</td>\r\n                                   <td rowSpan={2}><h1>RAMJI DAIRY</h1></td>\t\t\t\t\t\t\t\t   \r\n                                 </tr>\r\n                                 <tr>\r\n                                          <td >Quantity</td>  \r\n                                          <td  >{count[\"01\"]}</td>\r\n                                          <td  >{count[\"02\"]}</td>\r\n                                          <td  >{count[\"03\"]}</td>\r\n                                          <td  >{count[\"04\"]}</td>\r\n                                          <td  >{count[\"05\"]}</td>\r\n                                          <td  >{count[\"06\"]}</td>\r\n                                          <td  >{count[\"07\"]}</td>\r\n                                          <td  >{count[\"08\"]}</td>\r\n                                          <td  >{count[\"09\"]}</td>\r\n                                          <td  >{count[\"10\"]}</td>\r\n                                          <td  >{count[\"11\"]}</td>\r\n                                          <td  >{count[\"12\"]}</td>\r\n                                          <td  >{count[\"13\"]}</td>\r\n                                          <td  >{count[\"14\"]}</td>\r\n                                          <td  >{count[\"15\"]}</td>\r\n                                          <td  >{count[\"16\"]}</td>\r\n                                 </tr>\r\n                                 \r\n                                 <tr>\r\n                                   <td >Day</td>\r\n                                   <td >17</td>\r\n                                   <td >18</td>\r\n                                   <td >19</td>\r\n                                     <td >20</td>\r\n                                   <td >21</td>\r\n                                   <td >22</td>\r\n                                   <td >23</td>\r\n                                   <td >24</td>\r\n                                   <td >25</td>\r\n                                   <td >26</td>\r\n                                   <td >27</td>\r\n                                   <td >28</td>\r\n                                   <td >29</td>\r\n                                   <td >30</td>\r\n                                   <td >31</td>\r\n                                   <td >{\" \"}</td>\r\n                                   <td rowSpan={2}><h3>9860910995</h3></td>\r\n                                 </tr>\r\n                                 <tr>\r\n                                          <td >quantity</td>\r\n                                          <td  >{count[\"17\"]}</td>\r\n                                          <td  >{count[\"18\"]}</td>\r\n                                          <td  >{count[\"19\"]}</td>\r\n                                          <td  >{count[\"20\"]}</td>\r\n                                          <td  >{count[\"21\"]}</td>\r\n                                          <td  >{count[\"22\"]}</td>\r\n                                          <td  >{count[\"23\"]}</td>\r\n                                          <td  >{count[\"24\"]}</td>\r\n                                          <td  >{count[\"25\"]}</td>\r\n                                          <td  >{count[\"26\"]}</td>\r\n                                          <td  >{count[\"27\"]}</td>\r\n                                          <td  >{count[\"28\"]}</td>\r\n                                          <td  >{count[\"29\"]}</td>\r\n                                          <td  >{count[\"30\"]}</td>\r\n                                          <td  >{count[\"31\"]}</td>\r\n                                 </tr>\r\n                                \r\n                               </table>\r\n                             </td>\r\n                           </tr>\r\n                        </table>\r\n              </td>\r\n            </tr>\r\n          ))}    \r\n           </table> \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport DeliveryService from \"../services/delivery.service\";\r\nimport BillService from \"../services/bill.service\";\r\nimport moment from \"moment\";\r\n\r\nexport default class CollectionBills extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      bills: null\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getBills(this.props.match.params.from, this.props.match.params.to, this.props.match.params.partyId);\r\n  }\r\n  getBills(from, to, partyId){\r\n      const paramsBill ={ from : from, to: to, active: true, type: \"expense\", category: \"collection\",  partyId : partyId };\r\n      console.log(paramsBill);\r\n      var initialRows = [];\r\n      BillService.getAll(paramsBill).then((response) => {\r\n        var bills = response.data;\r\n        console.log(bills);\r\n        bills && bills.map((bill,index) => {\r\n\t\t\tif(bill.quantity > 0 || bill.dues > 0){\r\n\t\t\t\tvar initialRow = {};  \r\n\t\t\t\tinitialRow[\"id\"]=bill.id;\r\n\t\t\t\tinitialRow[\"partyId\"]=bill.partyId;\r\n\t\t\t\tinitialRow[\"from\"]=bill.from;\r\n        initialRow[\"to\"]=bill.to;\r\n\t\t\t\tinitialRow[\"qty\"] = bill.quantity;\r\n\t\t\t\tinitialRow[\"rate\"]=bill.rate;\r\n\t\t\t\tinitialRow[\"bill\"]=bill.bill;\r\n\t\t\t\tinitialRow[\"dues\"]=bill.dues;\r\n\t\t\t\tinitialRow[\"totalBill\"]=initialRow[\"bill\"]+(initialRow[\"dues\"]? initialRow[\"dues\"] : 0);\r\n\t\t\t\tinitialRow[\"paid\"]=+bill.payment;\r\n        initialRow[\"discount\"]=+bill.discount;\r\n        initialRow[\"lastBillTotal\"]=+bill.lastBillTotal;\t\t\t\t\r\n\t\t\t\tinitialRow[\"name\"]=bill.party;\r\n\t\t\t\t\r\n\t\t\t\tinitialRows[index]={};\r\n\t\t\t\tinitialRows[index]=initialRow;\r\n\t\t\t}\r\n        });\r\n\t\t\r\n\t  const params ={ \"from\" : from,\"to\":to, type: \"expense\", category:\"collection\"};\r\n\t  DeliveryService.getAll(params).then((response) => {\r\n\t\tvar deliverys = response.data;\r\n\t\tdeliverys && deliverys.map((delivery) => {\r\n\t\t  for(var initialRow of initialRows){\r\n\t\t\tif(initialRow && initialRow.partyId == delivery.partyId){\r\n        if(initialRow[\"delivery\"]){\r\n          initialRow[\"delivery\"][initialRow[\"delivery\"].length]=delivery;\r\n        }else {\r\n          initialRow[\"delivery\"]=new Array();\r\n          initialRow[\"delivery\"][0]=delivery;\r\n        }\r\n\t\t\t  break;\r\n\t\t\t}\r\n\t\t  };\r\n\t\t});\r\n\t\tconsole.log(initialRows);\r\n\t\tthis.setState({\r\n\t\t  bills: initialRows\r\n\t\t});\r\n\t  })\r\n\t  .catch((e) => {\r\n\t\tconsole.log(e);\r\n\t  });\r\n\t  \r\n        this.setState({\r\n          bills: initialRows\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\r\n    \r\n  }\r\n\r\n  render() {\r\n    const { bills } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <table className=\"table\">\r\n          {bills && bills.map((count) => (\r\n            <tr>\r\n                <td >\r\n                      <table className=\"table noBorder\" border=\"1\" >\r\n                          <tr>\r\n                             <th>Name</th>\r\n                             <td><b>{count.name ? count.name : count.id}</b></td>\r\n                           \r\n                             <th>From</th>\r\n                             <td>{count.from}</td>\r\n\r\n                             <th>To</th>\r\n                             <td>{count.to}</td>\r\n                           \r\n                             <th>Last Bill</th>\r\n                             <td>{count.lastBillTotal}</td>\r\n\r\n                             <th>Payment</th>\r\n                             <td>{count.paid}</td>\r\n\r\n                             <th>Discount</th>\r\n                             <td>{count.discount}</td>\r\n                             \r\n                           </tr>\r\n                           <tr>\r\n                             <th >Quantity</th>\r\n                             <td colSpan={3}>{count.qty + ' Ltr'}</td>\r\n\r\n                             \r\n                           \r\n                             <th >Bill</th>\r\n                             <td >{count.bill}</td>\r\n\r\n                               <th>Dues</th>\r\n                             <td>{count.dues}</td>\r\n\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t               <th>Total Bill</th>\r\n                             <td colSpan={3}>{count.totalBill} </td>\r\n                           </tr>\r\n                           <tr>\r\n                             <td style={{margin:0, padding:0}} colspan={12}>\r\n                               <table style={{margin:0, padding:0}}>   \r\n                                   <tr>\r\n                                     <td>\r\n                                       <table>\r\n                                         <tr>\r\n                                            <th>Date</th>\r\n                                            <th>SNF</th>\r\n                                            <th>Water</th>\r\n                                            <th>Rate</th>                                      \r\n                                            <th>Quantity</th>\r\n                                            <th>Amount</th>                                    \r\n                                          </tr>                               \r\n                                          {count.delivery && count.delivery.map((delivery, index) => (\r\n                                            (index%2==0 ? \r\n                                          <tr>\r\n                                            <td><b>{delivery.date}</b></td>\r\n                                            <td>{delivery.snf}</td>\r\n                                            <td>{delivery.water}</td>\r\n                                            <td>{delivery.rate}</td>                                      \r\n                                            <td>{delivery.quantity}</td>\r\n                                            <td>{delivery.amount}</td>\r\n                                          </tr>\r\n                                          :\"\")\r\n                                          ))}\r\n                                    </table>\r\n                                    </td>\r\n                                    <td>\r\n                                       <table>\r\n                                         <tr>\r\n                                            <th>Date</th>\r\n                                            <th>SNF</th>\r\n                                            <th>Water</th>\r\n                                            <th>Rate</th>                                      \r\n                                            <th>Quantity</th>\r\n                                            <th>Amount</th>                                    \r\n                                          </tr>                               \r\n                                          {count.delivery && count.delivery.map((delivery, index) => (\r\n                                           (index%2==1 ? \r\n                                              <tr>\r\n                                            <td><b>{delivery.date}</b></td>\r\n                                            <td>{delivery.snf}</td>\r\n                                            <td>{delivery.water}</td>\r\n                                            <td>{delivery.rate}</td>                                      \r\n                                            <td>{delivery.quantity}</td>\r\n                                            <td>{delivery.amount}</td>\r\n                                            </tr>\r\n                                            :\"\")\r\n                                          ))}\r\n                                    </table>\r\n                                    </td>\r\n                                    </tr>\r\n                               </table>\r\n                             </td>\r\n                           </tr>\r\n                        </table>\r\n              </td>\r\n            </tr>\r\n          ))}    \r\n           </table> \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport DeliveryService from \"../services/delivery.service\";\r\nimport BillService from \"../services/bill.service\";\r\nimport PaymentService from \"../services/payment.service\";\r\nimport moment from \"moment\";\r\n\r\nexport default class ExpenseBills extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      bills: null\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getBills(this.props.match.params.month);\r\n  }\r\n\r\n  getBills(month){\r\n      const paramsBill ={ month : month, active: true, type: \"expense\"};\r\n      var initialRows = [];\r\n      BillService.getAll(paramsBill).then((response) => {\r\n        var bills = response.data;\r\n        bills && bills.map((bill,index) => {\r\n\t\t\tif(bill.quantity > 0 || bill.dues > 0 || bill.payment > 0){\r\n\t\t\t\tvar initialRow = {};\r\n\t\t\t\tinitialRow[\"id\"]=bill.id;\r\n\t\t\t\tinitialRow[\"partyId\"]=bill.partyId;\r\n\t\t\t\tinitialRow[\"month\"]=month;\r\n\t\t\t\tinitialRow[\"qty\"] = bill.quantity;\r\n\t\t\t\tinitialRow[\"rate\"]=bill.rate;\r\n\t\t\t\tinitialRow[\"bill\"]=bill.bill;\r\n\t\t\t\tinitialRow[\"dues\"]=bill.dues;\r\n\t\t\t\tinitialRow[\"totalBill\"]=initialRow[\"bill\"]+(initialRow[\"dues\"]? initialRow[\"dues\"] : 0);\r\n\t\t\t\tinitialRow[\"paid\"]=+bill.payment\r\n\t\t\t\tif(bill.customer){\r\n\t\t\t\t\tinitialRow[\"name\"]=bill.customer.name;\r\n\t\t\t\t}\r\n\t\t\t\tinitialRows[index]={};\r\n\t\t\t\tinitialRows[index]=initialRow;\r\n\t\t\t\t\r\n\t\t\t\t//fetch all bills for the vendor/staff\r\n\t\t\t\t const params ={ \"month\" : month, type: \"expense\", partyId: bill.partyId};\r\n\t\t\t\t  DeliveryService.getAll(params).then((response) => {\r\n\t\t\t\t\tvar deliverys = response.data;\r\n\t\t\t\t\tinitialRows[index][\"allBills\"] = deliverys;\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t  bills: initialRows\r\n\t\t\t\t\t});\r\n\t\t\t\t  })\r\n\t\t\t\t  .catch((e) => {\r\n\t\t\t\t\tconsole.log(e);\r\n\t\t\t\t  });\r\n\t\t\t\t  PaymentService.getAll(params).then((response) => {\r\n\t\t\t\t\tvar deliverys = response.data;\r\n\t\t\t\t\tinitialRows[index][\"allPayments\"] = deliverys;\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t  bills: initialRows\r\n\t\t\t\t\t});\r\n\t\t\t\t  })\r\n\t\t\t\t  .catch((e) => {\r\n\t\t\t\t\tconsole.log(e);\r\n\t\t\t\t  });\r\n\t  \r\n\t\t\t}\r\n        });\r\n\t\tconsole.log(initialRows);\r\n        this.setState({\r\n          bills: initialRows\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });    \r\n  }\r\n\r\n  render() {\r\n    const { bills } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <table className=\"table\">\r\n          {bills && bills.map((count) => (\r\n            <tr>\r\n                <td >\r\n                      <table className=\"table noBorder\" border=\"1\" >\r\n                          <tr>\r\n                             <th>Name</th>\r\n                             <td colspan=\"3\"><b>{count.name ? count.name : count.id}</b></td>\r\n                           \r\n                             <th>Month</th>\r\n                             <td>{count.month}</td>\r\n                           \r\n                             <th >Quantity</th>\r\n                             <td >{count.qty}</td>\r\n                           </tr>\r\n                           <tr>\r\n                             <th >Bill</th>\r\n                             <td >{count.bill}</td>\r\n\r\n                             <th>Prev Dues</th>\r\n                             <td>{count.dues}</td>\r\n\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t <th>Total Bill</th>\r\n                             <td>{count.totalBill} </td>\r\n\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t <th>Payment</th>\r\n                             <td>{count.paid} </td>\r\n                           </tr>\r\n                           <tr>\r\n                             <td  colspan={4}>\r\n                               <table width=\"100%\">\r\n\t\t\t\t\t\t\t\t{count.allBills && count.allBills.map((allBill) => (\r\n                                 <tr>\r\n                                   <td >{allBill.date}-{allBill.month}</td>\r\n                                   <td >{allBill.amount}</td>\r\n                                 </tr>\r\n\t\t\t\t\t\t\t\t ))}\r\n                               </table>\r\n                             </td>\r\n\t\t\t\t\t\t\t <td colspan={4}>\r\n                               <table width=\"100%\">\r\n\t\t\t\t\t\t\t\t {count.allPayments && count.allPayments.map((allPayment) => (\r\n                                  <tr>\r\n                                   <td>{allPayment.date}-{allPayment.month}</td>\r\n                                   <td>{allPayment.payment}</td>\r\n                                 </tr>\t\r\n\t\t\t\t\t\t\t\t))}\t\t\t\t\t\t\t\t \r\n                               </table>\r\n                             </td>\r\n                           </tr>\r\n                        </table>\r\n              </td>\r\n            </tr>\r\n          ))}    \r\n           </table> \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, useState , useMemo, useEffect } from \"react\";\r\nimport RouteService from \"../services/route.service\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DataGrid, {TextEditor, SelectCellFormatter} from 'react-data-grid';\r\nimport NumericEditor, { textEditorClassname } from \"../components/editor/numericeditor.component\";\r\nimport DeliveryService from \"../services/delivery.service\";\r\nimport PaymentService from \"../services/payment.service\";\r\nimport moment from 'moment';\r\nimport Grid from '@mui/material/Grid';\r\nimport BillService from \"../services/bill.service\";\r\n\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nimport { CSVLink } from 'react-csv';\r\n\r\nexport function stopPropagation(event) {\r\n  event.stopPropagation();\r\n}\r\n\r\nfunction getComparator(sortColumn) {\r\n  switch (sortColumn) {\r\n    case 'name':\r\n\tcase 'date':\r\n\tcase 'month':\r\n\tcase 'category' :\r\n      return (a, b) => {\r\n        return a[sortColumn].localeCompare(b[sortColumn]);\r\n      };\r\n    default:\r\n      return (a, b) => {\r\n        return a[sortColumn] - b[sortColumn];\r\n      };\r\n  }\r\n}\r\n\r\nconst columns = [\r\n  { key: 'id', name: 'ID' , width: 40 , resizable: true },\r\n  { key: 'name', name: 'Name' , width:50, resizable: true },\r\n  { key: 'date', name: 'Date' , editor: TextEditor ,width: 20 , resizable: true },\r\n  { key: 'month', name: 'Month' , editor: TextEditor , width: 40 , resizable: true },\r\n  { key: 'payment', name: 'Payment Amount' , width: 140  ,editor: NumericEditor , resizable: true },\r\n  { key: 'amount', name: 'Bill Amount' , width: 120  , editor: NumericEditor , resizable: true },\r\n  { key: 'quantity', name: 'Quantity' , width: 80  , editor: NumericEditor , resizable: true },\r\n  { key: 'category', name: 'Category', editor:  TextEditor , resizable: true}\r\n];\r\n\r\nconst ExpenseList = props => {  \r\n\r\n\t const initialCalendar = {\r\n\t\tcurrentDate: moment()\r\n\t  };\r\n    const [rows, setRows] = useState([]);\r\n\tconst [sortColumns, setSortColumns] = useState([]);  \r\n\tconst [calendar, setCalendar] = useState(initialCalendar);\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst [confirm, setConfirm] = useState(false);\r\n\tconst [message, setMessage] = useState();\r\n  \r\n    useEffect(() => {\r\n\t  var calendar={currentDate: moment(props.match.params.month,'MMM-YYYY')};\r\n      setCalendar(calendar);\r\n      var initialRows = null;\r\n      const paramCustomer = {type: \"expense\", month: props.match.params.month,\r\n\t\t\t\t\t\t\t\t\t\tsearchFlag: \"not-collection\"};\r\n      DeliveryService.getAll(paramCustomer).then((response) => {\r\n        var expenses = response.data;\r\n\t\tconsole.log(expenses);\r\n        initialRows = [];\r\n        expenses && expenses.map((customer, index) => {\r\n          initialRows[index]={};\r\n          initialRows[index][\"id\"]=customer.id;\r\n          initialRows[index][\"partyId\"]=customer.partyId;\r\n          initialRows[index][\"date\"]=customer.date;\r\n          initialRows[index][\"month\"]=customer.month;\r\n          initialRows[index][\"quantity\"]=customer.quantity;\r\n          initialRows[index][\"amount\"]=customer.amount;\r\n\t\t  initialRows[index][\"type\"]=customer.type;\r\n\t\t  initialRows[index][\"category\"]=customer.category;\r\n          \r\n          initialRows[index][\"name\"]=customer.party;\r\n          \r\n        });\r\n\t\tconsole.log(initialRows);\r\n\t\tgetPayment(props.match.params.month, initialRows);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });    \r\n    }, [props.match.params.month]);\r\n\t\r\n\tfunction getPayment(month, initialRows){\r\n      var params ={ \"month\": month, \"active\": true, type: \"expense\"};\r\n      PaymentService.getAll(params).then(response => {\r\n        var bills = response.data;\r\n        bills &&  bills.map((customer) => {\r\n\t\t\t  var index = initialRows.length;\r\n\t\t\t  initialRows[initialRows.length]={};\r\n\t\t\t  initialRows[index][\"id\"]=customer.id;\r\n\t\t\t  initialRows[index][\"partyId\"]=customer.partyId;\r\n\t\t\t  initialRows[index][\"date\"]=customer.date;\r\n\t\t\t  initialRows[index][\"month\"]=customer.month;\r\n\t\t\t  initialRows[index][\"payment\"]=customer.payment;\r\n\t\t\t  initialRows[index][\"type\"]=customer.type;\r\n\t\t\t  initialRows[index][\"category\"]=customer.category;\r\n\t\t\t  \r\n\t\t\t  initialRows[index][\"name\"]=customer.party;\r\n\t\t\t  \r\n          });\r\n\t\t  setRows(initialRows);\r\n\t\t  console.log(initialRows);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n    }\r\n\r\n    function rowChange(row, col) {\r\n      constructDeliveryUpdateData(row,col);\r\n      setRows (row);\r\n    }\r\n\r\n    function constructDeliveryUpdateData(row, col){\r\n      console.log(row[col.indexes].id+ \" - \"+row[col.indexes][col.column.key]);\r\n      saveDelivery(row[col.indexes]);\r\n    }\r\n\r\n    function saveDelivery (row) {\r\n      var data = {\r\n        id: row.id,\r\n        partyId: row.partyId,\r\n        month: row.month,\r\n        date: row.date,\r\n        quantity: row.quantity,\r\n        amount: row.amount,\r\n\t\tpayment: row.payment,\r\n\t\ttype: row.type,\r\n\t\tcotegory: row.category,\r\n\t\tactive: true\r\n      };\r\n\t  \r\n\tif(row.amount > 0){\r\n\t\tDeliveryService.update(row.id, data)\r\n\t\t  .then(response => {\r\n\t\t\tconsole.log(response.data);\r\n\t\t  })\r\n\t\t  .catch(e => {\r\n\t\t\tconsole.log(e);\r\n\t\t  });\r\n\t}\r\n\tif(row.payment > 0){\r\n\t\tPaymentService.update(row.id, data)\r\n\t\t  .then(response => {\r\n\t\t\tconsole.log(response.data);\r\n\t\t  })\r\n\t\t  .catch(e => {\r\n\t\t\tconsole.log(e);\r\n\t\t  });\r\n\t}\r\n      \r\n         \r\n    }\r\n\r\n\t const sortedRows = useMemo( () => {\r\n\t\tif (sortColumns.length === 0) return rows;\r\n\t\treturn [...rows].sort((a, b) => {\r\n\t\t  for (const sort of sortColumns) {\r\n\t\t\tconst comparator = getComparator(sort.columnKey);\r\n\t\t\tconst compResult = comparator(a, b);\r\n\t\t\tif (compResult !== 0) {\r\n\t\t\t  return sort.direction === 'ASC' ? compResult : -compResult;\r\n\t\t\t}\r\n\t\t  }\r\n\t\t  return 0;\r\n\t\t});\r\n\t  }, [rows, sortColumns]);\r\n\t  \r\n\tfunction generateExpenseBill(month){\r\n\t\tBillService.validateBillGeneration(month,\"expense\").then((response) => {\r\n\t\t\tconsole.log(response.data);\r\n\t\t\tvar bill = response.data;\r\n\t\t\t//bill object has bill, means the bill was generated\r\n\t\t\tif(bill.rate){\r\n\t\t\t\tsetConfirm(true);\r\n\t\t\t\tsetMessage(\"Bill already generated for the month \"+month+\". Do you want to continue? Please confirm to proceed.\");\r\n\t\t\t\thandleClickOpen();\r\n\t\t\t}else{\r\n\t\t\t\tgenerateBillAfterCheck(month);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\tconsole.log(e);\r\n\t\t\t//no bill exist for the month, so generate bill without prompting user\r\n\t\t\tif(e.response.status == 404){\r\n\t\t\t\tgenerateBillAfterCheck(month);\r\n\t\t\t}\r\n\t\t});\r\n    }\r\n\t\r\n\tfunction generateBillAfterCheck(month){\r\n\t\tconst paramsBill ={ \"month\" : month, \"type\": \"expense\"};\r\n\t\tBillService.generateBills(paramsBill).then((response) => {\r\n        var deliverys = response.data;\r\n\t\tsetMessage(\"Bill generated for the month \"+month+\".\");\r\n\t\thandleClickOpen();\r\n\t\tconsole.log(deliverys);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\t}\r\n\t\r\n\tfunction handleClickOpen () {\r\n      setOpen(true);\r\n    };\r\n  \r\n    function handleClose () {\r\n\t\tsetConfirm(false);\r\n\t\tsetOpen(false);\r\n    };\r\n\t\r\n\tfunction handleConfirm () {\r\n\t\tsetConfirm(false);\r\n\t\tgenerateBillAfterCheck(calendar.currentDate.format(\"MMM-YYYY\"));\r\n\t\tsetOpen(false);\r\n\t}\r\n  \r\n    return (\r\n      <div >\t\r\n\t\t<div>\r\n\t\t\t<Grid container spacing={{ xs: 1}} >\r\n\t\t\t\t<Grid item xs={6} sm={3}> \r\n\t\t\t\t\t<Link to={\"/gui/addExpense\"} className=\"badge\">\r\n\t\t\t\t\t  Add Expense\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t <Grid item xs={6} sm={3}> \r\n\t\t\t\t\t  <Link to=\"#\"\r\n\t\t\t\t\t\tonClick={ () => generateExpenseBill(calendar.currentDate.format(\"MMM-YYYY\"))}\r\n\t\t\t\t\t\tclassName=\"badge\">\r\n\t\t\t\t\t\t Generate Expense Bill Month - {calendar.currentDate.format(\"MMM-YYYY\")}\r\n\t\t\t\t\t  </Link>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t  <Grid item xs={6} sm={3}> \r\n\t\t\t\t\t  <Link\r\n\t\t\t\t\t\tto={\"/gui/expense/\"+calendar.currentDate.clone().subtract(1, 'months').format('MMM-YYYY')}\r\n\t\t\t\t\t\tclassName=\"badge badge-warning\">\r\n\t\t\t\t\t\tPrev\r\n\t\t\t\t\t  </Link>\r\n\t\t\t\t\t  {calendar.currentDate.format(\"DD-MMM-YYYY\")}\r\n\t\t\t\t\t  <Link\r\n\t\t\t\t\t\tto={\"/gui/expense/\"+calendar.currentDate.clone().add(1, 'months').format('MMM-YYYY')}\r\n\t\t\t\t\t\tclassName=\"badge badge-warning\">\r\n\t\t\t\t\t\tNext\r\n\t\t\t\t\t  </Link>\r\n\t\t\t\t  </Grid>\r\n\t\t\t\t<Grid item xs={3} sm={2}>\r\n\t\t\t\t\t\t  <Link\r\n\t\t\t\t\t\t\tto={\"/gui/expenseBills/\"+calendar.currentDate.format('MMM-YYYY')}\r\n\t\t\t\t\t\t\tclassName=\"badge\">\r\n\t\t\t\t\t\t\t Print - {calendar.currentDate.format(\"MMM-YYYY\")} \r\n\t\t\t\t\t\t  </Link>\r\n\t\t\t\t</Grid> \r\n\t\t\t\t<Grid item xs={3} sm={1}>\r\n\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t<Button variant=\"warning\" className=\"badge\">\r\n\t\t\t\t\t\t\t\t<CSVLink data={sortedRows} filename={'expense.txt'}>Export</CSVLink>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Grid> \t\t  \r\n          </Grid> \r\n\t\t  </div>\r\n        <div>\r\n          <DataGrid columns={columns} onRowsChange={rowChange} \r\n\t\t  defaultColumnOptions={{\r\n            sortable: true,\r\n            resizable: true\r\n          }}\r\n          rows={sortedRows}\r\n          sortColumns={sortColumns}\r\n          onSortColumnsChange={setSortColumns}/>  \r\n        </div>\r\n\t\t\r\n\t\t<Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\">\r\n          <DialogTitle id=\"alert-dialog-title\">\r\n            {\"Bills\"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n\t\t\t{message}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n\t\t  {confirm ? (\r\n\t\t\t<Button onClick={handleConfirm}>Confirm</Button>\r\n\t\t  ) : \"\"}\r\n            <Button onClick={handleClose}>Close</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default ExpenseList;","import React, { Component } from \"react\";\r\nimport CustomerService from \"../services/customer.service\";\r\nimport DeliveryService from \"../services/delivery.service\";\r\nimport PaymentService from \"../services/payment.service\";\r\nimport moment from \"moment\";\r\n\r\nexport default class AddExpense extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\tthis.saveExpense = this.saveExpense.bind(this);\r\n\tthis.onChangeQuantity = this.onChangeQuantity.bind(this);\r\n\tthis.onChangeAmount = this.onChangeAmount.bind(this);\r\n\tthis.onChangePayment = this.onChangePayment.bind(this);\r\n\tthis.newExpense = this.newExpense.bind(this);\r\n\tthis.onChangeCategory=this.onChangeCategory.bind(this);\r\n\t\r\n\tthis.onDate = this.onDate.bind(this);\r\n\t\r\n    this.myRef = React.createRef();\r\n\r\n    this.state = {\r\n      id: null,\r\n      partyId: null,\r\n      quantity: null,\r\n      date:null,\r\n      month: null,\r\n\t  type: \"expense\",\r\n    category:null,\r\n\t  amount: null,\r\n\t  payment: null,\r\n\t  submitted: false,\r\n\t  routes:[],\r\n\t  inputDate: moment().format(\"DD-MMM-YYYY\")\r\n    };\r\n  }\r\n  \r\n  onChangeQuantity(e){\r\n\t  this.setState({\r\n\t\t  quantity: e.target.value\r\n\t\t});\r\n  }\r\n  \r\n  onChangePayment(e){\r\n\t   this.setState({\r\n\t\t  payment: e.target.value\r\n\t\t});\r\n  }\r\n  \r\n  onChangeAmount(e){\r\n\t   this.setState({\r\n\t\t  amount: e.target.value\r\n\t\t});\r\n  }\r\n  \r\n  onDate(e){\r\n\t   this.setState({\r\n\t\t  inputDate: e.target.value\r\n\t\t});\r\n  }\r\n  \r\n  onChangeCategory(e){\r\n    this.setState({\r\n     category: e.target.value\r\n   });\r\n }\r\n  \r\n  \r\n  saveExpense(e) {\r\n\te.target.disabled=true;\r\n\tvar data = {\r\n\t\t  partyId: this.myRef.current.value,\r\n\t\t  quantity: this.state.quantity,\r\n\t\t  date:moment(this.state.inputDate, \"DD-MMM-YYYY\").format(\"DD\"),\r\n\t\t  month: moment(this.state.inputDate, \"DD-MMM-YYYY\").format(\"MMM-YYYY\"),\r\n\t\t  type: \"expense\",\r\n      category: this.state.category,\r\n\t\t  amount: this.state.amount,\r\n\t\t  payment: this.state.payment,\r\n\t\t  active: true\r\n\t\t};\r\n\t\t\r\n\tif(this.state.amount > 0){\r\n\t\tDeliveryService.create(data)\r\n\t\t  .then(response => {\r\n\t\t\tthis.setState({\r\n\t\t\t  id: response.data.id,\r\n\t\t\t  amount: response.data.amount,\r\n\t\t\t  submitted: true\r\n\t\t\t});\r\n\t\t\tconsole.log(response.data);\r\n\t\t  })\r\n\t\t  .catch(e => {\r\n\t\t\tconsole.log(e);\r\n\t\t  });\r\n\t}\r\n\tif(this.state.payment > 0){\r\n\t\tPaymentService.create(data)\r\n\t\t  .then(response => {\r\n\t\t\tthis.setState({\r\n\t\t\t  id: response.data.id,\r\n\t\t\t  payment: response.data.payment,\r\n\t\t\t  submitted: true\r\n\t\t\t});\r\n\t\t\tconsole.log(response.data);\r\n\t\t\te.target.disabled=false;\r\n\t\t  })\r\n\t\t  .catch(e => {\r\n\t\t\tconsole.log(e);\r\n\t\t  });\r\n\t}\r\n  }\r\n\r\n  newExpense() {\r\n    this.setState({\r\n      id: null,\r\n      partyId: null,\r\n      quantity: null,\r\n      date:null,\r\n      month: null,\r\n\t  type: \"expense\",\r\n    category:null,\r\n\t  amount: null,\r\n\t  payment: null,\r\n\t  submitted: false,\r\n\t  inputDate: moment().format(\"DD-MMM-YYYY\")\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getRoute();\r\n  }\r\n\r\n  getRoute(){\r\n\tvar paramCustomer = {searchFlag: \"non-customer\"};\r\n    CustomerService.getAll(paramCustomer)\r\n      .then(response => {\r\n\t\tthis.setState({\r\n\t\t  routes: response.data\r\n\t\t});\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { routes } = this.state;\r\n    return (\r\n      <div className=\"submit-form\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>You submitted successfully!</h4>\r\n            <button className=\"btn btn-success\" onClick={this.newExpense}>\r\n              Add\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"name\">Vendor/Staff Name</label>\r\n                  <div className=\"select-container\">\r\n                    <select className=\"form-control\" value={this.state.partyId} \r\n\t\t\t\t\t\tonChange={this.onChangeRoute} ref={this.myRef} name=\"partyId\">\r\n\t\t\t\t\t\t  {routes && routes.map((option) => (\r\n\t\t\t\t\t\t\t<option value={option.id}>{option.name}</option>\r\n\t\t\t\t\t\t  ))}\r\n                    </select>\r\n                  </div>\r\n            </div>\r\n\t\t\t<div className=\"form-group\">\r\n              <label htmlFor=\"quantity\">Quantity</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                id=\"quantity\"\r\n                required\r\n                value={this.state.quantity}\r\n                onChange={this.onChangeQuantity}\r\n                name=\"quantity\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"amount\">Bill Amount</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                id=\"amount\"\r\n                required\r\n                value={this.state.amount}\r\n                onChange={this.onChangeAmount}\r\n                name=\"amount\"\r\n              />\r\n            </div>\r\n\t\t\t<div className=\"form-group\">\r\n              <label htmlFor=\"payment\">Payment Amount</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                id=\"payment\"\r\n                required\r\n                value={this.state.payment}\r\n                onChange={this.onChangePayment}\r\n                name=\"payment\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"category\">Category </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"category\"\r\n                required\r\n                value={this.state.category}\r\n                onChange={this.onChangeCategory}\r\n                name=\"category\"\r\n              />\r\n            </div>\r\n\t\t\t<div className=\"form-group\">\r\n                      <label htmlFor=\"inputDate\">Date</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"inputDate\"\r\n                        required\r\n\t\t\t\t\t\treadOnly =\"readOnly\"\r\n                        value={this.state.inputDate}\r\n                        onChange={this.onDate}\r\n                        name=\"inputDate\"\r\n                      />\r\n            </div>\r\n            <button onClick={this.saveExpense} className=\"btn btn-success\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import http from \"../http-common\";\r\n\r\nclass AuthService {\r\n   getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem('user'));\r\n  }\r\n  setCurrentUser(userName){\r\n\t  if(userName == 'Alok'){\r\n\t\t  var user = {\r\n\t\t\t  id: 'alok',\r\n\t\t\t  roles: ['ROLE_ADMIN','ROLE_MODERATOR']\r\n\t\t  };\r\n\t\tlocalStorage.setItem(\"user\", JSON.stringify(user));\r\n\t  }\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import React, { Component } from \"react\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    AuthService.setCurrentUser(\"Alok\");\r\n\tconsole.log(AuthService.getCurrentUser());\r\n\tthis.props.history.push(\"/gui/routes\");\r\n\twindow.location.reload();\r\n  }\r\n\r\n  render() {\r\n\t  return \"\";\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport moment from 'moment';\r\n\r\nimport AddCustomer from \"./components/add-customer.component\";\r\nimport AddProduct from \"./components/add-product.component\";\r\nimport ProductList from \"./components/product-list.component\";\r\nimport SellerProduct from \"./components/seller-product.component\";\r\nimport SellerProductList from \"./components/seller-product-list.component\";\r\nimport ProjectData from \"./components/daily-delivery.component\";\r\nimport AddRoute from \"./components/add-route.component\";\r\nimport RoutesList from \"./components/routes-list.component\";\r\nimport CustomerCalendar from \"./components/customer-calendar.component\";\r\nimport CustomerDaily from \"./components/customer-today.component\";\r\nimport CollectionBillsList from \"./components/collection-bills-list.component\";\r\nimport EmployeeDaily from \"./components/customer-today.component\";\r\nimport CollectionDaily from \"./components/collection-daily.component\";\r\nimport CustomerList from \"./components/customer-list.component\";\r\nimport Bills from \"./components/bills.component\";\r\nimport CollectionBills from \"./components/collection-bills.component\";\r\nimport ExpenseBills from \"./components/expense-bills.component\";\r\nimport ExpenseList from \"./components/expense-list.component\";\r\nimport AddExpense from \"./components/add-expense.component\";\r\nimport Login from \"./components/login.component\";\r\nimport AuthService from \"./services/auth.service\";\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\t  showModeratorBoard: true,\r\n      showAdminBoard: false,\r\n      currentUser: undefined\r\n    };\r\n\tconsole.log(props);\r\n\t//AuthService.setCurrentUser(props);\r\n  }\r\n  componentDidMount() {\r\n    const user = AuthService.getCurrentUser();\r\n    if (user) {\r\n      this.setState({\r\n        currentUser: user,\r\n        showModeratorBoard: user.roles.includes(\"ROLE_MODERATOR\"),\r\n        showAdminBoard: user.roles.includes(\"ROLE_ADMIN\"),\r\n      });\r\n    }\r\n  }\r\n\t\r\n  render() {\r\n\t  const { currentUser, showModeratorBoard, showAdminBoard } = this.state;\r\n    return (\r\n      <Router>\r\n        <div >\r\n          <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n            <div className=\"navbar-nav mr-auto\">\r\n\t\t\t{showModeratorBoard && (\r\n\t\t\t        <li className=\"nav-item\">\r\n                <Link to={\"/gui/routes\"} className=\"nav-link\">\r\n                  Routes\r\n                </Link>\r\n              </li>\r\n\t\t\t)}\r\n      {showModeratorBoard && (\r\n\t\t\t      <li className=\"nav-item\">\r\n              <Link to={\"/gui/customerDaily/\"+moment().format(\"DD-MMM-YYYY\")} className=\"nav-link\">\r\n                Today\r\n              </Link>\r\n            </li>\r\n\t\t\t)}\r\n      \r\n\t\t\t{showAdminBoard && (\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/gui/customerCalendar/\"+moment().format(\"MMM-YYYY\")} className=\"nav-link\">\r\n                  Calendar \r\n                </Link>\r\n              </li>\r\n\t\t\t)}\r\n\t\t\r\n\t\t\t{showModeratorBoard && (\r\n\t\t\t  <li className=\"nav-item\">\r\n                <Link to={\"/gui/expense/\"+moment().format(\"MMM-YYYY\")} className=\"nav-link\">\r\n                  Expense\r\n                </Link>\r\n              </li>\r\n\t\t\t)}\r\n      {showAdminBoard && (\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/gui/customers\"} className=\"nav-link\">\r\n                  Party\r\n                </Link>\r\n              </li>\r\n\t\t\t)}\r\n      \r\n      {showAdminBoard && (\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/gui/productlist\"} className=\"nav-link\">\r\n                  ProductList\r\n                </Link>\r\n              </li>\r\n\t\t\t)}\r\n       {showAdminBoard && (\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/gui/sellerProductlist\"} className=\"nav-link\">\r\n                  SellerProductList\r\n                </Link>\r\n              </li>\r\n\t\t\t)}\r\n\r\n      {showModeratorBoard && (\r\n\t\t\t  <li className=\"nav-item\">\r\n                <Link to={\"/gui/collectionDaily/\"+moment().format(\"DD-MMM-YYYY\")} className=\"nav-link\">\r\n                  Collection\r\n                </Link>\r\n              </li>\r\n\t\t\t)}\r\n        {showModeratorBoard && (\r\n\t\t\t  <li className=\"nav-item\">\r\n                <Link to={\"/gui/CollectionBillsList/\"+moment().format(\"DD-MMM-YYYY\")} className=\"nav-link\">\r\n                  CollectionBillsList\r\n                </Link>\r\n              </li>\r\n\t\t\t)}\r\n            </div>\r\n          </nav>\r\n\r\n          <div className=\"container mt-3\">\r\n            <Switch>\r\n              <Route exact path={[\"/\", \"/gui/routes\"]} component={RoutesList} />\r\n             // <Route exact path={[\"/\", \"/gui/routes/:date\"]} component={RoutesList} />\r\n              <Route exact path=\"/gui/customers\" component={CustomerList} />\r\n              <Route exact path=\"/gui/addCustomer\" component={AddCustomer} />\r\n              <Route exact path=\"/gui/productlist\" component={ProductList} />\r\n              <Route exact path=\"/gui/addProduct\" component={AddProduct} />\r\n              <Route exact path=\"/gui/sellerProduct\" component={SellerProduct} />\r\n              <Route exact path=\"/gui/sellerProductlist\" component={SellerProductList} />\r\n              <Route exact path=\"/gui/dailyDelivery/:id\" component={ProjectData} />\r\n\t\t\t        <Route exact path=\"/gui/dailyDelivery/:id/:pending\" component={ProjectData} />\r\n              <Route exact path=\"/gui/route\" component={AddRoute} />\r\n              <Route exact path=\"/gui/routes\" component={RoutesList} />\r\n              <Route exact path=\"/gui/customerCalendar/:date\" component={CustomerCalendar} />\r\n              <Route exact path=\"/gui/customerDaily/:date\" component={CustomerDaily} />\r\n              <Route exact path=\"/gui/bills/:month\" component={Bills} />\r\n              <Route exact path=\"/gui/collectionbills/:from/:to\" component={CollectionBills} />\r\n              <Route exact path=\"/gui/collectionbills/:from/:to/:partyId\" component={CollectionBills} />\r\n              <Route exact path=\"/gui/expenseBills/:month\" component={ExpenseBills} />\r\n              <Route exact path=\"/gui/bills/:month/:partyId\" component={Bills} />\r\n\t\t\t        <Route exact path=\"/gui/expense/:month\" component={ExpenseList} />\r\n\t\t\t        <Route exact path=\"/gui/addExpense\" component={AddExpense} />\r\n\t\t\t        <Route exact path=\"/gui/login\" component={Login} />\r\n              <Route exact path=\"/gui/collectionDaily/:date\" component={CollectionDaily} />\r\n              <Route exact path=\"/gui/routes/:date\" component={RoutesList} />\r\n              <Route exact path=\"/gui/CollectionBillsList/:date\" component={CollectionBillsList} />\r\n              <Route exact path=\"/gui/employeeDaily/:date\" component={EmployeeDaily} />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { StyledEngineProvider } from '@mui/material/styles';\r\nReactDOM.render(\r\n  <StyledEngineProvider injectFirst>\r\n    <App />\r\n  </StyledEngineProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}