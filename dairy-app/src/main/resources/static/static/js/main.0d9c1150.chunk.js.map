{"version":3,"sources":["http-common.js","services/customer.service.js","services/route.service.js","components/add-customer.component.js","services/product.service.js","components/add-product.component.js","services/delivery.service.js","services/route.stock.service.js","components/editor/numericeditor.component.js","components/routes-list.component.js","components/editor/dropdown.component.js","components/hooks/route.hook.js","components/product-list.component.js","services/seller.product.service.js","components/seller-product.component.js","services/bill.service.js","services/payment.service.js","components/modal.component.js","components/daily-delivery.component.js","components/add-route.component.js","services/rate.service.js","components/customer-calendar.component.js","components/customer-today.component.js","components/collection-bills-list.component.js","components/collection-daily.component.js","components/customer-list.component.js","components/bills.component.js","components/collection-bills.component.js","components/expense-bills.component.js","components/expense-list.component.js","components/add-expense.component.js","services/auth.service.js","components/login.component.js","App.js","serviceWorker.js","index.js"],"names":["axios","create","baseURL","headers","params","http","get","id","data","post","put","mobNo","delete","AddCustomer","props","onChangeName","bind","onChangeAddress","onChangeMobNo","onChangeStartDate","onChangeActive","onChangeRoute","onChangeType","onChangeDefaultQuantity","onChangeRouteSeq","saveTutorial","newTutorial","getRoute","myRef","React","createRef","myRefType","today","moment","state","name","address","type","active","startDate","format","routeId","defaultQuantity","routes","routeSeq","submitted","e","this","setState","target","value","length","checked","disabled","current","console","log","CustomerService","then","response","Response","catch","RouteService","getAll","className","onClick","htmlFor","required","onChange","ref","map","option","defaultChecked","Component","AddProduct","onChangeminRate","onChangemaxRate","onChangephoto","onChangedescription","onChangeunitOfQuantity","minRate","maxRate","photo","description","unitOfQuantity","ProductService","products","autoFocusAndSelect","input","select","focus","NumericEditor","row","column","onRowChange","onClose","inputmode","key","event","onBlur","columns","width","editor","editorOptions","editOnClick","resizable","formatter","disable","to","quantity","pending","TextEditor","RoutesList","rowChange","saveRoute","routeStockService","customerService","deliveryService","rows","retrieveRoutes","currentDate","initialRows","Array","route","index","param","date","month","RouteStockService","stocks","stock","initialRow","customers","customerCount","customerQuantity","customer","DeliveryService","deliverys","totalDelivered","countOfCustomerDelivered","delivery","partyId","i","col","indexes","update","routeStockId","Grid","container","spacing","xs","item","sm","onRowsChange","DropDownEditor","useState","selectData","setSelectData","useEffect","useRoutes","textEditorClassname","autoFocus","selectDataRecord","FilterContext","createContext","undefined","inputStopPropagation","includes","stopPropagation","getComparator","sortColumn","a","b","localeCompare","ProductList","setRows","sortColumns","setSortColumns","enabled","filters","setFilters","headerCellClass","headerRenderer","p","FilterRenderer","rest","onKeyDown","_sort","_order","product","filteredRows","useMemo","filter","r","sort","compResult","columnKey","comparator","direction","Provider","saveDelivery","constructDeliveryUpdateData","defaultColumnOptions","sortable","onSortColumnsChange","headerRowHeight","isCellSelected","children","useContext","isSelected","useRef","useLayoutEffect","preventScroll","tabIndex","useFocusRef","SellerProduct","onChangeDescription","onChangeBrand","onChangeCompany","onChangeMRP","onChangeUnit","onChangeWeight","onChangeMeasurment","onChangeQuantity","onChangeRate","onChangeDiscount","onChangeDiscountType","onChangeDeliveryCharge","onChangeproduct","getproduct","brand","company","MRP","unit","weight","measurment","rate","discount","discountType","deliveryCharge","productId","SellerProductService","Modal","handleClickOpen","open","handleClose","getCustomerBill","savePayment","saveMobNo","onChangePayment","getPayment","getBill","payment","prevBill","currentBill","updateMobNo","PaymentService","bill","dues","monthprev","clone","subtract","billName","BillService","bills","category","align","readOnly","onDate","amount","onAmount","onQuantity","onPrev","previousTitle","onUpdate","onNext","nextTitle","onModalClose","TableContainer","component","Paper","Table","sx","minWidth","TableHead","TableRow","TableCell","TableBody","scope","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","ProjectData","handleModalOpen","idx","activeProject","modalTitle","projects","handleModalClose","handleNextProject","arr","handlePrevProject","handleModalUpdate","getProjects","onChangeDate","onChangeAmount","match","searchFlag","dateObj","response1","projectComponents","url","onModalOpen","md","prevTitle","Item","styled","theme","typography","body2","padding","textAlign","color","palette","text","secondary","Project","AddRoute","Date","getDate","parseInt","getMonth","getFullYear","filterColumnClassName","filterClassname","CustomerCalendar","initialCalendar","message","setMessage","setRate","setOpen","confirm","setConfirm","calendar","setCalendar","frozen","generateBillAfterCheck","paramsBill","generateBills","paramCustomer","RateService","rates","lastBillTotal","paramsBillPrev","billService","add","validateBillGeneration","status","defaultValue","style","height","endDate","newRate","variant","filename","columnVal","columnId","cutomerId","rowData","slice","CustomerDaily","CollectionBillsList","from","setFrom","setTo","getBills","generateBillsCollectionAfterCheck","generateBillsCollection","hidden","paramsFrom","validateCollectionBillsGeneration","generateBillCollection","placeholder","CollectionDaily","fat","snf","water","tempQantity","deliveryDate","CustomerList","routeName","Bills","count","border","paid","qty","totalBill","margin","colspan","rowSpan","CollectionBills","colSpan","ExpenseBills","allBills","allBill","allPayments","allPayment","ExpenseList","expenses","party","sortedRows","cotegory","AddExpense","saveExpense","newExpense","onChangeCategory","inputDate","JSON","parse","localStorage","getItem","userName","setItem","stringify","roles","Login","AuthService","setCurrentUser","getCurrentUser","history","push","window","location","reload","App","showModeratorBoard","showAdminBoard","currentUser","user","exact","path","EmployeeDaily","Boolean","hostname","ReactDOM","render","StyledEngineProvider","injectFirst","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.0d9c1150.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n baseURL: \"http://dairyweb-env.eba-rp2mcr7k.ap-south-1.elasticbeanstalk.com/api\",\r\n // baseURL: \"http://localhost:8080/api\",\r\n  //baseURL: \"http://192.168.43.137:3000\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\",\r\n    \"Access-Control-Allow-Origin\": \"*\"\r\n  }\r\n});","import http from \"../http-common\";\r\n\r\nclass CustomerService {\r\n  getAll(params) {\r\n    return http.get(\"/partys\", { params });\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/partys/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/partys\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/partys/${id}`, data);\r\n  }\r\n\r\n  updateMobNo(id, mobNo, data) {\r\n    return http.put(`/partys/${id}/${mobNo}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/partys/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(\"/partys\");\r\n  }\r\n}\r\n\r\nexport default new CustomerService();\r\n","import http from \"../http-common\";\r\n\r\nclass RouteService {\r\n  getAll(params) {\r\n    return http.get(\"/routes\", { params });\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/routes/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/routes\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/routes/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/routes/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(\"/routes\");\r\n  }\r\n}\r\n\r\nexport default new RouteService();\r\n","import React, { Component } from \"react\";\r\nimport CustomerService from \"../services/customer.service\";\r\nimport RouteService from \"../services/route.service\";\r\nimport moment from \"moment\";\r\n\r\nexport default class AddCustomer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeName = this.onChangeName.bind(this);\r\n    this.onChangeAddress = this.onChangeAddress.bind(this);\r\n    this.onChangeMobNo = this.onChangeMobNo.bind(this);\r\n    this.onChangeStartDate = this.onChangeStartDate.bind(this);\r\n    this.onChangeActive = this.onChangeActive.bind(this);\r\n    this.onChangeRoute = this.onChangeRoute.bind(this);\r\n  \tthis.onChangeType = this.onChangeType.bind(this);\r\n    this.onChangeDefaultQuantity = this.onChangeDefaultQuantity.bind(this);\r\n    this.onChangeRouteSeq = this.onChangeRouteSeq.bind(this);\r\n    this.saveTutorial = this.saveTutorial.bind(this);\r\n    this.newTutorial = this.newTutorial.bind(this);\r\n    this.getRoute = this.getRoute.bind(this);\r\n    this.myRef = React.createRef();\r\n  \tthis.myRefType = React.createRef();\r\n\r\n    const today = moment();\r\n    this.state = {\r\n      id: null,\r\n      name: \"\",\r\n      address: \"\", \r\n      mobNo: \"\",\r\n\t    type:\"\",\r\n      active: true,\r\n      startDate: today.format(\"DD-MMM-YYYY\"),\r\n      routeId: \"\",\r\n      defaultQuantity: 1,\r\n      routes:[],\r\n      routeSeq:null,\r\n      submitted: false\r\n    };\r\n  }\r\n\r\n\tonChangeType(e){\r\n\t\tthis.setState({\r\n\t\t  type: e.target.value\r\n\t\t});\r\n\t}\r\n  onChangeName(e) {\r\n    this.setState({\r\n      name: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeAddress(e) {\r\n    this.setState({\r\n      address: e.target.value\r\n    });\r\n  }\r\n  onChangeMobNo(e) {\r\n    if (e.target.value.length<11 ){\r\n    this.setState({\r\n    mobNo: e.target.value  \r\n    });\r\n  }\r\n  }\r\n\r\n  onChangeRouteSeq(e) {\r\n    this.setState({\r\n      routeSeq: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeStartDate(e) {\r\n    this.setState({\r\n      startDate: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeActive(e) {\r\n    this.setState({\r\n      active: e.target.checked\r\n    });\r\n  }\r\n\r\n  onChangeRoute(e) {\r\n    this.setState({\r\n      routeId: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeDefaultQuantity(e) {\r\n    this.setState({\r\n      defaultQuantity: e.target.value\r\n    });\r\n  }\r\n\r\n  saveTutorial(e) {\r\n\te.target.disabled=true;\r\n    var data = {\r\n      name: this.state.name,\r\n      address: this.state.address,\r\n      mobNo: this.state.mobNo,\r\n      startDate: this.state.startDate,\r\n      active: this.state.active,\r\n      routeId: this.myRef.current.value,\r\n\t  type: this.myRefType.current.value,\r\n      defaultQuantity: this.state.defaultQuantity,\r\n      routeSeq: this.state.routeSeq\r\n    };\r\nconsole.log(data);\r\nthis.setState({submitted: true});\r\n    CustomerService.create(data)\r\n      .then(response => {\r\n        this.setState({\r\n          id: response.data.id,\r\n          name: response.data.name,\r\n          address: response.data.address,\r\n          mobNo: Response.data.mobNo,\r\n          active: response.data.active,\r\n          startDate: response.data.startDate,\r\n          routeId: response.data.routeId,\r\n\t\t      type: response.data.type,\r\n          defaultQuantity: response.data.defaultQuantity,\r\n          routeSeq: response.data.routeSeq,\r\n          submitted: true\r\n        });\r\n\t\te.target.disabled=false;\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  newTutorial() {\r\n    this.setState({\r\n      id: null,\r\n      name: \"\",\r\n      address: \"\",\r\n      mobNo: \"\",\r\n      startDate: moment().format(\"DD-MMM-YYYY\"),\r\n      active: true,\r\n      routeId: \"\",\r\n\t  type: \"\",\r\n      defaultQuantity:1,\r\n      routeSeq: null,\r\n      submitted: false\r\n    });\r\n  }\r\n\r\n  //\r\n  componentDidMount() {\r\n    this.getRoute();\r\n  }\r\n\r\n  getRoute(){\r\n    RouteService.getAll()\r\n      .then(response => {\r\n        this.setState({\r\n          routes: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { routes } = this.state;\r\n    return (\r\n      <div className=\"submit-form\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>You submitted successfully!</h4>\r\n            <button className=\"btn btn-success\" onClick={this.newTutorial}>\r\n              Add\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"name\">Customer Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"name\"\r\n                required\r\n                value={this.state.name}\r\n                onChange={this.onChangeName}\r\n                name=\"name\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"address\">Address</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"address\"\r\n                required\r\n                value={this.state.address}\r\n                onChange={this.onChangeAddress}\r\n                name=\"address\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"mobNo\">MobNo</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control phone validate\"\r\n                id=\"mobNo\"\r\n                required\r\n                value={this.state.mobNo}\r\n                onChange={this.onChangeMobNo}\r\n                name=\"mobNo\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"startDate\">Start Date</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"startDate\"\r\n                required\r\n                value={this.state.startDate}\r\n                onChange={this.onChangeStartDate}\r\n                name=\"startDate\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"defaultQuantity\">Default Quantity</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                id=\"defaultQuantity\"\r\n                required\r\n                value={this.state.defaultQuantity}\r\n                onChange={this.onChangeDefaultQuantity}\r\n                name=\"defaultQuantity\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">        \r\n                  <label htmlFor=\"routeId\">Route</label>\r\n                  <div className=\"select-container\">\r\n                    <select className=\"form-control\" value={this.state.routeId} \r\n                    onChange={this.onChangeRoute} ref={this.myRef} name=\"routeId\">\r\n                      {routes.map((option) => (\r\n                        <option value={option.id}>{option.name}</option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"routeSeq\">Route Sequene</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                id=\"routeSeq\"\r\n                required\r\n                value={this.state.routeSeq}\r\n                onChange={this.onChangeRouteSeq}\r\n                name=\"routeSeq\"\r\n              />\r\n            </div>\r\n\t\t\t <div className=\"form-group\">        \r\n                  <label htmlFor=\"type\">Type</label>\r\n                  <div className=\"select-container\">\r\n                    <select className=\"form-control\" value={this.state.type} \r\n\t\t\t\t\t\tonChange={this.onChangeType} ref={this.myRefType} name=\"type\">\r\n                        <option value=\"customer\">Customer</option>\r\n                        <option value=\"staff\">Staff</option>\r\n                        <option value=\"vendor\">Vendor</option>\r\n                        <option value=\"farmer\">Farmer</option>\r\n                        <option value=\"chicken\">Chicken</option>\r\n                        <option value=\"car\">Car</option>\r\n                        <option value=\"ace\">Ace</option>\r\n                        <option value=\"vegetable\">Vegetable</option>\r\n                        <option value=\"grains\">Grains</option>\r\n                        <option value=\"fuel\">Fuel</option>\r\n                    </select>\r\n                  </div>\r\n            </div>\r\n            <div className=\"form-group\">        \r\n                  <label htmlFor=\"active\">Active</label>\r\n                  <input type=\"checkbox\" className=\"form-control\"\r\n                  id=\"active\" name=\"active\"\r\n                  onChange={this.onChangeActive} defaultChecked={this.state.active}/>\r\n            </div>\r\n\r\n            <button onClick={this.saveTutorial} className=\"btn btn-success\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import http from \"../http-common\";\r\n\r\nclass ProductService {\r\n  getAll(params) {\r\n    return http.get(\"/products\", { params });\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/products/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/products\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/products/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/products/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(\"/products\");\r\n  }\r\n}\r\n\r\nexport default new ProductService();\r\n","import React, { Component } from \"react\";\r\nimport ProductService from \"../services/product.service\";\r\nimport moment from \"moment\";\r\n\r\nexport default class AddProduct extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeName = this.onChangeName.bind(this);\r\n    this.onChangeminRate = this.onChangeminRate.bind(this);\r\n    this.onChangemaxRate = this.onChangemaxRate.bind(this);\r\n    this.onChangephoto = this.onChangephoto.bind(this);\r\n    this.onChangedescription = this.onChangedescription.bind(this);\r\n    this.onChangeunitOfQuantity= this.onChangeunitOfQuantity.bind(this);\r\n  \tthis.onChangeType = this.onChangeType.bind(this);\r\n    this.saveTutorial = this.saveTutorial.bind(this);\r\n    this.newTutorial = this.newTutorial.bind(this);\r\n    \r\n    const today = moment();\r\n    this.state = {\r\n      id: null,\r\n      name: \"\",\r\n      minRate: \"\",\r\n      maxRate: \"\",\r\n      photo: \"\",\r\n      description: \"\",\r\n      unitOfQuantity: \"\",\r\n      submitted: false\r\n    };\r\n  }\r\n\r\n\tonChangeType(e){\r\n\t\tthis.setState({\r\n\t\t  type: e.target.value\r\n\t\t});\r\n\t}\r\n  onChangeName(e) {\r\n    this.setState({\r\n      name: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeminRate(e) {\r\n    this.setState({\r\n      minRate: e.target.value\r\n    });\r\n  }\r\n  onChangemaxRate(e) {\r\n    this.setState({\r\n      maxRate: e.target.value  \r\n    });\r\n  }\r\n  \r\n\r\n  onChangephoto(e) {\r\n    this.setState({\r\n      photo: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangedescription(e) {\r\n    this.setState({\r\n      description: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeunitOfQuantity(e) {\r\n    this.setState({\r\n      unitOfQuantity: e.target.checked\r\n    });\r\n  }\r\n  \r\n  saveTutorial(e) {\r\n\te.target.disabled=true;\r\n    var data = {\r\n      name: this.state.name,\r\n      minRate: this.state.minRate,\r\n      maxRate: this.state.maxRate,\r\n      photo: this.state.photo,\r\n      description: this.state.description,\r\n      unitOfQuantity:this.state.unitOfQuantity,\r\n    \r\n\t \r\n    };\r\nconsole.log(data);\r\nthis.setState({submitted: true});\r\n    ProductService.create(data)\r\n      .then(response => {\r\n        this.setState({\r\n          id: response.data.id,\r\n          name: response.data.name,\r\n          minRate: response.data.minRate,\r\n          maxRate: Response.data.maxRate,\r\n          photo: response.data.photo,\r\n          description: response.data.description,\r\n          submitted: true\r\n        });\r\n\t\t    e.target.disabled=false;\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  newTutorial() {\r\n    this.setState({\r\n      id: null,\r\n      name: \"\",\r\n      minRate: \"\",\r\n      maxRate: \"\",\r\n      photo: \"\",\r\n      description: \"\",\r\n      unitOfQuantity: \"\",\r\n      submitted: false\r\n    });\r\n  }\r\n\r\n  //\r\n  componentDidMount() {\r\n  }\r\n  \r\n  render() {\r\n    const { products } = this.state;\r\n    return (\r\n      <div className=\"submit-form\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>You submitted successfully!</h4>\r\n            <button className=\"btn btn-success\" onClick={this.newTutorial}>\r\n              Add\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"name\">Product Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"name\"\r\n                required\r\n                value={this.state.name}\r\n                onChange={this.onChangeName}\r\n                name=\"name\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"minRate\">MinRate</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                id=\"minRate\"\r\n                required\r\n                value={this.state.minRate}\r\n                onChange={this.onChangeminRate}\r\n                name=\"minRate\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"maxRate\">MaxRate</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                id=\"maxRate\"\r\n                required\r\n                value={this.state.maxRate}\r\n                onChange={this.onChangemaxRate}\r\n                name=\"maxRate\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"photo\">Photo\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"photo\"\r\n                required\r\n                value={this.state.photo}\r\n                onChange={this.onChangephoto}\r\n                  name=\"photo\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"description\">Description</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"description\"\r\n                required\r\n                value={this.state.description}\r\n                onChange={this.onChangedescription}\r\n                name=\"description\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"unitOfQuantity\">Unit Of Quantity Quantity</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"unitOfQuantity\"\r\n                required\r\n                value={this.state.unitOfQuantity}\r\n                onChange={this.onChangeunitOfQuantity}\r\n                name=\"unitOfQuantity\"\r\n              />\r\n            </div>\r\n\r\n            <button onClick={this.saveTutorial} className=\"btn btn-success\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import http from \"../http-common\";\r\n\r\nclass DeliveryService {\r\n  getAll(params) {\r\n    return http.get(\"/dailyBills\", { params });\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/dailyBills/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/dailyBills\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/dailyBills/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/dailyBills/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(\"/dailyBills\");\r\n  }\r\n}\r\n\r\nexport default new DeliveryService();\r\n","import http from \"../http-common\";\r\n\r\nclass RouteStockService {\r\n  getAll(params) {\r\n    return http.get(\"/routeStocks\", { params });\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/routeStocks/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/routeStocks\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/routeStocks/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/routeStocks/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(\"/routeStocks\");\r\n  }\r\n}\r\n\r\nexport default new RouteStockService();\r\n","import React from \"react\";\r\nimport type { EditorProps } from 'react-data-grid';\r\n\r\nexport const textEditorClassname = `rdg-text-editor textEditor`;\r\n\r\nfunction autoFocusAndSelect(input: HTMLInputElement | null) {\r\n  if(input)input.select();\r\n  if(input)input.focus();\r\n}\r\n\r\nexport default function NumericEditor({\r\n  row,\r\n  column,\r\n  onRowChange,\r\n  onClose\r\n}: EditorProps) {\r\n  return (\r\n    <input\r\n\t\ttype=\"number\"\r\n\t\tinputmode=\"numeric\" \r\n      className={textEditorClassname}\r\n      ref={autoFocusAndSelect}\r\n      value={row[column.key]}\r\n      onChange={(event) => onRowChange({ ...row, [column.key]: event.target.value })}\r\n      onBlur={() => onClose(true)}\r\n    />\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport RouteService from \"../services/route.service\";\r\nimport RouteStockService from \"../services/route.stock.service\";\r\nimport CustomerService from \"../services/customer.service\";\r\nimport DeliveryService from \"../services/delivery.service\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DataGrid, {TextEditor} from 'react-data-grid';\r\nimport NumericEditor from \"../components/editor/numericeditor.component\";\r\nimport moment from \"moment\";\r\nimport Grid from '@mui/material/Grid';\r\n\r\nconst columns = [\r\n  { key: 'quantity', name: 'Stock Q' , width: 40, editor: NumericEditor, editorOptions: {editOnClick: true} , resizable: true },\r\n  { key: 'routeId', name: 'Action' , width: 40, resizable: true ,\r\n            formatter(props) {\r\n              return <>\r\n                <Link disable=\"true\"\r\n                to={props.row.quantity ? (\"/gui/dailyDelivery/\" + props.row.id ) : \"\"}\r\n                className=\"badge badge-warning\">\r\n                Start\r\n                </Link>\r\n              </>;\r\n            }},\r\n  { key: 'delivered', name: 'Delivered Q' , width: 100 , resizable: true },\r\n  { key: 'pending', name: 'Pending' , width: 80 , resizable: true ,\r\n\t\tformatter(props) {\r\n              return <>\r\n                <Link disable=\"true\"\r\n                to={props.row.quantity ? (\"/gui/dailyDelivery/\" + props.row.id+\"/\"+props.row.pending ): \"\"}\r\n                className=\"badge badge-warning\">\r\n                Pending - {props.row.pending}\r\n                </Link>\r\n              </>;\r\n            }},\r\n\t\t\t\r\n  { key: 'served', name: 'Customer Served' , width: 140 , resizable: true },\r\n  { key: 'totalCustomer', name: 'Total Customer' , width: 130 , resizable: true },\r\n  { key: 'customerQuantity', name: 'Required Q' , width: 100 , resizable: true },\r\n  { key: 'id', name: 'Route ID' , width: 80 , resizable: true },\r\n  { key: 'name', name: 'Name' , editor: TextEditor, editorOptions: {editOnClick: true} , resizable: true },\r\n  { key: 'address', name: 'Address' , editor: TextEditor, editorOptions: {editOnClick: true} , resizable: true }\r\n];\r\n\r\nexport default class RoutesList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.rowChange = this.rowChange.bind(this);\r\n    this.saveRoute = this.saveRoute.bind(this);\r\n    this.routeStockService = this.routeStockService.bind(this);\r\n    this.customerService = this.customerService.bind(this);\r\n    this.deliveryService = this.deliveryService.bind(this);\r\n    \r\n\r\n    this.state = {\r\n      rows: []\r\n    };\r\n    \r\n  }\r\n\r\n  componentDidMount() {\r\n    this.retrieveRoutes();\r\n  }\r\n  retrieveRoutes() {\r\n  var currentDate = moment();\r\n    var initialRows = null;\r\n    RouteService.getAll().then(response => {\r\n        var routes = response.data;\r\n\t\t    console.log(routes);\r\n        initialRows = new Array(routes.length);\r\n        routes.map((route, index) => {\r\n          initialRows[index]={};\r\n          initialRows[index][\"id\"]=route.id;\r\n          initialRows[index][\"name\"]=route.name;\r\n          initialRows[index][\"address\"]=route.address;          \r\n        });\r\n\r\n        const param = {\r\n          date: currentDate.format(\"DD\") ,\r\n          month: currentDate.format(\"MMM-YYYY\") , type: \"income\"\r\n        };\r\n        this.routeStockService(param, initialRows);\r\n        this.customerService(param, initialRows);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  routeStockService(param, initialRows){\r\n    RouteStockService.getAll(param).then((response) => {\r\n      var stocks = response.data;    \r\n\t  if(stocks){\r\n\t\t  stocks.map((stock, index) => {\r\n\t\t\tfor(var initialRow of initialRows){\r\n\t\t\t  if(initialRow.id == stock.routeId){\r\n\t\t\t\tinitialRow[\"quantity\"]=stock.quantity;\r\n\t\t\t\tinitialRow[\"routeStockId\"]=stock.id;\r\n\t\t\t\tbreak;\r\n\t\t\t  }\r\n\t\t\t};\r\n\t\t  });\r\n\t  }\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n    });   \r\n  }\r\n\r\n  customerService(param, initialRows){\r\n    var customers =null;\r\n    const paramCustomer = {active: true, type: \"customer\"}; \r\n    CustomerService.getAll(paramCustomer).then((response) => {\r\n      customers = response.data;\r\n      initialRows.map((initialRow, index) => {\r\n        var customerCount = 0;\r\n        var customerQuantity = 0;\r\n        for(var customer of customers){\r\n          if(initialRow.id == customer.routeId){\r\n\t\t\t//to track which all customer got delivered, keeping all partyIds of the route\r\n            if(initialRow[\"partyId\"]){\r\n              initialRow[\"partyId\"][initialRow[\"partyId\"].length]=customer.id;\r\n            }else{\r\n              initialRow[\"partyId\"]=[];\r\n             initialRow[\"partyId\"][0]=customer.id;\r\n           }\r\n            customerCount++;\r\n            customerQuantity = customerQuantity + customer.defaultQuantity;\r\n          }\r\n        }\r\n        initialRow[\"totalCustomer\"]=customerCount;\r\n        initialRow[\"customerQuantity\"]=customerQuantity;\r\n      });\r\n      this.deliveryService(param, initialRows);\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n    });\r\n  }\r\n\r\n  deliveryService(param, initialRows){\r\n    DeliveryService.getAll(param).then((response) => {\r\n      var deliverys = response.data;\r\n\t  if(deliverys){\r\n\t\t  initialRows.map((initialRow, index) => {\r\n\t\t\tvar totalDelivered = 0;\r\n\t\t\tvar countOfCustomerDelivered = 0;\r\n\t\t\tdeliverys.map((delivery) => {\r\n\t\t\t\tif(initialRow.partyId){\r\n\t\t\t\t  for(var i=0; i < initialRow.partyId.length; i++){\r\n\t\t\t\t\tif(initialRow.partyId[i] == delivery.partyId ){\r\n\t\t\t\t\t  countOfCustomerDelivered++;\r\n\t\t\t\t\t  totalDelivered = totalDelivered + +delivery.quantity ;\r\n\t\t\t\t\t  break;\r\n\t\t\t\t\t}\r\n\t\t\t\t  }\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tinitialRow[\"served\"]=countOfCustomerDelivered;\r\n\t\t\tinitialRow[\"delivered\"]=totalDelivered;\r\n\t\t\tinitialRow[\"pending\"]=initialRow[\"totalCustomer\"]-countOfCustomerDelivered;\r\n\t\t  });\r\n\t  }\r\n    console.log(initialRows);\r\n    this.setState({\r\n      rows: initialRows\r\n    });\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n    }); \r\n  }\r\n\r\n  rowChange(row, col) {\r\n    this.saveRoute(row[col.indexes],col);\r\n    this.setState({\r\n      rows: row\r\n    });\r\n  };\r\n\r\n  saveRoute(row,col) {\r\n    if(col.column.key != 'quantity'){\r\n        var data = {\r\n          id: row.id,\r\n          name: row.name,\r\n          address: row.address,\r\n        };\r\n        RouteService.update(row.id, data)\r\n          .then(response => {\r\n            console.log(response.data);\r\n          })\r\n          .catch(e => {\r\n            console.log(e);\r\n          });\r\n    }else{\r\n      var data = {\r\n        id: row.routeStockId,\r\n        routeId: row.id,\r\n        quantity: +row.quantity,\r\n        date: moment().format(\"DD\"),\r\n        month: moment().format(\"MMM-YYYY\")\r\n      };\r\n      if(data.id){\r\n        RouteStockService.update(data.id, data)\r\n        .then(response => {\r\n          console.log(response.data);\r\n          row.routeStockId = response.data.id;\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n      }else{\r\n        RouteStockService.create(data)\r\n        .then(response => {\r\n          console.log(response.data);\r\n          row.routeStockId = response.data.id;\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    const { rows } = this.state;\r\n\r\n    return (\r\n      <div >\r\n        <Grid container spacing={{ xs: 4}} >\r\n            <Grid item xs={6} sm={6}> \r\n              <Link to={\"/gui/route\"} className=\"nav-link\">\r\n                        Add Route\r\n              </Link>\r\n            </Grid>\r\n            <Grid item xs={6} sm={6}> \r\n            <Link className=\"nav-link\">\r\n                  {moment().format(\"DD-MMM-YYYY\")}\r\n              </Link>\r\n            </Grid>\r\n        </Grid>\r\n        <DataGrid columns={columns} rows={rows} onRowsChange={this.rowChange} />  \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useState , useEffect } from \"react\";\r\nimport RouteService from \"../../services/route.service\";\r\nimport DataGrid, {TextEditor, EditorProps, Row} from 'react-data-grid';\r\nimport RoutesList from \"../routes-list.component\";\r\nimport { useRoutes } from \"../hooks/route.hook\";\r\n\r\nexport default function DropDownEditor({ row, onRowChange }) {\r\n  const { selectData } = useRoutes(); \r\n    \r\n  return (\r\n    <select\r\n      className={TextEditor.textEditorClassname}\r\n      value={row.routeId}\r\n      onChange={(event) => onRowChange({ ...row, routeId: event.target.value }, true)}\r\n      autoFocus\r\n    >\r\n      {selectData && selectData.map((selectDataRecord) => (\r\n        <option key={selectDataRecord.id} value={selectDataRecord.id}>\r\n          {selectDataRecord.name}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n}","import React, { useState , useEffect } from \"react\";\r\nimport RouteService from \"../../services/route.service\";\r\n\r\nexport const useRoutes = () => {\r\n  const [selectData, setSelectData] = useState();\r\n  useEffect(() => {\r\n    if(!selectData || selectData.length === 0){\r\n      RouteService.getAll()\r\n      .then(response => {\r\n        setSelectData(response.data);\r\n        console.log(selectData);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n    }\r\n  }, [selectData]);\r\n  return {selectData};\r\n}","import React, { useState , useEffect, useMemo, useContext, createContext, useRef , useLayoutEffect } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport DataGrid, {TextEditor, SelectCellFormatter} from 'react-data-grid';\r\nimport DeliveryService from \"../services/delivery.service\";\r\nimport ProductService from \"../services/product.service\";\r\nimport DropDownEditor, {useRoute} from \"./editor/dropdown.component\";\r\nimport NumericEditor from \"./editor/numericeditor.component\";\r\nimport moment from 'moment';\r\n\r\n//const rootClassname = 'rootClassname';\r\nconst filterColumnClassName = 'filter-cell';\r\nconst filterContainerClassname = 'filterContainerClassname';\r\nconst filterClassname = 'filterClassname';\r\n\r\nconst FilterContext = createContext(undefined);\r\n\r\nfunction inputStopPropagation(event) {\r\n  if (['ArrowLeft', 'ArrowRight'].includes(event.key)) {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n\r\nexport function stopPropagation(event) {\r\n  event.stopPropagation();\r\n}\r\n\r\nfunction getComparator(sortColumn) {\r\n  switch (sortColumn) {\r\n    case 'name':\r\n\tcase 'description':\r\n\r\n      return (a, b) => {\r\n        return a[sortColumn].localeCompare(b[sortColumn]);\r\n      };\r\n    default:\r\n      return (a, b) => {\r\n        return a[sortColumn] - b[sortColumn];\r\n      };\r\n  }\r\n}\r\n\r\nconst ProductList = props => {  \r\n\r\n  const [rows, setRows] = useState([]);\r\n\tconst [sortColumns, setSortColumns] = useState([]);  \r\n  const [filters, setFilters] = useState({\r\n    name: '',\r\n    enabled: true\r\n  });\r\n\r\n  const columns = [\r\n    { key: 'id', name: 'ID' , width: 40 , resizable: true,\r\n        headerCellClass: filterColumnClassName,\r\n        headerRenderer: (p) => (\r\n          <FilterRenderer {...p}>\r\n            {({ filters, ...rest }) => (\r\n              <input\r\n                {...rest}\r\n                className={filterClassname}\r\n                value={filters.name}\r\n                onChange={(e) =>\r\n                  setFilters({\r\n                    ...filters,\r\n                    name: e.target.value\r\n                  })\r\n                }\r\n                onKeyDown={inputStopPropagation}\r\n              />\r\n            )}\r\n          </FilterRenderer>\r\n        )\r\n    },\r\n    { key: 'name', name: 'Name' , editor: TextEditor, editorOptions: {editOnClick: true} , resizable: true },\r\n    { key: 'minRate', name: 'minRate' , editor: NumericEditor, editorOptions: {editOnClick: true} , resizable: true },\r\n    { key: 'maxRate', name: 'maxRate' , editor: NumericEditor, editorOptions: {editOnClick: true} , resizable: true },\r\n    { key: 'photo', name: 'Photo' , editor: TextEditor, editorOptions: {editOnClick: true} , resizable: true },\r\n    { key: 'description', name: 'Description' , editor: TextEditor, editorOptions: {editOnClick: true} , resizable: true ,\r\n           },\r\n  ];\r\n\r\n    useEffect(() => {\r\n      var initialRows = null;\r\n      const paramProduct= { _sort: \"routeId\",\r\n                        _order: \"asc\"};\r\n     ProductService.getAll(paramProduct).then((response) => {\r\n        var products = response.data;\r\n        initialRows = new Array(products.length);\r\n        products.map((product, index) => {\r\n          initialRows[index]={};\r\n          initialRows[index][\"id\"]=product.id;\r\n          initialRows[index][\"name\"]=product.name;\r\n          initialRows[index][\"minRate\"]=product.minRate;\r\n          initialRows[index][\"maxRate\"]=product.maxRate;\r\n          initialRows[index][\"photo\"]=product.photo;\r\n          initialRows[index][\"description\"]=product.description;\r\n          \r\n        });\r\n        setRows(initialRows);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });    \r\n    }, []);\r\n\r\n    function rowChange(row, col) {\r\n      constructDeliveryUpdateData(row,col);\r\n      setRows (row);\r\n    }\r\n\r\n    function constructDeliveryUpdateData(row, col){\r\n      console.log(row[col.indexes].id+ \" - \"+row[col.indexes][col.column.key]);\r\n      saveDelivery(row[col.indexes]);\r\n    }\r\n\r\n    function saveDelivery (row) {\r\n      var data = {\r\n        id: row.id,\r\n        name: row.name,\r\n        minRate: row.minRate,\r\n        maxRate: row.maxRate,\r\n        photo: row.photo,\r\n        description: row.description,\r\n      };\r\n      console.log(data);\r\n      \r\n           ProductService.update(row.id, data)\r\n            .then(response => {\r\n              console.log(response.data);\r\n            })\r\n            .catch(e => {\r\n              console.log(e);\r\n            }); \r\n    }\r\n\r\n\t  const filteredRows = useMemo( () => {\r\n      function filter(){\r\n        var filteredRows = null;\r\n         filteredRows = rows.filter((r) => {\r\n          return (\r\n            (filters.name ? r.name.includes(filters.name) : true)\r\n          );\r\n        })\r\n        if (sortColumns.length === 0) return filteredRows;\r\n        filteredRows = [...filteredRows].sort((a, b) => {\r\n          for (const sort of sortColumns) {\r\n            const comparator = getComparator(sort.columnKey);\r\n            const compResult = comparator(a, b);\r\n            if (compResult !== 0) {\r\n              return sort.direction === 'ASC' ? compResult : -compResult;\r\n            }\r\n          }\r\n          return 0;\r\n        })\r\n        return filteredRows;\r\n      }\r\n      return filter();\r\n    }, [rows, filters, sortColumns]);\r\n  \r\n    return (\r\n      <div >\r\n                <Link to={\"/gui/addProduct\"} className=\"nav-link\">\r\n                  Add Product\r\n                </Link>\r\n        <div className=\"rootClassname\">\r\n          <FilterContext.Provider value={filters}>\r\n            <DataGrid columns={columns} onRowsChange={rowChange} \r\n             defaultColumnOptions={{\r\n              sortable: true,\r\n              resizable: true\r\n            }}\r\n              className={filters.enabled ? filterContainerClassname : undefined}\r\n              rows={filteredRows}\r\n              sortColumns={sortColumns}\r\n              onSortColumnsChange={setSortColumns}\r\n              headerRowHeight={filters.enabled ? 50 : undefined}\r\n              />\r\n            </FilterContext.Provider>\r\n          </div>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default ProductList;\r\n\r\n  \r\nfunction FilterRenderer({isCellSelected,column,children}) {\r\n  const filters = useContext(FilterContext);\r\n  const { ref, tabIndex } = useFocusRef(isCellSelected);\r\n\r\n  return (\r\n    <>\r\n      <div>{column.name}</div>\r\n      {filters.enabled && <div>{children({ ref, tabIndex, filters })}</div>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport function useFocusRef(isSelected) {\r\n  const ref = useRef(null);\r\n\r\n  useLayoutEffect(() => {\r\n    if (!isSelected) return;\r\n    ref.current && ref.current.focus({ preventScroll: true });\r\n  }, [isSelected]);\r\n\r\n\r\n  return {\r\n    ref,\r\n    tabIndex: isSelected ? 0 : -1\r\n  };\r\n}","import http from \"../http-common\";\r\n\r\nclass SellerProductService {\r\n  getAll(params) {\r\n    return http.get(\"/sellerProducts\", { params });\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/sellerProducts/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/sellerProducts\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/sellerProducts/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/sellerProducts/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(\"/sellerProducts\");\r\n  }\r\n}\r\n\r\nexport default new SellerProductService();\r\n","import React, { Component } from \"react\";\r\nimport moment from \"moment\";\r\nimport ProductService from \"../services/product.service\";\r\nimport SellerProductService from \"../services/seller.product.service\";\r\n\r\nexport default class SellerProduct extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeName = this.onChangeName.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    this.onChangeBrand = this.onChangeBrand.bind(this);\r\n    this.onChangeCompany = this.onChangeCompany.bind(this);\r\n    this.onChangeMRP = this.onChangeMRP.bind(this);\r\n    this.onChangeUnit = this.onChangeUnit.bind(this);\r\n    this.onChangeWeight = this.onChangeWeight.bind(this);\r\n  \tthis.onChangeMeasurment = this.onChangeMeasurment.bind(this);\r\n    this.onChangeQuantity = this.onChangeQuantity.bind(this);\r\n    this.onChangeRate = this.onChangeRate.bind(this);\r\n    this.onChangeDiscount = this.onChangeDiscount.bind(this);\r\n    this.onChangeDiscountType = this.onChangeDiscountType.bind(this);\r\n    this.onChangeDeliveryCharge = this.onChangeDeliveryCharge.bind(this);\r\n    this.saveTutorial = this.saveTutorial.bind(this);\r\n    this.newTutorial = this.newTutorial.bind(this);\r\n    this.onChangeproduct=this.onChangeproduct.bind(this);\r\n    this.getproduct=this.getproduct.bind(this);\r\n    this.myRef = React.createRef();\r\n    \r\n    const today = moment();\r\n    this.state = {\r\n      id: null,\r\n      name: \"\",\r\n      description: \"\", \r\n      brand: \"\",\r\n\t    company:\"\",\r\n      MRP:\"\",\r\n      unit:\"\",\r\n      weight:\"\",\r\n      measurment:\"\",\r\n      quantity:\"\",\r\n      rate:\"\",\r\n      discount:\"\",\r\n      discountType:\"\",\r\n      deliveryCharge:\"\",\r\n      products:[],\r\n      productId: \"\",\r\n      submitted: false\r\n    };\r\n  }\r\n\r\n\tonChangeType(e){\r\n\t\tthis.setState({\r\n\t\t  type: e.target.value\r\n\t\t});\r\n\t}\r\n  onChangeName(e) {\r\n    this.setState({\r\n      name: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeDescription(e) {\r\n    this.setState({\r\n      description: e.target.value\r\n    });\r\n  }\r\n  onChangeBrand(e) {\r\n    if (e.target.value.length<11 ){\r\n    this.setState({\r\n    brand: e.target.value  \r\n    });\r\n  }\r\n  }\r\n\r\n  onChangeCompany(e) {\r\n    this.setState({\r\n      company: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeMRP(e) {\r\n    this.setState({\r\n      MRP: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeUnit(e) {\r\n    this.setState({\r\n      unit: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeWeight(e) {\r\n    this.setState({\r\n      weight: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeMeasurment(e) {\r\n    this.setState({\r\n      measurment: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeQuantity(e) {\r\n    this.setState({\r\n      quantity: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeRate(e) {\r\n    this.setState({\r\n      rate: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeDiscount(e) {\r\n    this.setState({\r\n      discount: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeDiscountType(e) {\r\n    this.setState({\r\n      discountType: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeDeliveryCharge(e) {\r\n    this.setState({\r\n      deliveryCharge: e.target.value\r\n    });\r\n  }\r\n  onChangeproduct(e) {\r\n    this.setState({\r\n      productId: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeActive(e) {\r\n    this.setState({\r\n      active: e.target.checked\r\n    });\r\n  }\r\n\r\n  saveTutorial(e) {\r\n\te.target.disabled=true;\r\n    var data = {\r\n      name: this.myRef.current.value,\r\n      description: this.state.description,\r\n      brand: this.state.brand,\r\n      company: this.state.company,\r\n      MRP: this.state.MRP,\r\n      unit: this.state.unit,\r\n      weight: this.state.weight,\r\n      measurment: this.state.measurment,\r\n      quantity: this.state.quantity,\r\n      rate: this.state.rate,\r\n      discount: this.state.discount,\r\n      discountType: this.state.discountType,\r\n      deliveryCharge: this.state.deliveryCharge,\r\n      active: this.state.active,\r\n      productId: this.myRef.current.value\r\n    };\r\nconsole.log(data);\r\nthis.setState({submitted: true});\r\n    SellerProductService.create(data)\r\n      .then(response => {\r\n        this.setState({\r\n          id: response.data.id,\r\n          name: response.data.name,\r\n          name: response.data.name,\r\n          description: response.data.description,\r\n          brand: response.data.brand,\r\n          company: response.data.company,\r\n          MRP: response.data.MRP,\r\n          unit: response.data.unit,\r\n          weight: response.data.weight,\r\n          measurment: response.data.measurment,\r\n          quantity: response.data.quantity,\r\n          rate: response.data.rate,\r\n          discount: response.data.discount,\r\n          discountType: response.data.discountType,\r\n          deliveryCharge: response.data.deliveryCharge,\r\n          active: response.data.active,\r\n          productId: response.data.productId,\r\n          submitted: true\r\n        });\r\n\t\te.target.disabled=false;\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  newTutorial() {\r\n    this.setState({\r\n      id: null,\r\n      name: \"\",\r\n      description: \"\",\r\n      brand: \"\",\r\n      company: \"\",\r\n      MRP: \"\",\r\n      unit: \"\",\r\n      weight: \"\",\r\n      measurment: \"\",\r\n      quantity: \"\",\r\n      rate: \"\",\r\n      discount: \"\",\r\n      discountType: \"\",\r\n      deliveryCharge: \"\",\r\n      productId: \"\",\r\n      submitted: false\r\n    });\r\n  }\r\n\r\n  //\r\n  componentDidMount() {\r\n    this.getproduct();\r\n  }\r\n\r\n  getproduct(){\r\n    ProductService.getAll()\r\n      .then(response => {\r\n        this.setState({\r\n          products: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { products } = this.state;\r\n    return (\r\n      <div className=\"submit-form\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>You submitted successfully!</h4>\r\n            <button className=\"btn btn-success\" onClick={this.newTutorial}>\r\n              Add\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className=\"form-group\">        \r\n                  <label htmlFor=\"productId\">Product Name</label>\r\n                  <div className=\"select-container\">\r\n                    <select className=\"form-control\" value={this.state.productId} \r\n                    onChange={this.onChangeproduct} ref={this.myRef} name=\"productId\">\r\n                      {products && products.map((option) => (\r\n                        <option value={option.name}>{option.name}</option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"description\">Description</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"description\"\r\n                required\r\n                value={this.state.description}\r\n                onChange={this.onChangeDescription}\r\n                name=\"description\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"brand\">Brand</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"brand\"\r\n                required\r\n                value={this.state.brand}\r\n                onChange={this.onChangeBrand}\r\n                name=\"brand\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"company\">Company Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"company\"\r\n                required\r\n                value={this.state.company}\r\n                onChange={this.onChangeCompany}\r\n                name=\"company\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"MRP\">MRP</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"MRP\"\r\n                required\r\n                value={this.state.MRP}\r\n                onChange={this.onChangeMRP}\r\n                name=\"MRP\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"unit\">unit</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"unit\"\r\n                required\r\n                value={this.state.unit}\r\n                onChange={this.onChangeUnit}\r\n                name=\"unit\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"weight\">Weight</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"weight\"\r\n                required\r\n                value={this.state.weight}\r\n                onChange={this.onChangeWeight}\r\n                name=\"unit\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"measurment\">Measurment</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"measurment\"\r\n                required\r\n                value={this.state.measurment}\r\n                onChange={this.onChangeMeasurment}\r\n                name=\"measurment\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"quantity\">Quantity</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"quantity\"\r\n                required\r\n                value={this.state.quantity}\r\n                onChange={this.onChangeQuantity}\r\n                name=\"quantity\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"rate\">Product Rate</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"rate\"\r\n                required\r\n                value={this.state.rate}\r\n                onChange={this.onChangeRate}\r\n                name=\"rate\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"discount\">Discount </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"discount\"\r\n                required\r\n                value={this.state.discount}\r\n                onChange={this.onChangeDiscount}\r\n                name=\"discount\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"discountType\">DiscountType </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"discountType\"\r\n                required\r\n                value={this.state.discountType}\r\n                onChange={this.onChangeDiscountType}\r\n                name=\"discountType\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"deliveryCharge\">DeliveryCharge </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"deliveryCharge\"\r\n                required\r\n                value={this.state.deliveryCharge}\r\n                onChange={this.onChangeDeliveryCharge}\r\n                name=\"deliveryCharge\"\r\n              />\r\n            </div>\r\n\r\n            <button onClick={this.saveTutorial} className=\"btn btn-success\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import http from \"../http-common\";\r\n\r\nclass BillService {\r\n  getAll(params) {\r\n    return http.get(\"/bills\", { params });\r\n  }\r\n\r\n  generateBillsCollection(params) {\r\n    return http.get(\"/generateBillsCollection\",{params});\r\n  }\r\n  \r\n  validateCollectionBillsGeneration(type,params) {\r\n    return http.get(`/generateBillsCollection/${type}`,{params});\r\n}\r\n\r\n  generateBills(params) {\r\n    return http.get(\"/generateBills\", { params });\r\n  }\r\n  \r\n  validateBillGeneration(month,type) {\r\n    return http.get(`/generateBills/${month}/${type}`);\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/bills/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/bills\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/bills/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/bills/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(\"/bills\");\r\n  }\r\n}\r\n\r\nexport default new BillService();\r\n","import http from \"../http-common\";\r\n\r\nclass PaymentService {\r\n  getAll(params) {\r\n    return http.get(\"/payments\", { params });\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/payments/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/payments\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/payments/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/payments/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(\"/payments\");\r\n  }\r\n}\r\n\r\nexport default new PaymentService();\r\n","import React, { Component } from \"react\";\r\nimport moment from 'moment';\r\n\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\n\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nimport { experimentalStyled as styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nimport BillService from \"../services/bill.service\";\r\nimport PaymentService from \"../services/payment.service\";\r\nimport CustomerService from \"../services/customer.service\";\r\n\r\nexport default class Modal extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.getCustomerBill = this.getCustomerBill.bind(this);\r\n      this.savePayment = this.savePayment.bind(this);\r\n      this.saveMobNo = this.saveMobNo.bind(this);\r\n      this.onChangePayment = this.onChangePayment.bind(this);\r\n      this.onChangeMobNo = this.onChangeMobNo.bind(this);\r\n      this.handleClickOpen = this.handleClickOpen.bind(this);\r\n      this.handleClose = this.handleClose.bind(this);\r\n      this.getPayment = this.getPayment.bind(this);\r\n      this.getBill = this.getBill.bind(this);\r\n  \r\n      this.state = {\r\n        partyId: props.partyId,\r\n        payment: null,\r\n        prevBill: {},\r\n        currentBill: {},\r\n        open: false,\r\n        mobNo: null\r\n      }; \r\n    }\r\n  \r\n    componentDidMount() {\r\n      this.getCustomerBill(this.props);\r\n    }\r\n\r\n    \r\n    onChangePayment(e){\r\n      this.setState({\r\n        payment: +e.target.value\r\n      });\r\n    }\r\n\r\n    onChangeMobNo(e){\r\n      if (e.target.value.length<11 ){\r\n        this.setState({\r\n          mobNo: +e.target.value\r\n        });\r\n      }\r\n    }\r\n    saveMobNo(e){\r\n      e.target.disabled=true;\r\n      if(this.state.mobNo){\r\n        var data = {id: this.props.partyId};\r\n             CustomerService.updateMobNo(this.props.partyId, this.state.mobNo, data)\r\n              .then(response => {\r\n                console.log(response.data);\r\n                e.target.disabled=false;\r\n              })\r\n              .catch(e => {\r\n                console.log(e);\r\n              }); \r\n      }\r\n    }\r\n\r\n    savePayment(e){\r\n\t    e.target.disabled=true;\r\n      if(this.state.payment){\r\n        var data = {\r\n          partyId: this.props.partyId,\r\n          month: moment(this.props.date, \"DD-MMM-YYYY\").format(\"MMM-YYYY\"),\r\n          date: moment(this.props.date, \"DD-MMM-YYYY\").format(\"DD\"),\r\n\t\t      active: true,\r\n          payment: this.state.payment,\r\n          type: \"income\"\r\n        };\r\n        PaymentService.create(data)\r\n          .then(response => {\r\n            this.setState({\r\n              currentBill: {\r\n                quantity: this.state.currentBill.quantity,\r\n                rate: this.state.currentBill.rate,\r\n                bill: this.state.currentBill.bill,\r\n                dues: this.state.currentBill.dues,\r\n                month: moment(this.props.date, \"DD-MMM-YYYY\").format(\"MMM-YYYY\"),\r\n                payment: (this.state.currentBill.payment? this.state.currentBill.payment : 0) + response.data.payment\r\n              }\r\n            });\r\n            console.log(response.data);\r\n\t\t\t      e.target.disabled=false;\r\n            this.handleClickOpen();\r\n            this.state.payment=\"\";\r\n          })\r\n          .catch(e => {\r\n            console.log(e);\r\n          });\r\n        }\r\n    }\r\n  \r\n    handleClickOpen = () => {\r\n      this.setState({\r\n        open: true\r\n      });\r\n    };\r\n  \r\n    handleClose = () => {\r\n      this.setState({\r\n        open: false\r\n      });\r\n    };\r\n  \r\n    getCustomerBill(props){\r\n      var date = moment(props.date, \"DD-MMM-YYYY\");\r\n      var month = date.format(\"MMM-YYYY\");\r\n\r\n      var currentBill = {month: month};\r\n      this.getPayment(month, props.partyId, currentBill);\r\n      this.getBill(month, props.partyId, \"currentBill\", currentBill);\r\n    \r\n      var monthprev = date.clone().subtract(1, 'months').format(\"MMM-YYYY\");\r\n      var prevBill = {month: monthprev};\r\n      this.getPayment(monthprev, props.partyId, prevBill);\r\n      this.getBill(monthprev, props.partyId, \"prevBill\", prevBill);\r\n    \r\n    }\r\n\r\n    getBill(month, partyId, billName, prevBill){\r\n      var params ={ \"partyId\" : partyId ,\r\n              \"month\": month, \"active\": true, type: \"income\"};\r\n      BillService.getAll(params).then(response => {\r\n        var bills = response.data;\r\n        if(bills){\r\n          bills.map((bill) => {\r\n              prevBill[\"quantity\"] = bill.quantity;\r\n              prevBill[\"rate\"]=bill.rate;\r\n              prevBill[\"bill\"]=bill.bill;\r\n              prevBill[\"dues\"]=bill.dues;\r\n          });\r\n        }\r\n        this.setState({\r\n          [billName]: prevBill\r\n        });\r\n        console.log(this.state);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n    }\r\n\r\n    getPayment(month, partyId, prevBill){\r\n      var params ={ \"partyId\" : partyId ,\r\n                    \"month\": month, \"active\": true, type: \"income\"};\r\n      PaymentService.getAll(params).then(response => {\r\n        var bills = response.data;\r\n        if(bills){\r\n          bills.map((bill) => {\r\n            if(bill.category == 'discount'){\r\n              prevBill[\"discount\"]=bill.payment;\r\n            } else{\r\n              if(prevBill[\"payment\"]){\r\n                prevBill[\"payment\"]=prevBill[\"payment\"]+bill.payment;\r\n              }else{\r\n                prevBill[\"payment\"]=+bill.payment\r\n              }\r\n            }\r\n          });\r\n        }\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n    }\r\n  \r\n    render() {\r\n      const {prevBill, currentBill} = this.state;\r\n      if(this.props.partyId != this.state.partyId){\r\n        this.getCustomerBill(this.props);\r\n        this.setState({\r\n          partyId: this.props.partyId\r\n        });\r\n      }\r\n      return (\r\n        <div>\r\n          <h1 align=\"center\">{this.props.name}</h1>\r\n          <Grid container spacing={{ xs: 4}} >\r\n            <Grid item xs={12} sm={6}> \r\n                <div className=\"form-group\">\r\n                      <label htmlFor=\"date\"> Date</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"date\"\r\n                        required\r\n\t\t\t\t\t\t            readOnly =\"readOnly\"\r\n                        value={this.props.date}\r\n                        onChange={this.props.onDate}\r\n                        name=\"date\"\r\n                      />\r\n                </div>\r\n\t\t\t\t<div className=\"form-group\">\r\n                      <label htmlFor=\"amount\">Amount</label>\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        id=\"amount\"\r\n                        required\r\n                        value={this.props.amount}\r\n                        onChange={this.props.onAmount}\r\n                        name=\"amount\"\r\n                      />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                      <label htmlFor=\"defaultQuantity\">Quantity</label>\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        id=\"defaultQuantity\"\r\n                        required\r\n                        value={this.props.defaultQuantity}\r\n                        onChange={this.props.onQuantity}\r\n                        name=\"defaultQuantity\"\r\n                      />\r\n                </div>\r\n                    <div className=\"form-group\">\r\n                      <button className=\"btn btn-success\" onClick={this.props.onPrev}>{'\\u2B05'}{this.props.previousTitle} </button>\r\n                      {\" \"}\r\n                      <button className=\"btn btn-success\" onClick={this.props.onUpdate}>Update & Next</button>\r\n                      {\" \"}\r\n                      <button className=\"btn btn-success\" onClick={this.props.onNext}>{this.props.nextTitle} {'\\u27A1'}</button>    \r\n                    </div>\r\n                    <div className=\"form-group\" >\r\n                      <button className=\"btn btn-success\" onClick={this.props.onModalClose}>Close Route Delivery</button>\r\n                    </div>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}> \r\n                <div className=\"form-group\">\r\n  \r\n                <TableContainer component={Paper}>\r\n                        <Table sx={{ minWidth: 200 }} aria-label=\"simple table\">\r\n                          <TableHead>\r\n                            <TableRow>\r\n                              <TableCell>Billing</TableCell>\r\n                              <TableCell align=\"right\">Prev Month ({prevBill.month})</TableCell>\r\n                              <TableCell align=\"right\">Current Month ({currentBill.month})</TableCell>\r\n                            </TableRow>\r\n                          </TableHead>\r\n                          <TableBody>\r\n                              <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    Quantity\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">{prevBill.quantity}</TableCell>\r\n                                <TableCell align=\"right\">{currentBill.quantity}</TableCell>\r\n                              </TableRow>\r\n                              <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    Rate\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">{prevBill.rate}</TableCell>\r\n                                <TableCell align=\"right\">{currentBill.rate}</TableCell>\r\n                              </TableRow>\r\n                              <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    Bill\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">{prevBill.bill}</TableCell>\r\n                                <TableCell align=\"right\">{currentBill.bill}</TableCell>\r\n                              </TableRow>\r\n                              <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    Payment\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">{prevBill.payment}</TableCell>\r\n                                <TableCell align=\"right\">{currentBill.payment}</TableCell>\r\n                              </TableRow>\r\n                              <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    Dues\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">{prevBill.dues}</TableCell>\r\n                                <TableCell align=\"right\">{currentBill.dues}</TableCell>\r\n                              </TableRow>\r\n                          </TableBody>\r\n                        </Table>\r\n                      </TableContainer>\r\n                    \r\n                </div>\r\n                <div className=\"form-group\">\r\n                      <label htmlFor=\"payment\">Payment</label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        id=\"payment\"\r\n                        required\r\n                        value={this.state.payment}\r\n                        onChange={this.onChangePayment}\r\n                        name=\"payment\"\r\n\t\t\t\t\t\t            type=\"number\"\r\n                      />\r\n                </div>\r\n                <button className=\"btn btn-success\" onClick={this.savePayment}>Payment Received</button>\r\n\r\n                <div className=\"form-group\">\r\n                      <label htmlFor=\"mobNo\">MobileNo</label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        id=\"mobNo\"\r\n                        required\r\n                        value={this.state.mobNo}\r\n                        onChange={this.onChangeMobNo}\r\n                        name=\"mobNo\"\r\n\t\t\t\t\t\t            type=\"number\"\r\n                      />\r\n                </div>\r\n                <button className=\"btn btn-success\" onClick={this.saveMobNo}>Set Mob No</button>  \r\n          </Grid>\r\n        </Grid>\r\n  \r\n        <Dialog\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\">\r\n          <DialogTitle id=\"alert-dialog-title\">\r\n            {\"Payments\"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              Payment of amount {this.state.payment} is confirmed.\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose}>Close</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        </div>\r\n      );\r\n    }\r\n  }","import React, { Component } from \"react\";\r\nimport moment from 'moment';\r\n\r\nimport { experimentalStyled as styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport Grid from '@mui/material/Grid';\r\n\r\n\r\nimport CustomerService from \"../services/customer.service\";\r\nimport DeliveryService from \"../services/delivery.service\";\r\nimport Modal from \"./modal.component\";\r\n\r\nexport default class ProjectData extends Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.getProjects= this.getProjects.bind(this);\r\n    this.saveDelivery= this.saveDelivery.bind(this);\r\n    this.onChangeDate = this.onChangeDate.bind(this);\r\n    this.handleNextProject = this.handleNextProject.bind(this);\r\n    this.onChangeDefaultQuantity = this.onChangeDefaultQuantity.bind(this);\r\n\tthis.onChangeAmount = this.onChangeAmount.bind(this);\r\n\r\n    this.state = {\r\n      projects: [],\r\n      activeProject: '',\r\n      modalTitle: '',\r\n      partyId: null,\r\n      quantity: null,\r\n\t    amount: null,\r\n      date: moment().format(\"DD-MMM-YYYY\")\r\n    }\r\n   \r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.getProjects(this.props.match.params.id, this.props.match.params.pending);\r\n  }\r\n\r\n  getProjects(id, pending) {\r\n\tif(pending){\r\n\t\tconst params ={ \"routeId\" : id, type: \"customer\", searchFlag: \"pending\" };\r\n\t\tCustomerService.getAll(params)\r\n\t\t  .then(response => {\r\n\t\t\tconsole.log(response.data);\r\n\t\t\tthis.setState({\r\n\t\t\t  projects: response.data\r\n\t\t\t});\r\n\t\t  })\r\n\t\t  .catch(e => {\r\n\t\t\tconsole.log(e);\r\n\t\t  });\r\n\t}else{\r\n\t\tconst params ={ \"routeId\" : id, type: \"customer\" };\r\n\t\tCustomerService.getAll(params)\r\n\t\t  .then(response => {\r\n\t\t\tconsole.log(response.data);\r\n\t\t\tthis.setState({\r\n\t\t\t  projects: response.data\r\n\t\t\t});\r\n\t\t  })\r\n\t\t  .catch(e => {\r\n\t\t\tconsole.log(e);\r\n\t\t  });\r\n\t}\r\n  }\r\n\r\n\r\n  handleModalOpen = (idx) => {\r\n    this.setState({\r\n      activeProject: idx,\r\n      modalTitle: this.state.projects[idx].name,\r\n      quantity: this.state.projects[idx].defaultQuantity,\r\n\t    amount: this.state.projects[idx].amount,\r\n      date: this.state.date,\r\n      partyId: this.state.projects[idx].id\r\n    });  \r\n  };\r\n\r\n  handleModalClose = () => {\r\n    this.setState({\r\n      activeProject: ''\r\n    });  \r\n  };\r\n\r\n  handleNextProject = () => {\r\n    \r\n    var arr = this.state.projects.length;\r\n    var idx = this.state.activeProject + 1;\r\n    var idx = idx % arr;\r\n    \r\n    this.setState({\r\n      activeProject: idx,\r\n      modalTitle: this.state.projects[idx].name,\r\n      quantity: this.state.projects[idx].defaultQuantity,\r\n\t    amount: this.state.projects[idx].amount,\r\n      date: this.state.date,\r\n      partyId: this.state.projects[idx].id\r\n    }); \r\n    \r\n  }\r\n\r\n  handlePrevProject = () => {\r\n    var arr = this.state.projects.length;\r\n    var idx = this.state.activeProject;    \r\n    if (idx === 0) {\r\n      var idx = arr - 1;\r\n    } else {\r\n      var idx = idx -1;\r\n    }\r\n    \r\n    this.setState({\r\n      activeProject: idx,\r\n      modalTitle: this.state.projects[idx].name,\r\n      quantity: this.state.projects[idx].defaultQuantity,\r\n\t  amount: this.state.projects[idx].amount,\r\n      date: this.state.date,\r\n      partyId: this.state.projects[idx].id\r\n    });  \r\n    \r\n  }\r\n\r\n  handleModalUpdate = (e) => {\r\n\t  e.target.disabled=true;\r\n    this.saveDelivery(this.state.partyId,this.state.date, this.state.quantity,this.state.amount, e);\r\n  }\r\n\r\n  onChangeDefaultQuantity(e) {\r\n    this.setState({\r\n      quantity: e.target.value\r\n    });\r\n  }\r\n  onChangeAmount(e) {\r\n    this.setState({\r\n      amount: e.target.value\r\n    });\r\n  }\r\n  onChangeDate(e) {\r\n    this.setState({\r\n      date: e.target.value\r\n    });\r\n  }\r\n\r\n  saveDelivery (id, date, quantity, amount, e) {\r\n    const dateObj = moment(date, \"DD-MMM-YYYY\");\r\n    var data = {\r\n      partyId: id,\r\n      date: dateObj.format(\"DD\"),\r\n      month: dateObj.format(\"MMM-YYYY\"),\r\n      quantity: quantity,\r\n      amount: amount,\r\n      type: \"income\"\r\n    };\r\n    \r\n    const params =  { \"partyId\" : id , \r\n                      \"date\": data.date,\r\n                      \"month\": data.month, \r\n\t\t\t\t\t  type: \"income\"\r\n                   };\r\n\t\t\t\t   //checking if already delivered for the day\r\n    DeliveryService.getAll(params).then(response => {\r\n        if(response.data && response.data.length > 0){\r\n          data[\"id\"]=response.data[0].id;\r\n          DeliveryService.update(data[\"id\"], data).then(response1 => {\r\n            console.log(response1.data);\r\n              e.target.disabled=false;\r\n              this.handleNextProject();\r\n          })\r\n          .catch(e => {\r\n            console.log(e);\r\n          });\r\n        } else {\r\n          DeliveryService.create(data).then(response1 => {\r\n            console.log(response1.data);\r\n            e.target.disabled=false;\r\n            this.handleNextProject();\r\n          })\r\n          .catch(e => {\r\n            console.log(e);\r\n          });\r\n        }\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n    \r\n    this.state.date=moment().format(\"DD-MMM-YYYY\");\r\n  }\r\n\r\n  render() {\r\n    const { projects } = this.state;\r\n    \r\n    function nextTitle(idx, arr) {\r\n      var i = idx + 1;\r\n      var i = i % arr.length;\r\n      return arr[i].name;\r\n    }\r\n    \r\n    function prevTitle(idx, arr) {\r\n      \r\n      if (idx === 0) {\r\n        var i = arr.length -1;\r\n      } else {\r\n        var i = idx -1;\r\n      }\r\n      \r\n      return arr[i].name;\r\n    }\r\n\r\n    const projectComponents = projects && projects.map((data, idx, arr) =>\r\n      <Project\r\n        key={'project-' + data.id}\r\n        index={idx}\r\n        name={data.name}\r\n        url={data.address}\r\n        onModalOpen={this.handleModalOpen}\r\n      />,\r\n    );\r\n\r\n    if(this.state.activeProject === '') {\r\n      return (\r\n        <div>\r\n          <Grid container spacing={{ xs: 1, md: 1 }} columns={{ xs: 4, sm: 8, md: 12 }}>\r\n                {projectComponents}\r\n          </Grid>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <Modal \r\n            name={this.state.modalTitle}\r\n            defaultQuantity={this.state.quantity}\r\n\t\t\t      amount={this.state.amount}\r\n            date={this.state.date}\r\n            partyId={this.state.partyId}\r\n            previousTitle={prevTitle(this.state.activeProject, projects)}\r\n            nextTitle={nextTitle(this.state.activeProject, projects)}\r\n            onModalClose={this.handleModalClose}\r\n            onNext={this.handleNextProject}\r\n            onPrev={this.handlePrevProject}\r\n            onDate={this.onChangeDate}\r\n            onQuantity={this.onChangeDefaultQuantity}\r\n\t\t\t      onAmount={this.onChangeAmount}\r\n            onUpdate={this.handleModalUpdate}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    color: theme.success.main\r\n  }\r\n});\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(2),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\n\r\n\r\nclass Project extends React.Component {\r\n  render() {\r\n    return (\r\n\r\n  <Grid item xs={2} sm={4} md={4} key={this.props.index} onClick={this.props.onModalOpen.bind(this, this.props.index)}>\r\n    <Item><h1>{this.props.name} - {this.props.url}</h1></Item>\r\n  </Grid>                \r\n    );\r\n  }\r\n}\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport RouteService from \"../services/route.service\";\r\n\r\nexport default class AddRoute extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeName = this.onChangeName.bind(this);\r\n    this.onChangeAddress = this.onChangeAddress.bind(this);\r\n    this.onChangeStartDate = this.onChangeStartDate.bind(this);\r\n    this.onChangeActive = this.onChangeActive.bind(this);\r\n    this.saveTutorial = this.saveTutorial.bind(this);\r\n    this.newTutorial = this.newTutorial.bind(this);\r\n    const today = new Date();\r\n    this.state = {\r\n      id: null,\r\n      name: \"\",\r\n      address: \"\", \r\n      active: true,\r\n      startDate: today.getDate() + \"-\"+ parseInt(today.getMonth()+1) +\"-\"+today.getFullYear(),\r\n\r\n      submitted: false\r\n    };\r\n  }\r\n\r\n  onChangeName(e) {\r\n    this.setState({\r\n      name: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeAddress(e) {\r\n    this.setState({\r\n      address: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeStartDate(e) {\r\n    this.setState({\r\n      startDate: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeActive(e) {\r\n    console.log(e.target.checked);\r\n    this.setState({\r\n      active: e.target.checked\r\n    });\r\n  }\r\n\r\n  saveTutorial() {\r\n    var data = {\r\n      name: this.state.name,\r\n      address: this.state.address,\r\n      startDate: this.state.startDate,\r\n      active: this.state.active\r\n    };\r\n    console.log(this.state.active);\r\n    RouteService.create(data)\r\n      .then(response => {\r\n        this.setState({\r\n          id: response.data.id,\r\n          name: response.data.name,\r\n          address: response.data.address,\r\n          active: response.data.active,\r\n          startDate: response.data.startDate,\r\n\r\n          submitted: true\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  newTutorial() {\r\n    this.today = new Date();\r\n    this.setState({\r\n      id: null,\r\n      name: \"\",\r\n      address: \"\",\r\n      startDate: this.today.getDate() + \"-\"+ parseInt(this.today.getMonth()+1) +\"-\"+this.today.getFullYear(),\r\n      active: true,\r\n\r\n      submitted: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"submit-form\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>You submitted successfully!</h4>\r\n            <button className=\"btn btn-success\" onClick={this.newTutorial}>\r\n              Add\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"name\">Route Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"name\"\r\n                required\r\n                value={this.state.name}\r\n                onChange={this.onChangeName}\r\n                name=\"name\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"address\">Address</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"address\"\r\n                required\r\n                value={this.state.address}\r\n                onChange={this.onChangeAddress}\r\n                name=\"address\"\r\n              />\r\n            </div>            \r\n\r\n            <button onClick={this.saveTutorial} className=\"btn btn-success\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import http from \"../http-common\";\r\n\r\nclass RateService {\r\n  getAll(params) {\r\n    return http.get(\"/rates\", { params });\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/rates/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/rates\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/rates/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/rates/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(\"/rates\");\r\n  }\r\n}\r\n\r\nexport default new RateService();\r\n","import React, { useState , useEffect, useMemo, useContext, createContext, useRef , useLayoutEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DataGrid from 'react-data-grid';\r\nimport NumericEditor from \"../components/editor/numericeditor.component\";\r\nimport DeliveryService from \"../services/delivery.service\";\r\nimport CustomerService from \"../services/customer.service\";\r\nimport BillService from \"../services/bill.service\";\r\nimport RateService from \"../services/rate.service\";\r\nimport PaymentService from \"../services/payment.service\";\r\nimport moment from 'moment';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nimport { CSVLink } from 'react-csv';\r\n\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nconst rootClassname = 'rootClassname';\r\nconst filterColumnClassName = 'filter-cell';\r\nconst filterContainerClassname = 'filterContainerClassname';\r\nconst filterClassname = 'filterClassname';\r\n\r\nconst FilterContext = createContext(undefined);\r\n\r\nfunction inputStopPropagation(event) {\r\n  if (['ArrowLeft', 'ArrowRight'].includes(event.key)) {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n\r\nfunction getComparator(sortColumn) {\r\n  switch (sortColumn) {\r\n    case 'name':\r\n      return (a, b) => {\r\n        return a[sortColumn].localeCompare(b[sortColumn]);\r\n      };\r\n    default:\r\n      return (a, b) => {\r\n        return a[sortColumn] - b[sortColumn];\r\n      };\r\n  }\r\n}\r\n\r\nconst CustomerCalendar = props => {\r\n\r\n  const [filters, setFilters] = useState({\r\n    name: '',\r\n    route: '',\r\n    enabled: true\r\n  });\r\n\r\n  const initialCalendar = {\r\n    currentDate: moment()\r\n  };\r\n  \r\n    const [rows, setRows] = useState([]);  \r\n\t  const [message, setMessage] = useState();\r\n\t  const [rate, setRate] = useState({});\r\n\t  const [open, setOpen] = useState(false);\r\n\t  const [confirm, setConfirm] = useState(false);\r\n    const [calendar, setCalendar] = useState(initialCalendar);\r\n    const [sortColumns, setSortColumns] = useState([]);  \r\n    \r\n    const columns = [\r\n      { key: 'id', name: 'ID' , minWidth: 60 , resizable: true , frozen: true,\r\n          headerCellClass: filterColumnClassName,\r\n          headerRenderer: (p) => (\r\n            <FilterRenderer {...p}>\r\n              {({ filters, ...rest }) => (\r\n                <input\r\n                  {...rest}\r\n                  className={filterClassname}\r\n                  value={filters.name}\r\n                  onChange={(e) =>\r\n                    setFilters({\r\n                      ...filters,\r\n                      name: e.target.value\r\n                    })\r\n                  }\r\n                  onKeyDown={inputStopPropagation}\r\n                />\r\n              )}\r\n            </FilterRenderer>\r\n          )\r\n      },\r\n      { key: 'name', name: 'Name' , width: 200, resizable: true, frozen: true },\r\n      { key: 'route', name: 'Route' , minWidth:100 , resizable: true ,\r\n          headerCellClass: filterColumnClassName,\r\n          headerRenderer: (p) => (\r\n            <FilterRenderer {...p}>\r\n              {({ filters, ...rest }) => (\r\n                <input\r\n                  {...rest}\r\n                  className={filterClassname}\r\n                  value={filters.route}\r\n                  onChange={(e) =>\r\n                    setFilters({\r\n                      ...filters,\r\n                      route: e.target.value\r\n                    })\r\n                  }\r\n                  onKeyDown={inputStopPropagation}\r\n                />\r\n              )}\r\n            </FilterRenderer>\r\n          )\r\n      },\r\n      { key: '01', name: '1' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40, resizable: true },\r\n      { key: '02', name: '2' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '03', name: '3' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '04', name: '4' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '05', name: '5' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '06', name: '6' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '07', name: '7' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '08', name: '8' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '09', name: '9' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '10', name: '10' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '11', name: '11' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '12', name: '12' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '13', name: '13' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '14', name: '14' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '15', name: '15' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '16', name: '16' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '17', name: '17' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '18', name: '18' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '19', name: '19' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '20', name: '20' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '21', name: '21' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '22', name: '22' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '23', name: '23' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '24', name: '24' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '25', name: '25' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '26', name: '26' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '27', name: '27' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '28', name: '28' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '29', name: '29' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '30', name: '30' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '31', name: '31' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: 'qty', name: 'Qty' , minWidth:40 , resizable: true },\r\n      { key: 'rate', name: 'Rate' , minWidth:40 , resizable: true },\r\n      { key: 'bill', name: 'Bill' , minWidth:60 , resizable: true },\r\n      { key: 'dues', name: 'Dues' , minWidth:40 , resizable: true },\r\n      { key: 'totalBill', name: 'Total' , minWidth:60 , resizable: true },\r\n      { key: 'prevBill', name: 'P-Bill' , minWidth:75 , resizable: true },\r\n      { key: 'paid', name: 'Paid' , minWidth:60 , resizable: true },\r\n      { key: 'currentDue', name: 'C-Due' , minWidth:60 , resizable: true },\r\n      { key: 'discount', name: 'Discount' , width:80 , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true }\r\n    ];\r\n\r\n    useEffect(() => {\r\n      var calendar={currentDate: moment(props.match.params.date,'MMM-YYYY')};\r\n      setCalendar(calendar);\r\n      var initialRows = null;\r\n      const paramCustomer = { active: true, type: \"customer\"}; \r\n\r\n      RateService.getAll(paramCustomer).then((response) => {\r\n        var rates = response.data;\r\n        var rate ={};\r\n        rates && rates.map((r, index) => {\r\n          rate = {\r\n            id: r.id,\r\n            rate: r.rate,\r\n            startDate: r.startDate,\r\n          };\r\n          });\r\n        setRate(rate);\r\n        })\r\n          .catch((e) => {\r\n            console.log(e);\r\n      });\r\n\r\n      CustomerService.getAll(paramCustomer).then((response) => {\r\n        var customers = response.data;\r\n        initialRows = new Array(customers.length);\r\n        customers.map((customer, index) => {\r\n          initialRows[index]={};\r\n          initialRows[index][\"id\"]=customer.id;\r\n          initialRows[index][\"name\"]=customer.name;\r\n          initialRows[index][\"route\"]=customer.route.name;\r\n        });\r\n        getPayment(calendar, initialRows);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\t  \r\n    }, [props.match.params.date]);\r\n\r\n    function getPayment(calendar, initialRows){\r\n      var params ={ \"month\": calendar.currentDate.format(\"MMM-YYYY\"), \"active\": true, type: \"income\"};\r\n      PaymentService.getAll(params).then(response => {\r\n        var bills = response.data;\r\n        initialRows && initialRows.map((initialRow) => {\r\n          bills && bills.map((bill) => {\r\n              if(bill.partyId == initialRow.id){\r\n                if(bill.category == 'discount'){\r\n                  initialRow[\"discount\"]=bill.payment;\r\n                  initialRow[\"iddiscount\"]=bill.id;\r\n                } else{\r\n                  if(initialRow[\"paid\"]){\r\n                    initialRow[\"paid\"]=initialRow[\"paid\"]+bill.payment;\r\n                  }else{\r\n                    initialRow[\"paid\"]=+bill.payment;\r\n                  }\r\n                }\r\n              }\r\n            });\r\n        });\r\n        billService(calendar, initialRows);\r\n        deliveryService(calendar, initialRows);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n    }\r\n\r\n    function deliveryService(calendar, initialRows){\r\n      const params ={ \"month\" : calendar.currentDate.format(\"MMM-YYYY\"), type: \"income\"};\r\n      DeliveryService.getAll(params).then((response) => {\r\n        var deliverys = response.data;\r\n        deliverys && deliverys.map((delivery) => {\r\n          for(var initialRow of initialRows){\r\n            if(initialRow.id == delivery.partyId){\r\n              initialRow[delivery.date] = delivery.quantity;\r\n              initialRow[\"id\"+delivery.date]=delivery.id;\r\n              break;\r\n            }\r\n          };\r\n        });\r\n        console.log(initialRows);\r\n        setRows(initialRows);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n    }\r\n\r\n    function billService(calendar, initialRows){\r\n      const paramsBill ={ month : calendar.currentDate.format(\"MMM-YYYY\"), active: true, type: \"income\"};\r\n      BillService.getAll(paramsBill).then((response) => {\r\n        var deliverys = response.data;\r\n        deliverys && deliverys.map((delivery) => {\r\n          for(var initialRow of initialRows){\r\n            if(initialRow.id == delivery.partyId){\r\n              if(delivery.rate){\r\n                initialRow[\"qty\"] = delivery.quantity;\r\n                initialRow[\"rate\"]=delivery.rate;\r\n                initialRow[\"bill\"]=delivery.bill;\r\n                initialRow[\"dues\"]=delivery.dues;\r\n                initialRow[\"totalBill\"]=initialRow[\"bill\"]+(initialRow[\"dues\"]? initialRow[\"dues\"] : 0);\r\n                initialRow[\"prevBill\"]=delivery.lastBillTotal;\r\n                initialRow[\"currentDue\"]=initialRow[\"prevBill\"]-(initialRow[\"paid\"]? initialRow[\"paid\"] : 0);\r\n              }\r\n              break;\r\n            }\r\n          };\r\n        });\r\n\r\n        //previous month bill and due amount\r\n\t  const paramsBillPrev ={ month :  calendar.currentDate.clone().subtract(1, 'months').format('MMM-YYYY'), active: true, type: \"income\"};\r\n\t  BillService.getAll(paramsBillPrev).then((response) => {\r\n        var deliverys = response.data;\r\n        deliverys && deliverys.map((delivery) => {\r\n          for(var initialRow of initialRows){\r\n            if(initialRow.id == delivery.partyId){\r\n              if(delivery.rate){\r\n                initialRow[\"prevBill\"]=delivery.bill+delivery.dues;\r\n                initialRow[\"prevDues\"]=delivery.dues;\r\n                initialRow[\"currentDue\"]=initialRow[\"prevBill\"]-(initialRow[\"paid\"]? initialRow[\"paid\"] : 0);\r\n              }\r\n              break;\r\n            }\r\n          };\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n    }\r\n   \r\n    function rowChange(row, col) {\r\n      constructDeliveryUpdateData(row,col);\r\n    }\r\n\r\n\tfunction handleClickOpen () {\r\n      setOpen(true);\r\n    };\r\n  \r\n    function handleClose () {\r\n\t\tsetConfirm(false);\r\n\t\tsetOpen(false);\r\n    };\r\n\t\r\n\tfunction handleConfirm () {\r\n\t\tsetConfirm(false);\r\n\t\tgenerateBillAfterCheck(calendar.currentDate.format(\"MMM-YYYY\"));\r\n\t\tsetOpen(false);\r\n\t}\r\n\r\n    function constructDeliveryUpdateData(row, col){\r\n      var columnVal = row[col.indexes][col.column.key]; \r\n      var columnId = row[col.indexes][\"id\"+col.column.key];\r\n      /* for (const [key, value] of Object.entries(row[col.indexes])) {\r\n        if(key == col.column.key){\r\n          columnVal = value;\r\n        }else if(key == (\"id\"+col.column.key)){\r\n          columnId = value;\r\n        }\r\n      } */\r\n      console.log(row[col.indexes].id+ \" - \"+columnVal + \" - \" +columnId);\r\n      saveDelivery(row[col.indexes].id, col.column.key, calendar.currentDate , columnVal, columnId, row[col.indexes]);\r\n      rows[col.indexes] = row[col.indexes];\r\n      //row gives filtered rows, so putting updated data into rows\r\n      setRows (rows.slice());\r\n    }\r\n    \r\n    function saveDelivery (cutomerId, date, month, columnVal, id, rowData) {\r\n      var data = {\r\n        id: id,\r\n        partyId: cutomerId,\r\n        date: date,\r\n        month: month.format(\"MMM-YYYY\"),\r\n        quantity: columnVal,\r\n        type: \"income\",\r\n        category:null,\r\n        active: true,\r\n        payment: null\r\n      };\r\n      if(date != \"discount\"){\r\n          if(id){\r\n              DeliveryService.update(id, data)\r\n                .then(response => {\r\n                  console.log(response.data);\r\n                })\r\n                .catch(e => {\r\n                  console.log(e);\r\n                });\r\n          } else {\r\n            DeliveryService.create(data)\r\n                .then(response => {\r\n                  var idName = \"id\"+date;\r\n                  rowData[idName]=response.data.id;\r\n                  console.log(rowData);\r\n                })\r\n                .catch(e => {\r\n                  console.log(e);\r\n                });\r\n            }\r\n      }else{\r\n        data.category=\"discount\";\r\n        data.payment=columnVal;\r\n        data.date=moment().format(\"DD\");\r\n        if(id){\r\n          PaymentService.update(id, data)\r\n            .then(response => {\r\n              console.log(response.data);\r\n            })\r\n            .catch(e => {\r\n              console.log(e);\r\n            });\r\n        } else {\r\n          PaymentService.create(data)\r\n            .then(response => {\r\n              var idName = \"id\"+date;\r\n              rowData[idName]=response.data.id;\r\n              console.log(rowData);\r\n            })\r\n            .catch(e => {\r\n              console.log(e);\r\n            });\r\n        }\r\n      }\r\n    }\r\n\r\n    function generateBill(month){\r\n\t\tBillService.validateBillGeneration(month,\"income\").then((response) => {\r\n\t\t\tconsole.log(response.data);\r\n\t\t\tvar bill = response.data;\r\n\t\t\t//bill object has bill, means the bill was generated\r\n\t\t\tif(bill.rate){\r\n\t\t\t\tsetConfirm(true);\r\n\t\t\t\tsetMessage(\"Bill already generated for the month \"+month+\". Do you want to continue? Please confirm to proceed.\");\r\n\t\t\t\thandleClickOpen();\r\n\t\t\t}else{\r\n\t\t\t\tgenerateBillAfterCheck(month);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\tconsole.log(e);\r\n\t\t\t//no bill exist for the month, so generate bill without prompting user\r\n\t\t\tif(e.response.status == 404){\r\n\t\t\t\tgenerateBillAfterCheck(month);\r\n\t\t\t}\r\n\t\t});\r\n    }\r\n\t\r\n\tfunction generateBillAfterCheck(month){\r\n\t\tconst paramsBill ={ \"month\" : month, \"type\": \"income\"};\r\n\t\tBillService.generateBills(paramsBill).then((response) => {\r\n        var deliverys = response.data;\r\n        deliverys && deliverys.map((delivery) => {\r\n          for(var initialRow of rows){\r\n            if(initialRow.id == delivery.partyId){\r\n              initialRow[\"qty\"] = delivery.quantity;\r\n              initialRow[\"rate\"]=delivery.rate;\r\n              initialRow[\"bill\"]=delivery.bill;\r\n              initialRow[\"dues\"]=delivery.dues;\r\n              initialRow[\"totalBill\"]=initialRow[\"bill\"]+(initialRow[\"dues\"]? initialRow[\"dues\"] : 0);\r\n              break;\r\n            }\r\n          };\r\n        });\r\n\t\tsetMessage(\"Bill generated for the month \"+month+\".\");\r\n\t\thandleClickOpen();\r\n\t\tconsole.log(rows);\r\n\t\tsetRows(rows);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\t}\r\n\t\r\n\tfunction onChangeRate(e){\r\n\t\trate.rate = e.target.value;\r\n\t\tsetRate(rate);\r\n\t}\r\n  function sendMail(){\r\n    \r\n  }\r\n\tfunction saveRate(){\r\n      var data = {\r\n        id: rate.id,\r\n        rate: rate.rate,\r\n\t\t    active: false,\r\n\t    \tstartDate: rate.startDate,\r\n\t    \tendDate: calendar.currentDate.format(\"DD-MMM-YYYY\")\r\n      };\r\n      if(rate.id){\r\n          RateService.update(data.id, data)\r\n            .then(response => {\r\n              console.log(response.data);\r\n            })\r\n            .catch(e => {\r\n              console.log(e);\r\n            });\r\n      }\r\n\t  var newRate = {\r\n        rate: rate.rate,\r\n\t\t    active: true,\r\n\t\t    startDate: calendar.currentDate.format(\"DD-MMM-YYYY\")\r\n      };\r\n\t  RateService.create(newRate)\r\n\t\t.then(response => {\r\n\t\t   setRate(response.data);\r\n\t\tsetMessage(\"New rate saved.\");\r\n\t\thandleClickOpen();\r\n\t\tconsole.log(rate);\r\n\t\t})\r\n\t\t.catch(e => {\r\n\t\t  console.log(e);\r\n\t\t});\r\n\t}\r\n\r\n  const filteredRows = useMemo( () => {\r\n    function filter(){\r\n      var filteredRows = null;\r\n       filteredRows = rows.filter((r) => {\r\n        return (\r\n          (filters.name ? r.name.includes(filters.name) : true)\r\n          && (filters.route ? r.route.includes(filters.route) : true)\r\n        );\r\n      })\r\n      if (sortColumns.length === 0) return filteredRows;\r\n      filteredRows = [...filteredRows].sort((a, b) => {\r\n        for (const sort of sortColumns) {\r\n          const comparator = getComparator(sort.columnKey);\r\n          const compResult = comparator(a, b);\r\n          if (compResult !== 0) {\r\n            return sort.direction === 'ASC' ? compResult : -compResult;\r\n          }\r\n        }\r\n        return 0;\r\n      })\r\n      return filteredRows;\r\n    }\r\n    return filter();\r\n  }, [rows, filters, sortColumns]);\r\n\r\n    return (\r\n      <div >\r\n        {calendar ? (\r\n        <div >\r\n          <Grid container spacing={{ xs: 1}} >\r\n          <Grid item xs={6} sm={3}> \r\n              <Link\r\n                to={\"/gui/customerCalendar/\"+calendar.currentDate.clone().subtract(1, 'months').format('MMM-YYYY')}\r\n                className=\"badge badge-warning\">\r\n                Prev\r\n              </Link>\r\n              {calendar.currentDate.format(\"DD-MMM-YYYY\")}\r\n              <Link\r\n                to={\"/gui/customerCalendar/\"+calendar.currentDate.clone().add(1, 'months').format('MMM-YYYY')}\r\n                className=\"badge badge-warning\">\r\n                Next\r\n              </Link>\r\n          </Grid>\r\n          <Grid item xs={6} sm={3}> \r\n              <Link\r\n                onClick={ () => generateBill(calendar.currentDate.format(\"MMM-YYYY\"))}\r\n                className=\"badge\">\r\n                 Generate Bill Month - {calendar.currentDate.format(\"MMM-YYYY\")}\r\n              </Link>\r\n               \r\n          </Grid> \r\n\t\t  <Grid item xs={6} sm={3}> \r\n\t\t\t<input\r\n                type=\"number\"\r\n                id=\"rate\"\r\n                required\r\n                defaultValue={rate.rate}\r\n                onChange={onChangeRate}\r\n                name=\"rate\"\r\n\t\t\t\tstyle={{ width:60, height:20 }}\r\n              />\r\n              <Link\r\n                onClick={saveRate}\r\n                className=\"badge\">\r\n                 Set Rate\r\n              </Link>\r\n\t\t\t  \r\n          </Grid> \r\n          <Grid item xs={3} sm={2}> \r\n              <Link\r\n                to={\"/gui/bills/\"+calendar.currentDate.format('MMM-YYYY')}\r\n                className=\"badge\">\r\n                 Print - {calendar.currentDate.format(\"MMM-YYYY\")}\r\n              </Link>\r\n          </Grid> \r\n\t\t  <Grid item xs={3} sm={1}>\r\n\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t<Button variant=\"warning\" className=\"badge\">\r\n\t\t\t\t\t\t\t\t<CSVLink data={filteredRows} filename={'income.txt'}>Export</CSVLink>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Grid> \r\n        </Grid>\r\n        </div>     \r\n         ) : (\r\n          <div>\r\n            <br />\r\n            <p>Please click on a Customer...</p>\r\n          </div>\r\n        )}\r\n        <div className=\"rootClassname\">\r\n          <FilterContext.Provider value={filters}>\r\n            <DataGrid columns={columns} onRowsChange={rowChange} \r\n             defaultColumnOptions={{\r\n              sortable: true,\r\n              resizable: true\r\n            }}\r\n              className={filters.enabled ? filterContainerClassname : undefined}\r\n              rows={filteredRows}\r\n              sortColumns={sortColumns}\r\n              onSortColumnsChange={setSortColumns}\r\n              headerRowHeight={filters.enabled ? 50 : undefined}\r\n              />\r\n            </FilterContext.Provider>\r\n          </div>\r\n\t\t\r\n\t\t\r\n\t\t<Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\">\r\n          <DialogTitle id=\"alert-dialog-title\">\r\n            {\"Bills\"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n\t\t\t{message}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n\t\t  {confirm ? (\r\n\t\t\t<Button onClick={handleConfirm}>Confirm</Button>\r\n\t\t  ) : \"\"}\r\n            <Button onClick={handleClose}>Close</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default CustomerCalendar;\r\n\r\n\r\n  function FilterRenderer({isCellSelected,column,children}) {\r\n    const filters = useContext(FilterContext);\r\n    const { ref, tabIndex } = useFocusRef(isCellSelected);\r\n  \r\n    return (\r\n      <>\r\n        <div>{column.name}</div>\r\n        {filters.enabled && <div>{children({ ref, tabIndex, filters })}</div>}\r\n      </>\r\n    );\r\n  }\r\n  \r\n  export function useFocusRef(isSelected) {\r\n    const ref = useRef(null);\r\n  \r\n    useLayoutEffect(() => {\r\n      if (!isSelected) return;\r\n      ref.current && ref.current.focus({ preventScroll: true });\r\n    }, [isSelected]);\r\n  \r\n  \r\n    return {\r\n      ref,\r\n      tabIndex: isSelected ? 0 : -1\r\n    };\r\n  }","import React, { useState , useEffect, useMemo, useContext, createContext, useRef , useLayoutEffect } from \"react\";\r\nimport DataGrid,  {HeaderRendererProps} from 'react-data-grid';\r\n\r\nimport NumericEditor from \"../components/editor/numericeditor.component\";\r\nimport DeliveryService from \"../services/delivery.service\";\r\nimport CustomerService from \"../services/customer.service\";\r\nimport BillService from \"../services/bill.service\";\r\nimport PaymentService from \"../services/payment.service\";\r\nimport moment from 'moment';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nimport { CSVLink } from 'react-csv';\r\nimport Button from '@mui/material/Button';\r\n\r\nconst rootClassname = 'rootClassname';\r\nconst filterColumnClassName = 'filter-cell';\r\nconst filterContainerClassname = 'filterContainerClassname';\r\nconst filterClassname = 'filterClassname';\r\n\r\nconst FilterContext = createContext(undefined);\r\n\r\nfunction inputStopPropagation(event) {\r\n  if (['ArrowLeft', 'ArrowRight'].includes(event.key)) {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n\r\nfunction getComparator(sortColumn) {\r\n  switch (sortColumn) {\r\n    case 'name':\r\n      return (a, b) => {\r\n        return a[sortColumn].localeCompare(b[sortColumn]);\r\n      };\r\n    default:\r\n      return (a, b) => {\r\n        return a[sortColumn] - b[sortColumn];\r\n      };\r\n  }\r\n}\r\n\r\nconst CustomerDaily = props => {\r\n\r\n  const [filters, setFilters] = useState({\r\n    name: '',\r\n    route: '',\r\n    enabled: true\r\n  });\r\n\r\n  const initialCalendar = {\r\n    currentDate: moment()\r\n  };\r\n  \r\n    const [rows, setRows] = useState([]);  \r\n    const [calendar, setCalendar] = useState(initialCalendar);\r\n    const [sortColumns, setSortColumns] = useState([]);  \r\n\r\n\r\n    const columns = [\r\n      { key: 'id', name: 'ID' , minWidth: 40 , resizable: true ,\r\n      headerCellClass: filterColumnClassName,\r\n      headerRenderer: (p) => (\r\n        <FilterRenderer {...p}>\r\n          {({ filters, ...rest }) => (\r\n            <input\r\n              {...rest}\r\n              className={filterClassname}\r\n              value={filters.name}\r\n              onChange={(e) =>\r\n                setFilters({\r\n                  ...filters,\r\n                  name: e.target.value\r\n                })\r\n              }\r\n              onKeyDown={inputStopPropagation}\r\n            />\r\n          )}\r\n        </FilterRenderer>\r\n      )\r\n      },\r\n      { key: 'name', name: 'Name' , width: 200, resizable: true},\r\n      { key: 'today', name: 'Today Quantity' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:80, resizable: true },\r\n      { key: 'dailyQuantity', name: 'Daily Quantity' , minWidth:80 , resizable: true },\r\n      { key: 'route', name: 'Route' , minWidth:100 , resizable: true ,\r\n          headerCellClass: filterColumnClassName,\r\n          headerRenderer: (p) => (\r\n            <FilterRenderer {...p}>\r\n              {({ filters, ...rest }) => (\r\n                <input\r\n                  {...rest}\r\n                  className={filterClassname}\r\n                  value={filters.route}\r\n                  onChange={(e) =>\r\n                    setFilters({\r\n                      ...filters,\r\n                      route: e.target.value\r\n                    })\r\n                  }\r\n                  onKeyDown={inputStopPropagation}\r\n                />\r\n              )}\r\n            </FilterRenderer>\r\n          )\r\n      },\r\n      { key: 'qty', name: 'Qty' , minWidth:40 , resizable: true },\r\n      { key: 'rate', name: 'Rate' , minWidth:40 , resizable: true },\r\n      { key: 'bill', name: 'Bill' , minWidth:40 , resizable: true },\r\n      { key: 'dues', name: 'Dues' , minWidth:40 , resizable: true },\r\n      { key: 'totalBill', name: 'Total' , minWidth:60 , resizable: true },\r\n      { key: 'prevBill', name: 'P-Bill' , minWidth:75 , resizable: true },\r\n      { key: 'prevDues', name: 'P-Dues' , minWidth:70 , resizable: true },\r\n      { key: 'paid', name: 'Paid' , minWidth:60 , resizable: true }\r\n    ];\r\n    \r\n    \r\n    useEffect(() => {\r\n      var calendar={currentDate: moment(props.match.params.date,'DD-MMM-YYYY')};\r\n      setCalendar(calendar);\r\n      var initialRows = null;\r\n      const paramCustomer = { active: true, type: \"customer\"};\r\n\r\n      CustomerService.getAll(paramCustomer).then((response) => {\r\n        var customers = response.data;\r\n        initialRows = new Array(customers.length);\r\n        customers.map((customer, index) => {\r\n          initialRows[index]={};\r\n          initialRows[index][\"id\"]=customer.id;\r\n          initialRows[index][\"name\"]=customer.name;\r\n          initialRows[index][\"dailyQuantity\"]=customer.defaultQuantity;\r\n          initialRows[index][\"route\"]=customer.route.name;\r\n        });\r\n        getPayment(calendar, initialRows);\r\n        deliveryService(calendar, initialRows);\r\n        billService(calendar, initialRows);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\t  \r\n    }, [props.match.params.date]);\r\n\r\n    function deliveryService(calendar, initialRows){\r\n      const params ={ \"date\": calendar.currentDate.format(\"DD\"), \r\n                      \"month\" : calendar.currentDate.format(\"MMM-YYYY\"), type: \"income\"};\r\n      DeliveryService.getAll(params).then((response) => {\r\n        var deliverys = response.data;\r\n        deliverys && deliverys.map((delivery) => {\r\n          for(var initialRow of initialRows){\r\n            if(initialRow.id == delivery.partyId){\r\n              initialRow[\"today\"] = delivery.quantity;\r\n              initialRow[\"idtoday\"]=delivery.id;\r\n              break;\r\n            }\r\n          };\r\n        });\r\n        console.log(initialRows);\r\n        setRows(initialRows);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n    }\r\n\r\n    function billService(calendar, initialRows){\r\n      const paramsBill ={ month : calendar.currentDate.format(\"MMM-YYYY\"), active: true, type: \"income\"};\r\n      BillService.getAll(paramsBill).then((response) => {\r\n        var deliverys = response.data;\r\n        deliverys && deliverys.map((delivery) => {\r\n          for(var initialRow of initialRows){\r\n            if(initialRow.id == delivery.partyId){\r\n              if(delivery.rate){\r\n                initialRow[\"qty\"] = delivery.quantity;\r\n                initialRow[\"rate\"]=delivery.rate;\r\n                initialRow[\"bill\"]=delivery.bill;\r\n                initialRow[\"dues\"]=delivery.dues;\r\n                initialRow[\"totalBill\"]=initialRow[\"bill\"]+(initialRow[\"dues\"]? initialRow[\"dues\"] : 0);\r\n              }\r\n              break;\r\n            }\r\n          };\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\t  \r\n      //previous month bill and due amount\r\n\t  const paramsBillPrev ={ month :  calendar.currentDate.clone().subtract(1, 'months').format('MMM-YYYY'), active: true, type: \"income\"};\r\n\t  BillService.getAll(paramsBillPrev).then((response) => {\r\n        var deliverys = response.data;\r\n        deliverys && deliverys.map((delivery) => {\r\n          for(var initialRow of initialRows){\r\n            if(initialRow.id == delivery.partyId){\r\n              if(delivery.rate){\r\n                initialRow[\"prevBill\"]=delivery.bill;\r\n                initialRow[\"prevDues\"]=delivery.dues;\r\n              }\r\n              break;\r\n            }\r\n          };\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n    }\r\n\r\n    function getPayment(calendar, initialRows){\r\n      var params ={ \"month\": calendar.currentDate.format(\"MMM-YYYY\"), \"active\": true, type: \"income\"};\r\n      PaymentService.getAll(params).then(response => {\r\n        var bills = response.data;\r\n        initialRows && initialRows.map((initialRow) => {\r\n          bills && bills.map((bill) => {\r\n              if(bill.partyId == initialRow.id){\r\n                if(bill.category == 'discount'){\r\n                  initialRow[\"discount\"]=bill.payment;\r\n                  initialRow[\"iddiscount\"]=bill.id;\r\n                } else{\r\n                  if(initialRow[\"paid\"]){\r\n                    initialRow[\"paid\"]=initialRow[\"paid\"]+bill.payment;\r\n                  }else{\r\n                    initialRow[\"paid\"]=+bill.payment;\r\n                  }\r\n                }\r\n              }\r\n            });\r\n        });\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n    }\r\n\r\n    function rowChange(row, col) {\r\n      constructDeliveryUpdateData(row,col);\r\n    }\r\n\r\n    function constructDeliveryUpdateData(row, col){\r\n      var columnVal = row[col.indexes][col.column.key]; \r\n      var columnId = row[col.indexes][\"idtoday\"];\r\n      console.log(row[col.indexes].id+ \" - \"+columnVal + \" - \" +columnId+\" - \" + col.column.key);\r\n      saveDelivery(row[col.indexes].id, calendar.currentDate, calendar.currentDate , columnVal, columnId, row[col.indexes]);\r\n      rows[col.indexes] = row[col.indexes];\r\n      //row gives filtered rows, so putting updated data into rows\r\n      setRows (rows.slice());\r\n    }\r\n\r\n    function saveDelivery (cutomerId, date, month, quantity, id, rowData) {\r\n      var data = {\r\n        id: id,\r\n        partyId: cutomerId,\r\n        date: date.format(\"DD\"),\r\n        month: month.format(\"MMM-YYYY\"),\r\n        quantity: quantity,\r\n\t\t    type: \"income\"\r\n      };\r\n      if(id){\r\n          DeliveryService.update(id, data)\r\n            .then(response => {\r\n              console.log(response.data);\r\n            })\r\n            .catch(e => {\r\n              console.log(e);\r\n            });\r\n      } else {\r\n        DeliveryService.create(data)\r\n            .then(response => {\r\n              rowData[\"idtoday\"]=response.data.id;\r\n              console.log(rowData);\r\n            })\r\n            .catch(e => {\r\n              console.log(e);\r\n            });\r\n        }\r\n      }\r\n\r\n  const filteredRows = useMemo( () => {\r\n    function filter(){\r\n      var filteredRows = null;\r\n       filteredRows = rows.filter((r) => {\r\n        return (\r\n          (filters.name ? r.name.includes(filters.name) : true)\r\n          && (filters.route ? r.route.includes(filters.route) : true)\r\n        );\r\n      })\r\n      if (sortColumns.length === 0) return filteredRows;\r\n      filteredRows = [...filteredRows].sort((a, b) => {\r\n        for (const sort of sortColumns) {\r\n          const comparator = getComparator(sort.columnKey);\r\n          const compResult = comparator(a, b);\r\n          if (compResult !== 0) {\r\n            return sort.direction === 'ASC' ? compResult : -compResult;\r\n          }\r\n        }\r\n        return 0;\r\n      })\r\n      return filteredRows;\r\n    }\r\n    return filter();\r\n  }, [rows, filters, sortColumns]);\r\n\r\n    return (\r\n      <div >\r\n        {calendar ? (\r\n        <div >\r\n          <Grid container spacing={{ xs: 1}} >\r\n            <Grid item xs={3} sm={1}>\r\n                &nbsp;\r\n                <Button variant=\"warning\" className=\"badge\">\r\n                      <CSVLink data={filteredRows} filename={'dailyIncome.txt'}>Export</CSVLink>\r\n                </Button>\r\n              </Grid> \r\n          </Grid>\r\n        </div>     \r\n         ) : (\r\n          <div>\r\n            <br />\r\n            <p>Please click on a Customer...</p>\r\n          </div>\r\n        )}\r\n        <div className=\"rootClassname\">\r\n          <FilterContext.Provider value={filters}>\r\n            <DataGrid columns={columns} onRowsChange={rowChange} \r\n             defaultColumnOptions={{\r\n              sortable: true,\r\n              resizable: true\r\n            }}\r\n              className={filters.enabled ? filterContainerClassname : undefined}\r\n              rows={filteredRows}\r\n              sortColumns={sortColumns}\r\n              onSortColumnsChange={setSortColumns}\r\n              headerRowHeight={filters.enabled ? 50 : undefined}\r\n              />\r\n            </FilterContext.Provider>\r\n          </div>\r\n      </div>\r\n    );\r\n  };\r\nexport default CustomerDaily;\r\n\r\n\r\nfunction FilterRenderer({isCellSelected,column,children}) {\r\n  const filters = useContext(FilterContext);\r\n  const { ref, tabIndex } = useFocusRef(isCellSelected);\r\n\r\n  return (\r\n    <>\r\n      <div>{column.name}</div>\r\n      {filters.enabled && <div>{children({ ref, tabIndex, filters })}</div>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport function useFocusRef(isSelected) {\r\n  const ref = useRef(null);\r\n\r\n  useLayoutEffect(() => {\r\n    if (!isSelected) return;\r\n    ref.current && ref.current.focus({ preventScroll: true });\r\n  }, [isSelected]);\r\n\r\n\r\n  return {\r\n    ref,\r\n    tabIndex: isSelected ? 0 : -1\r\n  };\r\n}","import React, { useState , useEffect, useMemo, useContext, createContext, useRef , useLayoutEffect } from \"react\";\r\nimport DataGrid,  {HeaderRendererProps} from 'react-data-grid';\r\n\r\nimport NumericEditor from \"./editor/numericeditor.component\";\r\nimport DeliveryService from \"../services/delivery.service\";\r\nimport CustomerService from \"../services/customer.service\";\r\nimport BillService from \"../services/bill.service\";\r\nimport PaymentService from \"../services/payment.service\";\r\nimport moment from 'moment';\r\nimport Grid from '@mui/material/Grid';\r\nimport { Link } from \"react-router-dom\";\r\nimport { CSVLink } from 'react-csv';\r\n\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nconst rootClassname = 'rootClassname';\r\nconst filterColumnClassName = 'filter-cell';\r\nconst filterContainerClassname = 'filterContainerClassname';\r\nconst filterClassname = 'filterClassname';\r\n\r\nconst FilterContext = createContext(undefined);\r\n\r\nfunction inputStopPropagation(event) {\r\n  if (['ArrowLeft', 'ArrowRight'].includes(event.key)) {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n\r\nfunction getComparator(sortColumn) {\r\n  switch (sortColumn) {\r\n    case 'name':\r\n      return (a, b) => {\r\n        return a[sortColumn].localeCompare(b[sortColumn]);\r\n      };\r\n    default:\r\n      return (a, b) => {\r\n        return a[sortColumn] - b[sortColumn];\r\n      };\r\n  }\r\n}\r\n\r\nconst CollectionBillsList = props => {\r\n\r\n  const [filters, setFilters] = useState({\r\n    enabled: true\r\n  });\r\n\r\n  const initialCalendar = {\r\n    currentDate: moment()\r\n  };\r\n  \r\n    const [rows, setRows] = useState([]);  \r\n    const [calendar, setCalendar] = useState(initialCalendar);\r\n    const [sortColumns, setSortColumns] = useState([]);  \r\n    const [from, setFrom] = useState(); \r\n    const [to, setTo] = useState();   \r\n    const [confirm, setConfirm] = useState(false);\r\n    const [open, setOpen] = useState(false); \r\n    const [message, setMessage] = useState();\r\n\r\n    const columns = [\r\n\r\n      { key: 'print', name: 'PRINT' , width: 70, resizable: true,\r\n      formatter(props) {\r\n        return <>\r\n          <Link disable=\"true\"\r\n          to={ (\"/gui/collectionBills/\"+moment(props.row.from,'YYYY-MMM-DD').format(\"YYYY-MM-DD\")+\"/\"+moment(props.row.to,'YYYY-MMM-DD').format(\"YYYY-MM-DD\")+\"/\"+(props.row.partyId)) }\r\n          className=\"badge badge-warning\">\r\n          Print\r\n          </Link>\r\n        </>;\r\n      }\r\n    },\r\n\r\n      { key: 'id', name: 'ID' ,width:50, resizable: true ,\r\n      headerCellClass: filterColumnClassName,\r\n      headerRenderer: (p) => (\r\n        <FilterRenderer {...p}>\r\n          {({ filters, ...rest }) => (\r\n            <input\r\n              {...rest}\r\n              className={filterClassname}\r\n              value={filters.name}\r\n              onChange={(e) =>\r\n                setFilters({\r\n                  ...filters,\r\n                  name: e.target.value\r\n                })\r\n              }\r\n              onKeyDown={inputStopPropagation}\r\n            />\r\n          )}\r\n        </FilterRenderer>\r\n      )\r\n      },\r\n      { key: 'name', name: 'Name' ,  resizable: true},\r\n      { key: 'from', name: 'FROM' ,  resizable: true},\r\n      { key: 'to', name: 'TO' ,  resizable: true},\r\n      { key: 'qty', name: 'Quantity' , resizable: true},\r\n      { key: 'bill', name: 'Total' ,   resizable: true },\r\n    ];\r\n    \r\n    \r\n    useEffect(() => {\r\n      getBills();\r\n    }, [props.match.params.date]);\r\n\r\n\r\n\r\n    function getBills(){\r\n      var calendar={currentDate: moment(props.match.params.date,'DD-MMM-YYYY')};\r\n      setCalendar(calendar);\r\n      var initialRows = null;\r\n     const paramsBill={active:true, type:\"expense\", category: \"collection\"};\r\n     BillService.getAll(paramsBill).then((response) => {\r\n       var deliverys = response.data;\r\n       console.log(deliverys);\r\n       initialRows=new Array (deliverys.length);\r\n        deliverys && deliverys.map((bill, index)=>{\r\n          initialRows[index]={};\r\n          initialRows[index][\"id\"]=bill.id;\r\n          initialRows[index][\"name\"]=bill.customer.name;\r\n            initialRows[index][\"qty\"]=bill.quantity;\r\n          initialRows[index][\"rate\"]=bill.rate;\r\n          initialRows[index][\"from\"]=bill.from;\r\n          initialRows[index][\"to\"]=bill.to;\r\n          initialRows[index][\"bill\"]=bill.bill;\r\n          initialRows[index][\"partyId\"]=bill.partyId;\r\n        });\r\n        billService(calendar, initialRows);\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });    \r\n      \r\n    }\r\n\r\n    function onChangeFrom(e){\r\n      setFrom(e.target.value);\r\n    }\r\n\r\n    function onChangeTo(e){\r\n      setTo(e.target.value);\r\n    }\r\n\r\n    function handleClickOpen () {\r\n      setOpen(true);\r\n    }\r\n  \r\n    function handleClose () {\r\n      setConfirm(false);\r\n      setOpen(false);\r\n    };\r\n\t\r\n      function handleConfirm () {\r\n        setConfirm(false);\r\n        generateBillsCollectionAfterCheck(calendar.currentDate.format(\"MMM-YYYY\"));\r\n        setOpen(false);\r\n      }\r\n\r\n\r\n\r\n    function deliveryService(calendar, initialRows){\r\n      const params ={ \"date\": calendar.currentDate.format(\"DD\"),  type: \"expence\"};\r\n      DeliveryService.getAll(params).then((response) => {\r\n        var deliverys = response.data;\r\n        deliverys && deliverys.map((delivery) => {\r\n          for(var initialRow of initialRows){\r\n            if(initialRow.id == delivery.partyId){\r\n              initialRow[\"today\"] = delivery.quantity;\r\n              initialRow[\"idtoday\"]=delivery.id;\r\n              break;\r\n            }\r\n          };\r\n        });\r\n        console.log(initialRows);\r\n        setRows(initialRows);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n    }\r\n\r\n    function billService(calendar, initialRows){\r\n      const paramsBill ={ active: true, type: \"expense\", category: \"collection\"};\r\n      BillService.getAll(paramsBill).then((response) => {\r\n        var deliverys = response.data;\r\n        console.log(deliverys);\r\n        deliverys && deliverys.map((delivery) => {\r\n          for(var initialRow of initialRows){\r\n            if(initialRow.id == delivery.partyId){\r\n              if(delivery.from){\r\n                initialRow[\"qty\"] = delivery.quantity;\r\n                initialRow[\"rate\"]=delivery.rate;\r\n                initialRow[\"bill\"]=delivery.bill;\r\n                initialRow[\"from\"]=delivery.from;\r\n                initialRow[\"to\"]=delivery.to;\r\n              }\r\n              break;\r\n            }\r\n          };\r\n        });\r\n        deliveryService(calendar, initialRows);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });    \r\n    }\r\n\r\n    function rowChange(row, col) {\r\n      constructDeliveryUpdateData(row,col);\r\n    }\r\n\r\n     function generateBillCollection(){\r\n        const paramsFrom ={ \"type\": \"expense\",\"from\":from, \"to\":to };\r\n        BillService.validateCollectionBillsGeneration(\"expense\",paramsFrom).then((response) => {\r\n          console.log(response.data);\r\n          var bill = response.data;\r\n          //bill object has bill, means the bill was generated\r\n          if(bill.from){\r\n            setConfirm(true);\r\n            setMessage(\"Bill already generated for the period. Do you want to continue? Please confirm to proceed.\");\r\n            handleClickOpen();\r\n          }else{\r\n            generateBillsCollectionAfterCheck();\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n          //no bill exist for the month, so generate bill without prompting user\r\n          if(e.response.status == 404){\r\n            generateBillsCollectionAfterCheck();\r\n          }\r\n        });\r\n        }\r\n      \r\n      function generateBillsCollectionAfterCheck(){\r\n        const paramsBill ={  \"type\": \"expense\",\"from\":from, \"to\":to , \"category\":\"collection\"};\r\n        BillService.generateBillsCollection(paramsBill).then((response) => {\r\n            var deliverys = response.data;\r\n            deliverys && deliverys.map((delivery) => {\r\n              for(var initialRow of rows){\r\n                if(initialRow.id == delivery.partyId){\r\n                  initialRow[\"qty\"] = delivery.quantity;\r\n                  initialRow[\"rate\"]=delivery.rate;\r\n                  initialRow[\"bill\"]=delivery.bill;\r\n                  break;\r\n                }\r\n              };\r\n            });\r\n            //call getBills\r\n             getBills();\r\n            setMessage(\"Bill generated for the period .\");\r\n            handleClickOpen();\r\n            console.log(rows);\r\n            setRows(rows);\r\n          })\r\n          .catch((e) => {\r\n            if(e.response.status == 404){\r\n              setMessage(\"Bill could not be generated for the period as there are overlapping bills.\");\r\n              setConfirm(false);\r\n              handleClickOpen();\r\n            }\r\n          });\r\n      }\r\n      \r\n    function constructDeliveryUpdateData(row, col){\r\n      var columnVal = row[col.indexes][col.column.key]; \r\n      var columnId = row[col.indexes][\"idtoday\"];\r\n      console.log(row[col.indexes].id+ \" - \"+columnVal + \" - \" +columnId+\" - \" + col.column.key);\r\n      saveDelivery(row[col.indexes].id, calendar.currentDate, calendar.currentDate , columnVal, columnId, row[col.indexes]);\r\n      rows[col.indexes] = row[col.indexes];\r\n      //row gives filtered rows, so putting updated data into rows\r\n      setRows (rows.slice());\r\n    }\r\n\r\n    function saveDelivery (cutomerId, date, month, quantity, id, rowData) {\r\n      var data = {\r\n        id: id,\r\n        partyId: cutomerId,\r\n        date: date.format(\"DD\"),\r\n        month: month.format(\"MMM-YYYY\"),\r\n        quantity: quantity,\r\n\t\t    type: \"expence\"\r\n      };\r\n      if(id){\r\n          DeliveryService.update(id, data)\r\n            .then(response => {\r\n              console.log(response.data);\r\n            })\r\n            .catch(e => {\r\n              console.log(e);\r\n            });\r\n      } else {\r\n        DeliveryService.create(data)\r\n            .then(response => {\r\n              rowData[\"idtoday\"]=response.data.id;\r\n              console.log(rowData);\r\n            })\r\n            .catch(e => {\r\n              console.log(e);\r\n            });\r\n        }\r\n      }\r\n\r\n  const filteredRows = useMemo( () => {\r\n    function filter(){\r\n      var filteredRows = null;\r\n       filteredRows = rows.filter((r) => {\r\n        return (\r\n          (filters.name ? r.name.includes(filters.name) : true)\r\n        );\r\n      })\r\n      if (sortColumns.length === 0) return filteredRows;\r\n      filteredRows = [...filteredRows].sort((a, b) => {\r\n        for (const sort of sortColumns) {\r\n          const comparator = getComparator(sort.columnKey);\r\n          const compResult = comparator(a, b);\r\n          if (compResult !== 0) {\r\n            return sort.direction === 'ASC' ? compResult : -compResult;\r\n          }\r\n        }\r\n        return 0;\r\n      })\r\n      return filteredRows;\r\n    }\r\n    return filter();\r\n  }, [rows, filters, sortColumns]);\r\n\r\n    return (\r\n      <div >\r\n        {calendar ? (\r\n        <div >\r\n          <Grid container spacing={{ xs: 1}} >\r\n            <Grid item xs={3} sm={1}>\r\n                &nbsp;\r\n                <Button variant=\"warning\" className=\"badge\">\r\n                      <CSVLink data={filteredRows} filename={'dailyIncome.txt'}>Export</CSVLink>\r\n                </Button>\r\n              </Grid> \r\n          <Grid item xs={3} sm={2}> \r\n              <Link\r\n                to={(from && to) ? (\"/gui/collectionBills/\"+from+\"/\"+to) : \"\"}\r\n                hidden={(from && to) ? false : true}\r\n                className=\"badge\">\r\n                 Print Collection\r\n              </Link>\r\n          </Grid> \r\n\r\n          <Grid item xs={6} sm={3}> \r\n              <Link\r\n                onClick={ (from && to) ? (() => generateBillCollection(calendar.currentDate.format(\"DD-MM-YYYY\"))): \"\"}\r\n                className=\"badge\">\r\n                 Generate Collection Bill\r\n              </Link>    \r\n          </Grid> \r\n          <Grid item xs={6} sm={6}> \r\n\t\t\t      <input\r\n                type=\"date\"\r\n                id=\"from\"\r\n                required\r\n                onChange={onChangeFrom}\r\n                name=\"from\"\r\n\t\t\t\t        style={{ width:150, height:20 }}\r\n                placeholder=\"From\"\r\n              />\r\n              <input\r\n                type=\"date\"\r\n                id=\"to\"\r\n                required\r\n                onChange={onChangeTo}\r\n                name=\"to\"\r\n\t\t\t\t        style={{ width:150, height:20 }}\r\n                placeholder=\"To\"\r\n              />\r\n\t\t\t  \r\n          </Grid> \r\n          </Grid>\r\n        </div>     \r\n         ) : (\r\n          <div>\r\n            <br />\r\n            <p>Please click on a Customer...</p>\r\n          </div>\r\n        )}\r\n        <div className=\"rootClassname\">\r\n          <FilterContext.Provider value={filters}>\r\n            <DataGrid columns={columns} onRowsChange={rowChange} \r\n             defaultColumnOptions={{\r\n              sortable: true,\r\n              resizable: true\r\n            }}\r\n              className={filters.enabled ? filterContainerClassname : undefined}\r\n              rows={filteredRows}\r\n              sortColumns={sortColumns}\r\n              onSortColumnsChange={setSortColumns}\r\n              headerRowHeight={filters.enabled ? 50 : undefined}\r\n              />\r\n            </FilterContext.Provider>\r\n          </div>\r\n\r\n          <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\">\r\n              <DialogTitle id=\"alert-dialog-title\">\r\n                {\"Bills\"}\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                {message}\r\n                </DialogContentText>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                  {confirm ? (\r\n                    <Button onClick={handleConfirm}>Confirm</Button>\r\n                    ) : \"\"}\r\n                <Button onClick={handleClose}>Close</Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n      </div>\r\n    );\r\n  };\r\nexport default CollectionBillsList;\r\n\r\n\r\nfunction FilterRenderer({isCellSelected,column,children}) {\r\n  const filters = useContext(FilterContext);\r\n  const { ref, tabIndex } = useFocusRef(isCellSelected);\r\n\r\n  return (\r\n    <>\r\n      <div>{column.name}</div>\r\n      {filters.enabled && <div>{children({ ref, tabIndex, filters })}</div>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport function useFocusRef(isSelected) {\r\n  const ref = useRef(null);\r\n\r\n  useLayoutEffect(() => {\r\n    if (!isSelected) return;\r\n    ref.current && ref.current.focus({ preventScroll: true });\r\n  }, [isSelected]);\r\n\r\n\r\n  return {\r\n    ref,\r\n    tabIndex: isSelected ? 0 : -1\r\n  };\r\n}","import React, { useState , useEffect, useMemo, useContext, createContext, useRef , useLayoutEffect } from \"react\";\r\nimport DataGrid,  {HeaderRendererProps} from 'react-data-grid';\r\nimport { Link } from \"react-router-dom\";\r\nimport NumericEditor from \"./editor/numericeditor.component\";\r\nimport DeliveryService from \"../services/delivery.service\";\r\nimport CustomerService from \"../services/customer.service\";\r\nimport BillService from \"../services/bill.service\";\r\nimport PaymentService from \"../services/payment.service\";\r\nimport moment from 'moment';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nimport { CSVLink } from 'react-csv';\r\nimport Button from '@mui/material/Button';\r\nimport { collapseClasses } from \"@mui/material\";\r\n\r\nconst rootClassname = 'rootClassname';\r\nconst filterColumnClassName = 'filter-cell';\r\nconst filterContainerClassname = 'filterContainerClassname';\r\nconst filterClassname = 'filterClassname';\r\n\r\nconst FilterContext = createContext(undefined);\r\n\r\nfunction inputStopPropagation(event) {\r\n  if (['ArrowLeft', 'ArrowRight'].includes(event.key)) {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n\r\nfunction getComparator(sortColumn) {\r\n  switch (sortColumn) {\r\n    case 'name':\r\n      return (a, b) => {\r\n        return a[sortColumn].localeCompare(b[sortColumn]);\r\n      };\r\n    default:\r\n      return (a, b) => {\r\n        return a[sortColumn] - b[sortColumn];\r\n      };\r\n  }\r\n}\r\n\r\nconst CollectionDaily = props => {\r\n\r\n  const [filters, setFilters] = useState({\r\n    name: '',\r\n    enabled: true\r\n  });\r\n\r\n  const initialCalendar = {\r\n    currentDate: moment()\r\n  };\r\n  \r\n    const [rows, setRows] = useState([]);  \r\n\t  const [message, setMessage] = useState();\r\n\t  const [rate, setRate] = useState({});\r\n\t  const [open, setOpen] = useState(false);\r\n\t  const [confirm, setConfirm] = useState(false);\r\n    const [calendar, setCalendar] = useState(initialCalendar);\r\n    const [sortColumns, setSortColumns] = useState([]);  \r\n    const [from, setFrom] = useState();\r\n    const [to, setTo] = useState();\r\n \r\n    const columns = [\r\n      { key: 'id', name: 'ID' , minWidth: 40 , resizable: true ,\r\n      headerCellClass: filterColumnClassName,\r\n      headerRenderer: (p) => (\r\n        <FilterRenderer {...p}>\r\n          {({ filters, ...rest }) => (\r\n            <input\r\n              {...rest}\r\n              className={filterClassname}\r\n              value={filters.name}\r\n              onChange={(e) =>\r\n                setFilters({\r\n                  ...filters,\r\n                  name: e.target.value\r\n                })\r\n              }\r\n              onKeyDown={inputStopPropagation}\r\n            />\r\n          )}\r\n        </FilterRenderer>\r\n      )\r\n      },\r\n      { key: 'name', name: 'Name' , width: 200, resizable: true},\r\n      { key: 'today', name: 'Quantity' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:80, resizable: true },\r\n      { key: 'fat', name: 'Fat' , minWidth:20 , resizable: true , editor: NumericEditor, editorOptions: {editOnClick: true} },\r\n      { key: 'snf', name: 'Snf' , minWidth:20 , resizable: true, editor: NumericEditor, editorOptions: {editOnClick: true} },\r\n      { key: 'water', name: 'Water' , minWidth:40 , resizable: true, editor: NumericEditor, editorOptions: {editOnClick: true} },\r\n      { key: 'rate', name: 'Rate' , minWidth:40 , resizable: true ,editor: NumericEditor, editorOptions: {editOnClick: true}},\r\n      { key: 'route', name: 'Route' , minWidth:40, resizable: true },\r\n      { key: 'bill', name: 'Bill' , minWidth:40 , resizable: true },\r\n      { key: 'qty', name: 'Bill Qty' , minWidth:70 , resizable: true },\r\n      { key: 'paid', name: 'Paid' , minWidth:60 , resizable: true }\r\n    ];\r\n    \r\n    \r\n    useEffect(() => {\r\n      var calendar={currentDate:moment(props.match.params.date,'DD-MMM-YYYY')};\r\n      setCalendar(calendar);\r\n      var initialRows = null;\r\n      const paramCustomer = { active: true, type: \"farmer\"};\r\n\r\n      CustomerService.getAll(paramCustomer).then((response) => {\r\n        var customers = response.data;\r\n        initialRows = new Array(customers.length);\r\n        customers.map((customer, index) => {\r\n          initialRows[index]={};\r\n          initialRows[index][\"id\"]=customer.id;\r\n          initialRows[index][\"name\"]=customer.name;\r\n\r\n        });\r\n        getPayment(calendar, initialRows);\r\n        deliveryService(calendar, initialRows);\r\n        billService(calendar, initialRows);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\t  \r\n    }, [props.match.params.date]);\r\n\r\n    function deliveryService(calendar, initialRows){\r\n      const params ={ \"date\": calendar.currentDate.format(\"DD\"), \r\n                      \"month\" : calendar.currentDate.format(\"MMM-YYYY\"), type: \"expense\"};\r\n      DeliveryService.getAll(params).then((response) => {\r\n        var deliverys = response.data;\r\n        deliverys && deliverys.map((delivery) => {\r\n          for(var initialRow of initialRows){\r\n            if(initialRow.id == delivery.partyId){\r\n              initialRow[\"today\"] = delivery.quantity;\r\n              initialRow[\"idtoday\"]=delivery.id;\r\n              initialRow[\"fat\"]=delivery.fat;\r\n              initialRow[\"snf\"]=delivery.snf;\r\n              initialRow[\"water\"]=delivery.water;\r\n              initialRow[\"rate\"]=delivery.rate;\r\n              break;\r\n            }\r\n          };\r\n        });\r\n        console.log(initialRows);\r\n        setRows(initialRows);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n    }\r\n\r\n    function billService(calendar, initialRows){\r\n      const paramsBill ={ month : calendar.currentDate.format(\"MMM-YYYY\"), active: true, type: \"expense\"};\r\n      BillService.getAll(paramsBill).then((response) => {\r\n        var deliverys = response.data;\r\n        deliverys && deliverys.map((delivery) => {\r\n          for(var initialRow of initialRows){\r\n            if(initialRow.id == delivery.partyId){\r\n              if(delivery.rate){\r\n                initialRow[\"qty\"] = delivery.quantity;\r\n                initialRow[\"rate\"]=delivery.rate;\r\n                initialRow[\"bill\"]=delivery.bill;\r\n                initialRow[\"dues\"]=delivery.dues;\r\n                initialRow[\"totalBill\"]=initialRow[\"bill\"]+(initialRow[\"dues\"]? initialRow[\"dues\"] : 0);\r\n              }\r\n              break;\r\n            }\r\n          };\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\t  \r\n      //previous month bill and due amount\r\n\t  const paramsBillPrev ={ month :  calendar.currentDate.clone().subtract(1, 'months').format('MMM-YYYY'), active: true, type: \"expense\"};\r\n\t  BillService.getAll(paramsBillPrev).then((response) => {\r\n        var deliverys = response.data;\r\n        deliverys && deliverys.map((delivery) => {\r\n          for(var initialRow of initialRows){\r\n            if(initialRow.id == delivery.partyId){\r\n              if(delivery.rate){\r\n                initialRow[\"prevBill\"]=delivery.bill;\r\n                initialRow[\"prevDues\"]=delivery.dues;\r\n              }\r\n              break;\r\n            }\r\n          };\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n    }\r\n\r\n    function getPayment(calendar, initialRows){\r\n      var params ={ \"month\": calendar.currentDate.format(\"MMM-YYYY\"), \"active\": true, type: \"expense\"};\r\n      PaymentService.getAll(params).then(response => {\r\n        var bills = response.data;\r\n        initialRows && initialRows.map((initialRow) => {\r\n          bills && bills.map((bill) => {\r\n              if(bill.partyId == initialRow.id){\r\n                if(initialRow[\"paid\"]){\r\n                  initialRow[\"paid\"]=initialRow[\"paid\"]+bill.payment;\r\n                }else{\r\n                  initialRow[\"paid\"]=+bill.payment\r\n                }\r\n              }\r\n            });\r\n        });\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n    }\r\n   \r\n\r\n    function handleClickOpen () {\r\n      setOpen(true);\r\n    }\r\n  \r\n    function handleClose () {\r\n      setConfirm(false);\r\n      setOpen(false);\r\n    };\r\n\t\r\n      function handleConfirm () {\r\n        setConfirm(false);\r\n        generateBillsCollectionAfterCheck(calendar.currentDate.format(\"MMM-YYYY\"));\r\n        setOpen(false);\r\n      }\r\n\r\n    function rowChange(row, col) {\r\n      constructDeliveryUpdateData(row,col);\r\n      setRows (row);\r\n    }\r\n\r\n    function constructDeliveryUpdateData(row, col){\r\n      var rowData = row[col.indexes];\r\n      var columnVal = rowData[col.column.key]; \r\n      var columnId = rowData[\"idtoday\"];\r\n      console.log(rowData.id+ \" - \"+columnVal + \" - \" +columnId+\" - \" + col.column.key);\r\n      saveDelivery(rowData.id, calendar.currentDate, calendar.currentDate , rowData.today, \r\n        columnId, rowData, rowData.fat, rowData.snf, rowData.water, rowData.rate);\r\n    }\r\n\r\n    function saveDelivery (cutomerId, date, month, quantity, id, rowData, fat, snf, water, rate) {\r\n      var amount = 0;\r\n      var tempRate = 0;\r\n      var tempQantity = 0;\r\n      if(rate){\r\n        if(rate<30){\r\n          tempRate = 30;\r\n        }else {\r\n          tempRate = rate;\r\n        }\r\n      }\r\n      if(quantity){\r\n        tempQantity = quantity;\r\n      }\r\n\r\n      amount = rate * tempQantity;\r\n\r\n      var data = {\r\n        id: id,\r\n        partyId: cutomerId,\r\n        date: date.format(\"DD\"),\r\n        deliveryDate: date.format(\"DD-MMM-YYYY\"),\r\n        month: month.format(\"MMM-YYYY\"),\r\n        fat: fat,\r\n        snf: snf,\r\n        water: water,\r\n        quantity: quantity,\r\n        rate: rate,\r\n\t\t    type: \"expense\",   \r\n        amount: amount,\r\n        category: \"collection\"      \r\n      };\r\n      console.log(data);\r\n      if(id){\r\n          DeliveryService.update(id, data)\r\n            .then(response => {\r\n              console.log(response.data);\r\n            })\r\n            .catch(e => {\r\n              console.log(e);\r\n            });\r\n      } else {\r\n        DeliveryService.create(data)\r\n            .then(response => {\r\n              rowData[\"idtoday\"]=response.data.id;\r\n              console.log(rowData);\r\n            })\r\n            .catch(e => {\r\n              console.log(e);\r\n            });\r\n        }\r\n      }\r\n\r\n      function generateBillCollection(){\r\n        const paramsFrom ={ \"type\": \"expense\",\"from\":from, \"to\":to };\r\n        BillService.validateCollectionBillsGeneration(\"expense\",paramsFrom).then((response) => {\r\n          console.log(response.data);\r\n          var bill = response.data;\r\n          //bill object has bill, means the bill was generated\r\n          if(bill.rate){\r\n            setConfirm(true);\r\n            setMessage(\"Bill already generated for the period. Do you want to continue? Please confirm to proceed.\");\r\n            handleClickOpen();\r\n          }else{\r\n            generateBillsCollectionAfterCheck();\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n          //no bill exist for the month, so generate bill without prompting user\r\n          if(e.response.status == 404){\r\n            generateBillsCollectionAfterCheck();\r\n          }\r\n        });\r\n        }\r\n      \r\n      function generateBillsCollectionAfterCheck(){\r\n        const paramsBill ={  \"type\": \"expense\",\"from\":from, \"to\":to , \"category\":\"collection\"};\r\n        BillService.generateBillsCollection(paramsBill).then((response) => {\r\n            var deliverys = response.data;\r\n            deliverys && deliverys.map((delivery) => {\r\n              for(var initialRow of rows){\r\n                if(initialRow.id == delivery.partyId){\r\n                  initialRow[\"qty\"] = delivery.quantity;\r\n                  initialRow[\"rate\"]=delivery.rate;\r\n                  initialRow[\"bill\"]=delivery.bill;\r\n                  break;\r\n                }\r\n              };\r\n            });\r\n        setMessage(\"Bill generated for the period .\");\r\n        handleClickOpen();\r\n        console.log(rows);\r\n        setRows(rows);\r\n          })\r\n          .catch((e) => {\r\n            console.log(e);\r\n          });\r\n      }\r\n      \r\n\r\n  const filteredRows = useMemo( () => {\r\n    function filter(){\r\n      var filteredRows = null;\r\n       filteredRows = rows.filter((r) => {\r\n        return (\r\n          (filters.name ? r.name.includes(filters.name) : true)\r\n        );\r\n      })\r\n      if (sortColumns.length === 0) return filteredRows;\r\n      filteredRows = [...filteredRows].sort((a, b) => {\r\n        for (const sort of sortColumns) {\r\n          const comparator = getComparator(sort.columnKey);\r\n          const compResult = comparator(a, b);\r\n          if (compResult !== 0) {\r\n            return sort.direction === 'ASC' ? compResult : -compResult;\r\n          }\r\n        }\r\n        return 0;\r\n      })\r\n      return filteredRows;\r\n    }\r\n    return filter();\r\n  }, [rows, filters, sortColumns]);\r\n\r\n    return (\r\n      <div >\r\n        {calendar ? (\r\n        <div >\r\n         \r\n            <Grid container spacing={{ xs: 1}} >\r\n          <Grid item xs={6} sm={3}> \r\n            <Link\r\n                to={\"/gui/collectionDaily/\"+calendar.currentDate.clone().subtract(1, 'days').format('DD-MMM-YYYY')}\r\n                className=\"badge badge-warning\">\r\n                Prev\r\n              </Link>\r\n              {calendar.currentDate.format(\"DD-MMM-YYYY\")}\r\n              <Link\r\n                to={\"/gui/collectionDaily/\"+calendar.currentDate.clone().add(1, 'days').format('DD-MMM-YYYY')}\r\n                className=\"badge badge-warning\">\r\n                Next\r\n              </Link>\r\n            </Grid>\r\n           \r\n            <Grid item xs={3} sm={1}>\r\n                &nbsp;\r\n                <Button variant=\"warning\" className=\"badge\">\r\n                      <CSVLink \r\n                      data={filteredRows} filename={'dailyCollectionExpense.txt'}>Export\r\n                      </CSVLink>\r\n                </Button>\r\n              </Grid> \r\n          </Grid>  \r\n          \r\n        </div>     \r\n         ) : (\r\n          <div>\r\n            <br />\r\n            <p>Please click on a Customer...</p>\r\n          </div>\r\n        )}\r\n        <div className=\"rootClassname\">\r\n          <FilterContext.Provider value={filters}>\r\n            <DataGrid columns={columns} onRowsChange={rowChange} \r\n             defaultColumnOptions={{\r\n              sortable: true,\r\n              resizable: true\r\n            }}\r\n              className={filters.enabled ? filterContainerClassname : undefined}\r\n              rows={filteredRows}\r\n              sortColumns={sortColumns}\r\n              onSortColumnsChange={setSortColumns}\r\n              headerRowHeight={filters.enabled ? 50 : undefined}\r\n              />\r\n            </FilterContext.Provider>\r\n          </div>\r\n      </div>\r\n    );\r\n  };\r\nexport default CollectionDaily;\r\n\r\n\r\nfunction FilterRenderer({isCellSelected,column,children}) {\r\n  const filters = useContext(FilterContext);\r\n  const { ref, tabIndex } = useFocusRef(isCellSelected);\r\n\r\n  return (\r\n    <>\r\n      <div>{column.name}</div>\r\n      {filters.enabled && <div>{children({ ref, tabIndex, filters })}</div>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport function useFocusRef(isSelected) {\r\n  const ref = useRef(null);\r\n\r\n  useLayoutEffect(() => {\r\n    if (!isSelected) return;\r\n    ref.current && ref.current.focus({ preventScroll: true });\r\n  }, [isSelected]);\r\n\r\n\r\n  return {\r\n    ref,\r\n    tabIndex: isSelected ? 0 : -1\r\n  };\r\n}","import React, { useState , useEffect, useMemo, useContext, createContext, useRef , useLayoutEffect } from \"react\";\r\nimport RouteService from \"../services/route.service\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DataGrid, {TextEditor, SelectCellFormatter} from 'react-data-grid';\r\nimport DeliveryService from \"../services/delivery.service\";\r\nimport CustomerService from \"../services/customer.service\";\r\nimport DropDownEditor, {useRoute} from \"../components/editor/dropdown.component\";\r\nimport NumericEditor from \"../components/editor/numericeditor.component\";\r\nimport moment from 'moment';\r\n\r\nconst rootClassname = 'rootClassname';\r\nconst filterColumnClassName = 'filter-cell';\r\nconst filterContainerClassname = 'filterContainerClassname';\r\nconst filterClassname = 'filterClassname';\r\n\r\nconst FilterContext = createContext(undefined);\r\n\r\nfunction inputStopPropagation(event) {\r\n  if (['ArrowLeft', 'ArrowRight'].includes(event.key)) {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n\r\nexport function stopPropagation(event) {\r\n  event.stopPropagation();\r\n}\r\n\r\nfunction getComparator(sortColumn) {\r\n  switch (sortColumn) {\r\n    case 'name':\r\n\tcase 'address':\r\n\tcase 'startDate':\r\n\tcase 'endDate':\r\n\tcase 'type':\r\n      return (a, b) => {\r\n        return a[sortColumn].localeCompare(b[sortColumn]);\r\n      };\r\n    default:\r\n      return (a, b) => {\r\n        return a[sortColumn] - b[sortColumn];\r\n      };\r\n  }\r\n}\r\n\r\nconst CustomerList = props => {  \r\n\r\n  const [rows, setRows] = useState([]);\r\n\tconst [sortColumns, setSortColumns] = useState([]);  \r\n  const [filters, setFilters] = useState({\r\n    name: '',\r\n    enabled: true\r\n  });\r\n\r\n  const columns = [\r\n    { key: 'id', name: 'ID' , width: 40 , resizable: true,frozen: true,\r\n        headerCellClass: filterColumnClassName,\r\n        headerRenderer: (p) => (\r\n          <FilterRenderer {...p}>\r\n            {({ filters, ...rest }) => (\r\n              <input\r\n                {...rest}\r\n                className={filterClassname}\r\n                value={filters.name}\r\n                onChange={(e) =>\r\n                  setFilters({\r\n                    ...filters,\r\n                    name: e.target.value\r\n                  })\r\n                }\r\n                onKeyDown={inputStopPropagation}\r\n              />\r\n            )}\r\n          </FilterRenderer>\r\n        )\r\n    },\r\n    { key: 'name', name: 'Name' , editor: TextEditor, editorOptions: {editOnClick: true} , resizable: true ,frozen: true,},\r\n    { key: 'address', name: 'Address' , editor: TextEditor, editorOptions: {editOnClick: true} , resizable: true },\r\n    { key: 'mobNo', name: 'MobNo' , editor: NumericEditor, editorOptions: {editOnClick: true} , resizable: true },\r\n    { key: 'startDate', name: 'StartDate' , editor: TextEditor, editorOptions: {editOnClick: true} , resizable: true },\r\n    { key: 'endDate', name: 'EndDate' , editor: TextEditor, editorOptions: {editOnClick: true} , resizable: true },\r\n    { key: 'defaultQuantity', name: 'Quantity' , width: 40  , editor: NumericEditor, editorOptions: {editOnClick: true} , resizable: true },\r\n    { key: 'active', name: 'Active' , width: 40 ,\r\n            formatter({ row, onRowChange, isCellSelected }) {\r\n              return (\r\n                <SelectCellFormatter\r\n                  value={row.active}\r\n                  onChange={() => {\r\n                    onRowChange({ ...row, active: !row.active });\r\n                  }}\r\n                  onClick={stopPropagation}\r\n                  isCellSelected={isCellSelected}\r\n                />\r\n              );\r\n            } },\r\n    { key: 'routeId', name: 'Route' , resizable: true ,\r\n              formatter(props) {\r\n                return <>{props.row.routeName}</>;\r\n              },\r\n              editor: DropDownEditor,\r\n              editorOptions: {\r\n                editOnClick: true\r\n              }},\r\n    { key: 'routeSeq', name: 'Seq' , width: 40 , editor: NumericEditor, editorOptions: {editOnClick: true} , resizable: true },\r\n    { key: 'type', name: 'Type' , width: 80 , editor: TextEditor, editorOptions: {editOnClick: true} , resizable: true }\r\n  ];\r\n\r\n    useEffect(() => {\r\n      var initialRows = null;\r\n      const paramCustomer = { _sort: \"routeId\", _order: \"asc\"};\r\n      console.log(paramCustomer);\r\n      CustomerService.getAll(paramCustomer).then((response) => {\r\n        var customers = response.data;\r\n        initialRows = new Array(customers.length);\r\n        customers.map((customer, index) => {\r\n          initialRows[index]={};\r\n          initialRows[index][\"id\"]=customer.id;\r\n          initialRows[index][\"name\"]=customer.name;\r\n          initialRows[index][\"address\"]=customer.address;\r\n          initialRows[index][\"mobNo\"]=customer.mobNo;\r\n          initialRows[index][\"startDate\"]=customer.startDate;\r\n          initialRows[index][\"endDate\"]=customer.endDate;\r\n          initialRows[index][\"defaultQuantity\"]=customer.defaultQuantity;\r\n          initialRows[index][\"active\"]=customer.active;\r\n          initialRows[index][\"routeId\"]=customer.routeId;\r\n          initialRows[index][\"routeSeq\"]=customer.routeSeq;\r\n\t\t      initialRows[index][\"type\"]=customer.type;\r\n          if(customer.route){\r\n            initialRows[index][\"routeName\"]=customer.route.name;\r\n          }\r\n        });\r\n        setRows(initialRows);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });    \r\n    }, []);\r\n\r\n    function rowChange(row, col) {\r\n      constructDeliveryUpdateData(row,col);\r\n      setRows (row);\r\n    }\r\n\r\n    function constructDeliveryUpdateData(row, col){\r\n      console.log(row[col.indexes].id+ \" - \"+row[col.indexes][col.column.key]);\r\n      saveDelivery(row[col.indexes]);\r\n    }\r\n\r\n    function saveDelivery (row) {\r\n      var data = {\r\n        id: row.id,\r\n        name: row.name,\r\n        address: row.address,\r\n        mobNo: row.mobNo,\r\n        startDate: row.startDate,\r\n        endDate: row.endDate,\r\n        active: row.active,\r\n        routeId: row.routeId,\r\n        defaultQuantity: row.defaultQuantity,\r\n        routeSeq: row.routeSeq,\r\n\t\ttype: row.type\r\n      };\r\n      console.log(data);\r\n      \r\n           CustomerService.update(row.id, data)\r\n            .then(response => {\r\n              console.log(response.data);\r\n            })\r\n            .catch(e => {\r\n              console.log(e);\r\n            }); \r\n    }\r\n\r\n\t  const filteredRows = useMemo( () => {\r\n      function filter(){\r\n        var filteredRows = null;\r\n         filteredRows = rows.filter((r) => {\r\n          return (\r\n            (filters.name ? r.name.includes(filters.name) : true)\r\n          );\r\n        })\r\n        if (sortColumns.length === 0) return filteredRows;\r\n        filteredRows = [...filteredRows].sort((a, b) => {\r\n          for (const sort of sortColumns) {\r\n            const comparator = getComparator(sort.columnKey);\r\n            const compResult = comparator(a, b);\r\n            if (compResult !== 0) {\r\n              return sort.direction === 'ASC' ? compResult : -compResult;\r\n            }\r\n          }\r\n          return 0;\r\n        })\r\n        return filteredRows;\r\n      }\r\n      return filter();\r\n    }, [rows, filters, sortColumns]);\r\n  \r\n    return (\r\n      <div >\r\n                <Link to={\"/gui/addCustomer\"} className=\"nav-link\">\r\n                  Add Customer\r\n                </Link>\r\n        <div className=\"rootClassname\">\r\n          <FilterContext.Provider value={filters}>\r\n            <DataGrid columns={columns} onRowsChange={rowChange} \r\n             defaultColumnOptions={{\r\n              sortable: true,\r\n              resizable: true\r\n            }}\r\n              className={filters.enabled ? filterContainerClassname : undefined}\r\n              rows={filteredRows}\r\n              sortColumns={sortColumns}\r\n              onSortColumnsChange={setSortColumns}\r\n              headerRowHeight={filters.enabled ? 50 : undefined}\r\n              />\r\n            </FilterContext.Provider>\r\n          </div>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default CustomerList;\r\n\r\n  \r\nfunction FilterRenderer({isCellSelected,column,children}) {\r\n  const filters = useContext(FilterContext);\r\n  const { ref, tabIndex } = useFocusRef(isCellSelected);\r\n\r\n  return (\r\n    <>\r\n      <div>{column.name}</div>\r\n      {filters.enabled && <div>{children({ ref, tabIndex, filters })}</div>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport function useFocusRef(isSelected) {\r\n  const ref = useRef(null);\r\n\r\n  useLayoutEffect(() => {\r\n    if (!isSelected) return;\r\n    ref.current && ref.current.focus({ preventScroll: true });\r\n  }, [isSelected]);\r\n\r\n\r\n  return {\r\n    ref,\r\n    tabIndex: isSelected ? 0 : -1\r\n  };\r\n}","import React, { Component } from \"react\";\r\nimport DeliveryService from \"../services/delivery.service\";\r\nimport BillService from \"../services/bill.service\";\r\nimport moment from \"moment\";\r\n\r\nexport default class Bills extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      bills: null\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getBills(this.props.match.params.month);\r\n  }\r\n\r\n  getBills(month){\r\n      const paramsBill ={ month : month, active: true, type: \"income\"};\r\n      var initialRows = [];\r\n      BillService.getAll(paramsBill).then((response) => {\r\n        var bills = response.data;\r\n        bills && bills.map((bill,index) => {\r\n\t\t\tif(bill.quantity > 0 || bill.dues > 0){\r\n\t\t\t\tvar initialRow = {};  \r\n\t\t\t\tinitialRow[\"id\"]=bill.id;\r\n\t\t\t\tinitialRow[\"partyId\"]=bill.partyId;\r\n\t\t\t\tinitialRow[\"month\"]=month;\r\n\t\t\t\tinitialRow[\"qty\"] = bill.quantity;\r\n\t\t\t\tinitialRow[\"rate\"]=bill.rate;\r\n\t\t\t\tinitialRow[\"bill\"]=bill.bill;\r\n\t\t\t\tinitialRow[\"dues\"]=bill.dues;\r\n\t\t\t\tinitialRow[\"totalBill\"]=initialRow[\"bill\"]+(initialRow[\"dues\"]? initialRow[\"dues\"] : 0);\r\n\t\t\t\tinitialRow[\"paid\"]=+bill.payment;\r\n        initialRow[\"discount\"]=+bill.discount;\r\n        initialRow[\"lastBillTotal\"]=+bill.lastBillTotal;\r\n\t\t\t\tif(bill.customer){\r\n\t\t\t\t\tinitialRow[\"name\"]=bill.customer.name;\r\n\t\t\t\t}\r\n\t\t\t\tinitialRows[index]={};\r\n\t\t\t\tinitialRows[index]=initialRow;\r\n\t\t\t}\r\n        });\r\n\t\t\r\n\t  const params ={ \"month\" : month, type: \"income\"};\r\n\t  DeliveryService.getAll(params).then((response) => {\r\n\t\tvar deliverys = response.data;\r\n\t\tdeliverys && deliverys.map((delivery) => {\r\n\t\t  for(var initialRow of initialRows){\r\n\t\t\tif(initialRow && initialRow.partyId == delivery.partyId){\r\n\t\t\t  initialRow[delivery.date] = delivery.quantity;\r\n\t\t\t  break;\r\n\t\t\t}\r\n\t\t  };\r\n\t\t});\r\n\t\tconsole.log(initialRows);\r\n\t\tthis.setState({\r\n\t\t  bills: initialRows\r\n\t\t});\r\n\t  })\r\n\t  .catch((e) => {\r\n\t\tconsole.log(e);\r\n\t  });\r\n\t  \r\n        this.setState({\r\n          bills: initialRows\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\r\n    \r\n  }\r\n\r\n  render() {\r\n    const { bills } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <table className=\"table\">\r\n          {bills && bills.map((count) => (\r\n            <tr>\r\n                <td >\r\n                      <table className=\"table noBorder\" border=\"1\" >\r\n                          <tr>\r\n                             <th>Name</th>\r\n                             <td><b>{count.name ? count.name : count.id}</b></td>\r\n                           \r\n                             <th>Month</th>\r\n                             <td>{count.month}</td>\r\n                           \r\n                             <th>Last Bill</th>\r\n                             <td>{count.lastBillTotal}</td>\r\n\r\n                             <th>Payment</th>\r\n                             <td>{count.paid}</td>\r\n\r\n                             <th>Discount</th>\r\n                             <td>{count.discount}</td>\r\n                             \r\n                           </tr>\r\n                           <tr>\r\n                             <th >Quantity</th>\r\n                             <td >{count.qty + ' Ltr'}</td>\r\n\r\n                             <th >Rate</th>\r\n                             <td >{count.rate}</td>\r\n                           \r\n                             <th >Bill</th>\r\n                             <td >{count.bill}</td>\r\n\r\n                             <th>Dues</th>\r\n                             <td>{count.dues}</td>\r\n\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t               <th>Total Bill</th>\r\n                             <td>{count.totalBill} </td>\r\n                           </tr>\r\n                           <tr>\r\n                             <td style={{margin:0, padding:0}} colspan={10}>\r\n                               <table style={{margin:0, padding:0}}>\r\n                                 <tr>\r\n                                   <td >Day</td>\r\n                                   <td >1</td>\r\n                                   <td >2</td>\r\n                                   <td >3</td>\r\n                                   <td >4</td>\r\n                                   <td >5</td>\r\n                                   <td >6</td>\r\n                                   <td >7</td>\r\n                                   <td >8</td>\r\n                                   <td >9</td>\r\n                                   <td >10</td>\r\n                                   <td >11</td>\r\n                                   <td >12</td>\r\n                                   <td >13</td>\r\n                                   <td >14</td>\r\n                                   <td >15</td>\r\n                                   <td >16</td>\r\n                                   <td rowSpan={2}><h1>RAMJI DAIRY</h1></td>\t\t\t\t\t\t\t\t   \r\n                                 </tr>\r\n                                 <tr>\r\n                                          <td >Quantity</td>  \r\n                                          <td  >{count[\"01\"]}</td>\r\n                                          <td  >{count[\"02\"]}</td>\r\n                                          <td  >{count[\"03\"]}</td>\r\n                                          <td  >{count[\"04\"]}</td>\r\n                                          <td  >{count[\"05\"]}</td>\r\n                                          <td  >{count[\"06\"]}</td>\r\n                                          <td  >{count[\"07\"]}</td>\r\n                                          <td  >{count[\"08\"]}</td>\r\n                                          <td  >{count[\"09\"]}</td>\r\n                                          <td  >{count[\"10\"]}</td>\r\n                                          <td  >{count[\"11\"]}</td>\r\n                                          <td  >{count[\"12\"]}</td>\r\n                                          <td  >{count[\"13\"]}</td>\r\n                                          <td  >{count[\"14\"]}</td>\r\n                                          <td  >{count[\"15\"]}</td>\r\n                                          <td  >{count[\"16\"]}</td>\r\n                                 </tr>\r\n                                 \r\n                                 <tr>\r\n                                   <td >Day</td>\r\n                                   <td >17</td>\r\n                                   <td >18</td>\r\n                                   <td >19</td>\r\n                                     <td >20</td>\r\n                                   <td >21</td>\r\n                                   <td >22</td>\r\n                                   <td >23</td>\r\n                                   <td >24</td>\r\n                                   <td >25</td>\r\n                                   <td >26</td>\r\n                                   <td >27</td>\r\n                                   <td >28</td>\r\n                                   <td >29</td>\r\n                                   <td >30</td>\r\n                                   <td >31</td>\r\n                                   <td >{\" \"}</td>\r\n                                   <td rowSpan={2}><h3>9860910995,</h3></td>\r\n                                 </tr>\r\n                                 <tr>\r\n                                          <td >quantity</td>\r\n                                          <td  >{count[\"17\"]}</td>\r\n                                          <td  >{count[\"18\"]}</td>\r\n                                          <td  >{count[\"19\"]}</td>\r\n                                          <td  >{count[\"20\"]}</td>\r\n                                          <td  >{count[\"21\"]}</td>\r\n                                          <td  >{count[\"22\"]}</td>\r\n                                          <td  >{count[\"23\"]}</td>\r\n                                          <td  >{count[\"24\"]}</td>\r\n                                          <td  >{count[\"25\"]}</td>\r\n                                          <td  >{count[\"26\"]}</td>\r\n                                          <td  >{count[\"27\"]}</td>\r\n                                          <td  >{count[\"28\"]}</td>\r\n                                          <td  >{count[\"29\"]}</td>\r\n                                          <td  >{count[\"30\"]}</td>\r\n                                          <td  >{count[\"31\"]}</td>\r\n                                 </tr>\r\n                                \r\n                               </table>\r\n                             </td>\r\n                           </tr>\r\n                        </table>\r\n              </td>\r\n            </tr>\r\n          ))}    \r\n           </table> \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport DeliveryService from \"../services/delivery.service\";\r\nimport BillService from \"../services/bill.service\";\r\nimport moment from \"moment\";\r\n\r\nexport default class CollectionBills extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      bills: null\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getBills(this.props.match.params.from, this.props.match.params.to, this.props.match.params.partyId);\r\n  }\r\n  getBills(from, to, partyId){\r\n      const paramsBill ={ from : from, to: to, active: true, type: \"expense\", category: \"collection\",  partyId : partyId };\r\n      console.log(paramsBill);\r\n      var initialRows = [];\r\n      BillService.getAll(paramsBill).then((response) => {\r\n        var bills = response.data;\r\n        console.log(bills);\r\n        bills && bills.map((bill,index) => {\r\n\t\t\tif(bill.quantity > 0 || bill.dues > 0){\r\n\t\t\t\tvar initialRow = {};  \r\n\t\t\t\tinitialRow[\"id\"]=bill.id;\r\n\t\t\t\tinitialRow[\"partyId\"]=bill.partyId;\r\n\t\t\t\tinitialRow[\"from\"]=bill.from;\r\n        initialRow[\"to\"]=bill.to;\r\n\t\t\t\tinitialRow[\"qty\"] = bill.quantity;\r\n\t\t\t\tinitialRow[\"rate\"]=bill.rate;\r\n\t\t\t\tinitialRow[\"bill\"]=bill.bill;\r\n\t\t\t\tinitialRow[\"dues\"]=bill.dues;\r\n\t\t\t\tinitialRow[\"totalBill\"]=initialRow[\"bill\"]+(initialRow[\"dues\"]? initialRow[\"dues\"] : 0);\r\n\t\t\t\tinitialRow[\"paid\"]=+bill.payment;\r\n        initialRow[\"discount\"]=+bill.discount;\r\n        initialRow[\"lastBillTotal\"]=+bill.lastBillTotal;\r\n\t\t\t\tif(bill.customer){\r\n\t\t\t\t\tinitialRow[\"name\"]=bill.customer.name;\r\n\t\t\t\t}\r\n\t\t\t\tinitialRows[index]={};\r\n\t\t\t\tinitialRows[index]=initialRow;\r\n\t\t\t}\r\n        });\r\n\t\t\r\n\t  const params ={ \"from\" : from,\"to\":to, type: \"expense\", category:\"collection\"};\r\n\t  DeliveryService.getAll(params).then((response) => {\r\n\t\tvar deliverys = response.data;\r\n\t\tdeliverys && deliverys.map((delivery) => {\r\n\t\t  for(var initialRow of initialRows){\r\n\t\t\tif(initialRow && initialRow.partyId == delivery.partyId){\r\n\t\t\t  initialRow[delivery.date] = delivery.quantity;\r\n\t\t\t  break;\r\n\t\t\t}\r\n\t\t  };\r\n\t\t});\r\n\t\tconsole.log(initialRows);\r\n\t\tthis.setState({\r\n\t\t  bills: initialRows\r\n\t\t});\r\n\t  })\r\n\t  .catch((e) => {\r\n\t\tconsole.log(e);\r\n\t  });\r\n\t  \r\n        this.setState({\r\n          bills: initialRows\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\r\n    \r\n  }\r\n\r\n  render() {\r\n    const { bills } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <table className=\"table\">\r\n          {bills && bills.map((count) => (\r\n            <tr>\r\n                <td >\r\n                      <table className=\"table noBorder\" border=\"1\" >\r\n                          <tr>\r\n                             <th>Name</th>\r\n                             <td><b>{count.name ? count.name : count.id}</b></td>\r\n                           \r\n                             <th>From</th>\r\n                             <td>{count.from}</td>\r\n\r\n                             <th>To</th>\r\n                             <td>{count.to}</td>\r\n                           \r\n                             <th>Last Bill</th>\r\n                             <td>{count.lastBillTotal}</td>\r\n\r\n                             <th>Payment</th>\r\n                             <td>{count.paid}</td>\r\n\r\n                             <th>Discount</th>\r\n                             <td>{count.discount}</td>\r\n                             \r\n                           </tr>\r\n                           <tr>\r\n                             <th >Quantity</th>\r\n                             <td colSpan={3}>{count.qty + ' Ltr'}</td>\r\n\r\n                             \r\n                           \r\n                             <th >Bill</th>\r\n                             <td >{count.bill}</td>\r\n\r\n                               <th>Dues</th>\r\n                             <td>{count.dues}</td>\r\n\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t               <th>Total Bill</th>\r\n                             <td>{count.totalBill} </td>\r\n                           </tr>\r\n                           <tr>\r\n                             <td style={{margin:0, padding:0}} colspan={10}>\r\n                               <table style={{margin:0, padding:0}}>\r\n                                 <tr>\r\n                                   <td >Day</td>\r\n                                   <td >1</td>\r\n                                   <td >2</td>\r\n                                   <td >3</td>\r\n                                   <td >4</td>\r\n                                   <td >5</td>\r\n                                   <td >6</td>\r\n                                   <td >7</td>\r\n                                   <td >8</td>\r\n                                   <td >9</td>\r\n                                   <td >10</td>\r\n                                   <td >11</td>\r\n                                   <td >12</td>\r\n                                   <td >13</td>\r\n                                   <td >14</td>\r\n                                   <td >15</td>\r\n                                   <td >16</td>\r\n                                   <td rowSpan={2}><h1>RAMJI DAIRY</h1></td>\t\t\t\t\t\t\t\t   \r\n                                 </tr>\r\n                                 <tr>\r\n                                          <td >Rate</td>  \r\n                                          <td  >{count[\"01\"]}</td>\r\n                                          <td  >{count[\"02\"]}</td>\r\n                                          <td  >{count[\"03\"]}</td>\r\n                                          <td  >{count[\"04\"]}</td>\r\n                                          <td  >{count[\"05\"]}</td>\r\n                                          <td  >{count[\"06\"]}</td>\r\n                                          <td  >{count[\"07\"]}</td>\r\n                                          <td  >{count[\"08\"]}</td>\r\n                                          <td  >{count[\"09\"]}</td>\r\n                                          <td  >{count[\"10\"]}</td>\r\n                                          <td  >{count[\"11\"]}</td>\r\n                                          <td  >{count[\"12\"]}</td>\r\n                                          <td  >{count[\"13\"]}</td>\r\n                                          <td  >{count[\"14\"]}</td>\r\n                                          <td  >{count[\"15\"]}</td>\r\n                                          <td  >{count[\"16\"]}</td>\r\n                                 </tr>\r\n                                 <tr>\r\n                                          <td >Fat</td>  \r\n                                          <td  >{count[\"01\"]}</td>\r\n                                          <td  >{count[\"02\"]}</td>\r\n                                          <td  >{count[\"03\"]}</td>\r\n                                          <td  >{count[\"04\"]}</td>\r\n                                          <td  >{count[\"05\"]}</td>\r\n                                          <td  >{count[\"06\"]}</td>\r\n                                          <td  >{count[\"07\"]}</td>\r\n                                          <td  >{count[\"08\"]}</td>\r\n                                          <td  >{count[\"09\"]}</td>\r\n                                          <td  >{count[\"10\"]}</td>\r\n                                          <td  >{count[\"11\"]}</td>\r\n                                          <td  >{count[\"12\"]}</td>\r\n                                          <td  >{count[\"13\"]}</td>\r\n                                          <td  >{count[\"14\"]}</td>\r\n                                          <td  >{count[\"15\"]}</td>\r\n                                          <td  >{count[\"16\"]}</td>\r\n                                 </tr>\r\n                                 <tr>\r\n                                          <td >Snf</td>  \r\n                                          <td  >{count[\"01\"]}</td>\r\n                                          <td  >{count[\"02\"]}</td>\r\n                                          <td  >{count[\"03\"]}</td>\r\n                                          <td  >{count[\"04\"]}</td>\r\n                                          <td  >{count[\"05\"]}</td>\r\n                                          <td  >{count[\"06\"]}</td>\r\n                                          <td  >{count[\"07\"]}</td>\r\n                                          <td  >{count[\"08\"]}</td>\r\n                                          <td  >{count[\"09\"]}</td>\r\n                                          <td  >{count[\"10\"]}</td>\r\n                                          <td  >{count[\"11\"]}</td>\r\n                                          <td  >{count[\"12\"]}</td>\r\n                                          <td  >{count[\"13\"]}</td>\r\n                                          <td  >{count[\"14\"]}</td>\r\n                                          <td  >{count[\"15\"]}</td>\r\n                                          <td  >{count[\"16\"]}</td>\r\n                                 </tr>\r\n                                 <tr>\r\n                                          <td >Water</td>  \r\n                                          <td  >{count[\"01\"]}</td>\r\n                                          <td  >{count[\"02\"]}</td>\r\n                                          <td  >{count[\"03\"]}</td>\r\n                                          <td  >{count[\"04\"]}</td>\r\n                                          <td  >{count[\"05\"]}</td>\r\n                                          <td  >{count[\"06\"]}</td>\r\n                                          <td  >{count[\"07\"]}</td>\r\n                                          <td  >{count[\"08\"]}</td>\r\n                                          <td  >{count[\"09\"]}</td>\r\n                                          <td  >{count[\"10\"]}</td>\r\n                                          <td  >{count[\"11\"]}</td>\r\n                                          <td  >{count[\"12\"]}</td>\r\n                                          <td  >{count[\"13\"]}</td>\r\n                                          <td  >{count[\"14\"]}</td>\r\n                                          <td  >{count[\"15\"]}</td>\r\n                                          <td  >{count[\"16\"]}</td>\r\n                                 </tr>\r\n                                 <tr>\r\n                                   <td >Day</td>\r\n                                   <td >17</td>\r\n                                   <td >18</td>\r\n                                   <td >19</td>\r\n                                   <td >20</td>\r\n                                   <td >21</td>\r\n                                   <td >22</td>\r\n                                   <td >23</td>\r\n                                   <td >24</td>\r\n                                   <td >25</td>\r\n                                   <td >26</td>\r\n                                   <td >27</td>\r\n                                   <td >28</td>\r\n                                   <td >29</td>\r\n                                   <td >30</td>\r\n                                   <td >31</td>\r\n                                   <td >{\" \"}</td>\r\n                                   <td rowSpan={2}><h3>9860910995</h3></td>\r\n                                 </tr>\r\n                                 <tr>\r\n                                          <td >Rate</td>\r\n                                          <td  >{count[\"17\"]}</td>\r\n                                          <td  >{count[\"18\"]}</td>\r\n                                          <td  >{count[\"19\"]}</td>\r\n                                          <td  >{count[\"20\"]}</td>\r\n                                          <td  >{count[\"21\"]}</td>\r\n                                          <td  >{count[\"22\"]}</td>\r\n                                          <td  >{count[\"23\"]}</td>\r\n                                          <td  >{count[\"24\"]}</td>\r\n                                          <td  >{count[\"25\"]}</td>\r\n                                          <td  >{count[\"26\"]}</td>\r\n                                          <td  >{count[\"27\"]}</td>\r\n                                          <td  >{count[\"28\"]}</td>\r\n                                          <td  >{count[\"29\"]}</td>\r\n                                          <td  >{count[\"30\"]}</td>\r\n                                          <td  >{count[\"31\"]}</td>\r\n                                 </tr>\r\n                                 <tr>\r\n                                          <td >Fat</td>\r\n                                          <td  >{count[\"17\"]}</td>\r\n                                          <td  >{count[\"18\"]}</td>\r\n                                          <td  >{count[\"19\"]}</td>\r\n                                          <td  >{count[\"20\"]}</td>\r\n                                          <td  >{count[\"21\"]}</td>\r\n                                          <td  >{count[\"22\"]}</td>\r\n                                          <td  >{count[\"23\"]}</td>\r\n                                          <td  >{count[\"24\"]}</td>\r\n                                          <td  >{count[\"25\"]}</td>\r\n                                          <td  >{count[\"26\"]}</td>\r\n                                          <td  >{count[\"27\"]}</td>\r\n                                          <td  >{count[\"28\"]}</td>\r\n                                          <td  >{count[\"29\"]}</td>\r\n                                          <td  >{count[\"30\"]}</td>\r\n                                          <td  >{count[\"31\"]}</td>\r\n                                 </tr>\r\n                                 <tr>\r\n                                          <td >Snf</td>\r\n                                          <td  >{count[\"17\"]}</td>\r\n                                          <td  >{count[\"18\"]}</td>\r\n                                          <td  >{count[\"19\"]}</td>\r\n                                          <td  >{count[\"20\"]}</td>\r\n                                          <td  >{count[\"21\"]}</td>\r\n                                          <td  >{count[\"22\"]}</td>\r\n                                          <td  >{count[\"23\"]}</td>\r\n                                          <td  >{count[\"24\"]}</td>\r\n                                          <td  >{count[\"25\"]}</td>\r\n                                          <td  >{count[\"26\"]}</td>\r\n                                          <td  >{count[\"27\"]}</td>\r\n                                          <td  >{count[\"28\"]}</td>\r\n                                          <td  >{count[\"29\"]}</td>\r\n                                          <td  >{count[\"30\"]}</td>\r\n                                          <td  >{count[\"31\"]}</td>\r\n                                 </tr>\r\n                                 <tr>\r\n                                          <td >Water</td>\r\n                                          <td  >{count[\"17\"]}</td>\r\n                                          <td  >{count[\"18\"]}</td>\r\n                                          <td  >{count[\"19\"]}</td>\r\n                                          <td  >{count[\"20\"]}</td>\r\n                                          <td  >{count[\"21\"]}</td>\r\n                                          <td  >{count[\"22\"]}</td>\r\n                                          <td  >{count[\"23\"]}</td>\r\n                                          <td  >{count[\"24\"]}</td>\r\n                                          <td  >{count[\"25\"]}</td>\r\n                                          <td  >{count[\"26\"]}</td>\r\n                                          <td  >{count[\"27\"]}</td>\r\n                                          <td  >{count[\"28\"]}</td>\r\n                                          <td  >{count[\"29\"]}</td>\r\n                                          <td  >{count[\"30\"]}</td>\r\n                                          <td  >{count[\"31\"]}</td>\r\n                                 </tr>\r\n                               </table>\r\n                             </td>\r\n                           </tr>\r\n                        </table>\r\n              </td>\r\n            </tr>\r\n          ))}    \r\n           </table> \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport DeliveryService from \"../services/delivery.service\";\r\nimport BillService from \"../services/bill.service\";\r\nimport PaymentService from \"../services/payment.service\";\r\nimport moment from \"moment\";\r\n\r\nexport default class ExpenseBills extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      bills: null\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getBills(this.props.match.params.month);\r\n  }\r\n\r\n  getBills(month){\r\n      const paramsBill ={ month : month, active: true, type: \"expense\"};\r\n      var initialRows = [];\r\n      BillService.getAll(paramsBill).then((response) => {\r\n        var bills = response.data;\r\n        bills && bills.map((bill,index) => {\r\n\t\t\tif(bill.quantity > 0 || bill.dues > 0 || bill.payment > 0){\r\n\t\t\t\tvar initialRow = {};\r\n\t\t\t\tinitialRow[\"id\"]=bill.id;\r\n\t\t\t\tinitialRow[\"partyId\"]=bill.partyId;\r\n\t\t\t\tinitialRow[\"month\"]=month;\r\n\t\t\t\tinitialRow[\"qty\"] = bill.quantity;\r\n\t\t\t\tinitialRow[\"rate\"]=bill.rate;\r\n\t\t\t\tinitialRow[\"bill\"]=bill.bill;\r\n\t\t\t\tinitialRow[\"dues\"]=bill.dues;\r\n\t\t\t\tinitialRow[\"totalBill\"]=initialRow[\"bill\"]+(initialRow[\"dues\"]? initialRow[\"dues\"] : 0);\r\n\t\t\t\tinitialRow[\"paid\"]=+bill.payment\r\n\t\t\t\tif(bill.customer){\r\n\t\t\t\t\tinitialRow[\"name\"]=bill.customer.name;\r\n\t\t\t\t}\r\n\t\t\t\tinitialRows[index]={};\r\n\t\t\t\tinitialRows[index]=initialRow;\r\n\t\t\t\t\r\n\t\t\t\t//fetch all bills for the vendor/staff\r\n\t\t\t\t const params ={ \"month\" : month, type: \"expense\", partyId: bill.partyId};\r\n\t\t\t\t  DeliveryService.getAll(params).then((response) => {\r\n\t\t\t\t\tvar deliverys = response.data;\r\n\t\t\t\t\tinitialRows[index][\"allBills\"] = deliverys;\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t  bills: initialRows\r\n\t\t\t\t\t});\r\n\t\t\t\t  })\r\n\t\t\t\t  .catch((e) => {\r\n\t\t\t\t\tconsole.log(e);\r\n\t\t\t\t  });\r\n\t\t\t\t  PaymentService.getAll(params).then((response) => {\r\n\t\t\t\t\tvar deliverys = response.data;\r\n\t\t\t\t\tinitialRows[index][\"allPayments\"] = deliverys;\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t  bills: initialRows\r\n\t\t\t\t\t});\r\n\t\t\t\t  })\r\n\t\t\t\t  .catch((e) => {\r\n\t\t\t\t\tconsole.log(e);\r\n\t\t\t\t  });\r\n\t  \r\n\t\t\t}\r\n        });\r\n\t\tconsole.log(initialRows);\r\n        this.setState({\r\n          bills: initialRows\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });    \r\n  }\r\n\r\n  render() {\r\n    const { bills } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <table className=\"table\">\r\n          {bills && bills.map((count) => (\r\n            <tr>\r\n                <td >\r\n                      <table className=\"table noBorder\" border=\"1\" >\r\n                          <tr>\r\n                             <th>Name</th>\r\n                             <td colspan=\"3\"><b>{count.name ? count.name : count.id}</b></td>\r\n                           \r\n                             <th>Month</th>\r\n                             <td>{count.month}</td>\r\n                           \r\n                             <th >Quantity</th>\r\n                             <td >{count.qty}</td>\r\n                           </tr>\r\n                           <tr>\r\n                             <th >Bill</th>\r\n                             <td >{count.bill}</td>\r\n\r\n                             <th>Prev Dues</th>\r\n                             <td>{count.dues}</td>\r\n\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t <th>Total Bill</th>\r\n                             <td>{count.totalBill} </td>\r\n\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t <th>Payment</th>\r\n                             <td>{count.paid} </td>\r\n                           </tr>\r\n                           <tr>\r\n                             <td  colspan={4}>\r\n                               <table width=\"100%\">\r\n\t\t\t\t\t\t\t\t{count.allBills && count.allBills.map((allBill) => (\r\n                                 <tr>\r\n                                   <td >{allBill.date}-{allBill.month}</td>\r\n                                   <td >{allBill.amount}</td>\r\n                                 </tr>\r\n\t\t\t\t\t\t\t\t ))}\r\n                               </table>\r\n                             </td>\r\n\t\t\t\t\t\t\t <td colspan={4}>\r\n                               <table width=\"100%\">\r\n\t\t\t\t\t\t\t\t {count.allPayments && count.allPayments.map((allPayment) => (\r\n                                  <tr>\r\n                                   <td>{allPayment.date}-{allPayment.month}</td>\r\n                                   <td>{allPayment.payment}</td>\r\n                                 </tr>\t\r\n\t\t\t\t\t\t\t\t))}\t\t\t\t\t\t\t\t \r\n                               </table>\r\n                             </td>\r\n                           </tr>\r\n                        </table>\r\n              </td>\r\n            </tr>\r\n          ))}    \r\n           </table> \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, useState , useMemo, useEffect } from \"react\";\r\nimport RouteService from \"../services/route.service\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DataGrid, {TextEditor, SelectCellFormatter} from 'react-data-grid';\r\nimport NumericEditor, { textEditorClassname } from \"../components/editor/numericeditor.component\";\r\nimport DeliveryService from \"../services/delivery.service\";\r\nimport PaymentService from \"../services/payment.service\";\r\nimport moment from 'moment';\r\nimport Grid from '@mui/material/Grid';\r\nimport BillService from \"../services/bill.service\";\r\n\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nimport { CSVLink } from 'react-csv';\r\n\r\nexport function stopPropagation(event) {\r\n  event.stopPropagation();\r\n}\r\n\r\nfunction getComparator(sortColumn) {\r\n  switch (sortColumn) {\r\n    case 'name':\r\n\tcase 'date':\r\n\tcase 'month':\r\n\tcase 'category' :\r\n      return (a, b) => {\r\n        return a[sortColumn].localeCompare(b[sortColumn]);\r\n      };\r\n    default:\r\n      return (a, b) => {\r\n        return a[sortColumn] - b[sortColumn];\r\n      };\r\n  }\r\n}\r\n\r\nconst columns = [\r\n  { key: 'id', name: 'ID' , width: 40 , resizable: true },\r\n  { key: 'name', name: 'Name' , width:50, resizable: true },\r\n  { key: 'date', name: 'Date' , editor: TextEditor ,width: 20 , resizable: true },\r\n  { key: 'month', name: 'Month' , editor: TextEditor , width: 40 , resizable: true },\r\n  { key: 'payment', name: 'Payment Amount' , width: 140  ,editor: NumericEditor , resizable: true },\r\n  { key: 'amount', name: 'Bill Amount' , width: 120  , editor: NumericEditor , resizable: true },\r\n  { key: 'quantity', name: 'Quantity' , width: 80  , editor: NumericEditor , resizable: true },\r\n  { key: 'category', name: 'Category', editor:  TextEditor , resizable: true}\r\n];\r\n\r\nconst ExpenseList = props => {  \r\n\r\n\t const initialCalendar = {\r\n\t\tcurrentDate: moment()\r\n\t  };\r\n    const [rows, setRows] = useState([]);\r\n\tconst [sortColumns, setSortColumns] = useState([]);  \r\n\tconst [calendar, setCalendar] = useState(initialCalendar);\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst [confirm, setConfirm] = useState(false);\r\n\tconst [message, setMessage] = useState();\r\n  \r\n    useEffect(() => {\r\n\t  var calendar={currentDate: moment(props.match.params.month,'MMM-YYYY')};\r\n      setCalendar(calendar);\r\n      var initialRows = null;\r\n      const paramCustomer = {type: \"expense\", month: props.match.params.month};\r\n      DeliveryService.getAll(paramCustomer).then((response) => {\r\n        var expenses = response.data;\r\n        initialRows = [];\r\n        expenses && expenses.map((customer, index) => {\r\n          initialRows[index]={};\r\n          initialRows[index][\"id\"]=customer.id;\r\n          initialRows[index][\"partyId\"]=customer.partyId;\r\n          initialRows[index][\"date\"]=customer.date;\r\n          initialRows[index][\"month\"]=customer.month;\r\n          initialRows[index][\"quantity\"]=customer.quantity;\r\n          initialRows[index][\"amount\"]=customer.amount;\r\n\t\t  initialRows[index][\"type\"]=customer.type;\r\n\t\t  initialRows[index][\"category\"]=customer.category;\r\n          if(customer.party){\r\n            initialRows[index][\"name\"]=customer.party.name;\r\n          }\r\n        });\r\n\t\tconsole.log(initialRows);\r\n\t\tgetPayment(props.match.params.month, initialRows);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });    \r\n    }, [props.match.params.month]);\r\n\t\r\n\tfunction getPayment(month, initialRows){\r\n      var params ={ \"month\": month, \"active\": true, type: \"expense\"};\r\n      PaymentService.getAll(params).then(response => {\r\n        var bills = response.data;\r\n        bills &&  bills.map((customer) => {\r\n\t\t\t  var index = initialRows.length;\r\n\t\t\t  initialRows[initialRows.length]={};\r\n\t\t\t  initialRows[index][\"id\"]=customer.id;\r\n\t\t\t  initialRows[index][\"partyId\"]=customer.partyId;\r\n\t\t\t  initialRows[index][\"date\"]=customer.date;\r\n\t\t\t  initialRows[index][\"month\"]=customer.month;\r\n\t\t\t  initialRows[index][\"payment\"]=customer.payment;\r\n\t\t\t  initialRows[index][\"type\"]=customer.type;\r\n\t\t\t  initialRows[index][\"category\"]=customer.category;\r\n\t\t\t  if(customer.party){\r\n\t\t\t\tinitialRows[index][\"name\"]=customer.party.name;\r\n\t\t\t  }\r\n          });\r\n\t\t  setRows(initialRows);\r\n\t\t  console.log(initialRows);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n    }\r\n\r\n    function rowChange(row, col) {\r\n      constructDeliveryUpdateData(row,col);\r\n      setRows (row);\r\n    }\r\n\r\n    function constructDeliveryUpdateData(row, col){\r\n      console.log(row[col.indexes].id+ \" - \"+row[col.indexes][col.column.key]);\r\n      saveDelivery(row[col.indexes]);\r\n    }\r\n\r\n    function saveDelivery (row) {\r\n      var data = {\r\n        id: row.id,\r\n        partyId: row.partyId,\r\n        month: row.month,\r\n        date: row.date,\r\n        quantity: row.quantity,\r\n        amount: row.amount,\r\n\t\tpayment: row.payment,\r\n\t\ttype: row.type,\r\n\t\tcotegory: row.category,\r\n\t\tactive: true\r\n      };\r\n\t  \r\n\tif(row.amount > 0){\r\n\t\tDeliveryService.update(row.id, data)\r\n\t\t  .then(response => {\r\n\t\t\tconsole.log(response.data);\r\n\t\t  })\r\n\t\t  .catch(e => {\r\n\t\t\tconsole.log(e);\r\n\t\t  });\r\n\t}\r\n\tif(row.payment > 0){\r\n\t\tPaymentService.update(row.id, data)\r\n\t\t  .then(response => {\r\n\t\t\tconsole.log(response.data);\r\n\t\t  })\r\n\t\t  .catch(e => {\r\n\t\t\tconsole.log(e);\r\n\t\t  });\r\n\t}\r\n      \r\n         \r\n    }\r\n\r\n\t const sortedRows = useMemo( () => {\r\n\t\tif (sortColumns.length === 0) return rows;\r\n\t\treturn [...rows].sort((a, b) => {\r\n\t\t  for (const sort of sortColumns) {\r\n\t\t\tconst comparator = getComparator(sort.columnKey);\r\n\t\t\tconst compResult = comparator(a, b);\r\n\t\t\tif (compResult !== 0) {\r\n\t\t\t  return sort.direction === 'ASC' ? compResult : -compResult;\r\n\t\t\t}\r\n\t\t  }\r\n\t\t  return 0;\r\n\t\t});\r\n\t  }, [rows, sortColumns]);\r\n\t  \r\n\tfunction generateExpenseBill(month){\r\n\t\tBillService.validateBillGeneration(month,\"expense\").then((response) => {\r\n\t\t\tconsole.log(response.data);\r\n\t\t\tvar bill = response.data;\r\n\t\t\t//bill object has bill, means the bill was generated\r\n\t\t\tif(bill.rate){\r\n\t\t\t\tsetConfirm(true);\r\n\t\t\t\tsetMessage(\"Bill already generated for the month \"+month+\". Do you want to continue? Please confirm to proceed.\");\r\n\t\t\t\thandleClickOpen();\r\n\t\t\t}else{\r\n\t\t\t\tgenerateBillAfterCheck(month);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\tconsole.log(e);\r\n\t\t\t//no bill exist for the month, so generate bill without prompting user\r\n\t\t\tif(e.response.status == 404){\r\n\t\t\t\tgenerateBillAfterCheck(month);\r\n\t\t\t}\r\n\t\t});\r\n    }\r\n\t\r\n\tfunction generateBillAfterCheck(month){\r\n\t\tconst paramsBill ={ \"month\" : month, \"type\": \"expense\"};\r\n\t\tBillService.generateBills(paramsBill).then((response) => {\r\n        var deliverys = response.data;\r\n\t\tsetMessage(\"Bill generated for the month \"+month+\".\");\r\n\t\thandleClickOpen();\r\n\t\tconsole.log(deliverys);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\t}\r\n\t\r\n\tfunction handleClickOpen () {\r\n      setOpen(true);\r\n    };\r\n  \r\n    function handleClose () {\r\n\t\tsetConfirm(false);\r\n\t\tsetOpen(false);\r\n    };\r\n\t\r\n\tfunction handleConfirm () {\r\n\t\tsetConfirm(false);\r\n\t\tgenerateBillAfterCheck(calendar.currentDate.format(\"MMM-YYYY\"));\r\n\t\tsetOpen(false);\r\n\t}\r\n  \r\n    return (\r\n      <div >\t\r\n\t\t<div>\r\n\t\t\t<Grid container spacing={{ xs: 1}} >\r\n\t\t\t\t<Grid item xs={6} sm={3}> \r\n\t\t\t\t\t<Link to={\"/gui/addExpense\"} className=\"badge\">\r\n\t\t\t\t\t  Add Expense\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t <Grid item xs={6} sm={3}> \r\n\t\t\t\t\t  <Link\r\n\t\t\t\t\t\tonClick={ () => generateExpenseBill(calendar.currentDate.format(\"MMM-YYYY\"))}\r\n\t\t\t\t\t\tclassName=\"badge\">\r\n\t\t\t\t\t\t Generate Expense Bill Month - {calendar.currentDate.format(\"MMM-YYYY\")}\r\n\t\t\t\t\t  </Link>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t  <Grid item xs={6} sm={3}> \r\n\t\t\t\t\t  <Link\r\n\t\t\t\t\t\tto={\"/gui/expense/\"+calendar.currentDate.clone().subtract(1, 'months').format('MMM-YYYY')}\r\n\t\t\t\t\t\tclassName=\"badge badge-warning\">\r\n\t\t\t\t\t\tPrev\r\n\t\t\t\t\t  </Link>\r\n\t\t\t\t\t  {calendar.currentDate.format(\"DD-MMM-YYYY\")}\r\n\t\t\t\t\t  <Link\r\n\t\t\t\t\t\tto={\"/gui/expense/\"+calendar.currentDate.clone().add(1, 'months').format('MMM-YYYY')}\r\n\t\t\t\t\t\tclassName=\"badge badge-warning\">\r\n\t\t\t\t\t\tNext\r\n\t\t\t\t\t  </Link>\r\n\t\t\t\t  </Grid>\r\n\t\t\t\t<Grid item xs={3} sm={2}>\r\n\t\t\t\t\t\t  <Link\r\n\t\t\t\t\t\t\tto={\"/gui/expenseBills/\"+calendar.currentDate.format('MMM-YYYY')}\r\n\t\t\t\t\t\t\tclassName=\"badge\">\r\n\t\t\t\t\t\t\t Print - {calendar.currentDate.format(\"MMM-YYYY\")} \r\n\t\t\t\t\t\t  </Link>\r\n\t\t\t\t</Grid> \r\n\t\t\t\t<Grid item xs={3} sm={1}>\r\n\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t<Button variant=\"warning\" className=\"badge\">\r\n\t\t\t\t\t\t\t\t<CSVLink data={sortedRows} filename={'expense.txt'}>Export</CSVLink>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Grid> \t\t  \r\n          </Grid> \r\n\t\t  </div>\r\n        <div>\r\n          <DataGrid columns={columns} onRowsChange={rowChange} \r\n\t\t  defaultColumnOptions={{\r\n            sortable: true,\r\n            resizable: true\r\n          }}\r\n          rows={sortedRows}\r\n          sortColumns={sortColumns}\r\n          onSortColumnsChange={setSortColumns}/>  \r\n        </div>\r\n\t\t\r\n\t\t<Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\">\r\n          <DialogTitle id=\"alert-dialog-title\">\r\n            {\"Bills\"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n\t\t\t{message}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n\t\t  {confirm ? (\r\n\t\t\t<Button onClick={handleConfirm}>Confirm</Button>\r\n\t\t  ) : \"\"}\r\n            <Button onClick={handleClose}>Close</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default ExpenseList;","import React, { Component } from \"react\";\r\nimport CustomerService from \"../services/customer.service\";\r\nimport DeliveryService from \"../services/delivery.service\";\r\nimport PaymentService from \"../services/payment.service\";\r\nimport moment from \"moment\";\r\n\r\nexport default class AddExpense extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\tthis.saveExpense = this.saveExpense.bind(this);\r\n\tthis.onChangeQuantity = this.onChangeQuantity.bind(this);\r\n\tthis.onChangeAmount = this.onChangeAmount.bind(this);\r\n\tthis.onChangePayment = this.onChangePayment.bind(this);\r\n\tthis.newExpense = this.newExpense.bind(this);\r\n\tthis.onChangeCategory=this.onChangeCategory.bind(this);\r\n\t\r\n\tthis.onDate = this.onDate.bind(this);\r\n\t\r\n    this.myRef = React.createRef();\r\n\r\n    this.state = {\r\n      id: null,\r\n      partyId: null,\r\n      quantity: null,\r\n      date:null,\r\n      month: null,\r\n\t  type: \"expense\",\r\n    category:null,\r\n\t  amount: null,\r\n\t  payment: null,\r\n\t  submitted: false,\r\n\t  routes:[],\r\n\t  inputDate: moment().format(\"DD-MMM-YYYY\")\r\n    };\r\n  }\r\n  \r\n  onChangeQuantity(e){\r\n\t  this.setState({\r\n\t\t  quantity: e.target.value\r\n\t\t});\r\n  }\r\n  \r\n  onChangePayment(e){\r\n\t   this.setState({\r\n\t\t  payment: e.target.value\r\n\t\t});\r\n  }\r\n  \r\n  onChangeAmount(e){\r\n\t   this.setState({\r\n\t\t  amount: e.target.value\r\n\t\t});\r\n  }\r\n  \r\n  onDate(e){\r\n\t   this.setState({\r\n\t\t  inputDate: e.target.value\r\n\t\t});\r\n  }\r\n  \r\n  onChangeCategory(e){\r\n    this.setState({\r\n     category: e.target.value\r\n   });\r\n }\r\n  \r\n  \r\n  saveExpense(e) {\r\n\te.target.disabled=true;\r\n\tvar data = {\r\n\t\t  partyId: this.myRef.current.value,\r\n\t\t  quantity: this.state.quantity,\r\n\t\t  date:moment(this.state.inputDate, \"DD-MMM-YYYY\").format(\"DD\"),\r\n\t\t  month: moment(this.state.inputDate, \"DD-MMM-YYYY\").format(\"MMM-YYYY\"),\r\n\t\t  type: \"expense\",\r\n      category: this.state.category,\r\n\t\t  amount: this.state.amount,\r\n\t\t  payment: this.state.payment,\r\n\t\t  active: true\r\n\t\t};\r\n\t\t\r\n\tif(this.state.amount > 0){\r\n\t\tDeliveryService.create(data)\r\n\t\t  .then(response => {\r\n\t\t\tthis.setState({\r\n\t\t\t  id: response.data.id,\r\n\t\t\t  amount: response.data.amount,\r\n\t\t\t  submitted: true\r\n\t\t\t});\r\n\t\t\tconsole.log(response.data);\r\n\t\t  })\r\n\t\t  .catch(e => {\r\n\t\t\tconsole.log(e);\r\n\t\t  });\r\n\t}\r\n\tif(this.state.payment > 0){\r\n\t\tPaymentService.create(data)\r\n\t\t  .then(response => {\r\n\t\t\tthis.setState({\r\n\t\t\t  id: response.data.id,\r\n\t\t\t  payment: response.data.payment,\r\n\t\t\t  submitted: true\r\n\t\t\t});\r\n\t\t\tconsole.log(response.data);\r\n\t\t\te.target.disabled=false;\r\n\t\t  })\r\n\t\t  .catch(e => {\r\n\t\t\tconsole.log(e);\r\n\t\t  });\r\n\t}\r\n  }\r\n\r\n  newExpense() {\r\n    this.setState({\r\n      id: null,\r\n      partyId: null,\r\n      quantity: null,\r\n      date:null,\r\n      month: null,\r\n\t  type: \"expense\",\r\n    category:null,\r\n\t  amount: null,\r\n\t  payment: null,\r\n\t  submitted: false,\r\n\t  inputDate: moment().format(\"DD-MMM-YYYY\")\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getRoute();\r\n  }\r\n\r\n  getRoute(){\r\n\tvar paramCustomer = {searchFlag: \"non-customer\"};\r\n    CustomerService.getAll(paramCustomer)\r\n      .then(response => {\r\n\t\tthis.setState({\r\n\t\t  routes: response.data\r\n\t\t});\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { routes } = this.state;\r\n    return (\r\n      <div className=\"submit-form\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>You submitted successfully!</h4>\r\n            <button className=\"btn btn-success\" onClick={this.newExpense}>\r\n              Add\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"name\">Vendor/Staff Name</label>\r\n                  <div className=\"select-container\">\r\n                    <select className=\"form-control\" value={this.state.partyId} \r\n\t\t\t\t\t\tonChange={this.onChangeRoute} ref={this.myRef} name=\"partyId\">\r\n\t\t\t\t\t\t  {routes && routes.map((option) => (\r\n\t\t\t\t\t\t\t<option value={option.id}>{option.name}</option>\r\n\t\t\t\t\t\t  ))}\r\n                    </select>\r\n                  </div>\r\n            </div>\r\n\t\t\t<div className=\"form-group\">\r\n              <label htmlFor=\"quantity\">Quantity</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                id=\"quantity\"\r\n                required\r\n                value={this.state.quantity}\r\n                onChange={this.onChangeQuantity}\r\n                name=\"quantity\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"amount\">Bill Amount</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                id=\"amount\"\r\n                required\r\n                value={this.state.amount}\r\n                onChange={this.onChangeAmount}\r\n                name=\"amount\"\r\n              />\r\n            </div>\r\n\t\t\t<div className=\"form-group\">\r\n              <label htmlFor=\"payment\">Payment Amount</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                id=\"payment\"\r\n                required\r\n                value={this.state.payment}\r\n                onChange={this.onChangePayment}\r\n                name=\"payment\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"category\">Category </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"category\"\r\n                required\r\n                value={this.state.category}\r\n                onChange={this.onChangeCategory}\r\n                name=\"category\"\r\n              />\r\n            </div>\r\n\t\t\t<div className=\"form-group\">\r\n                      <label htmlFor=\"inputDate\">Date</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"inputDate\"\r\n                        required\r\n\t\t\t\t\t\treadOnly =\"readOnly\"\r\n                        value={this.state.inputDate}\r\n                        onChange={this.onDate}\r\n                        name=\"inputDate\"\r\n                      />\r\n            </div>\r\n            <button onClick={this.saveExpense} className=\"btn btn-success\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import http from \"../http-common\";\r\n\r\nclass AuthService {\r\n   getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem('user'));\r\n  }\r\n  setCurrentUser(userName){\r\n\t  if(userName == 'Alok'){\r\n\t\t  var user = {\r\n\t\t\t  id: 'alok',\r\n\t\t\t  roles: ['ROLE_ADMIN','ROLE_MODERATOR']\r\n\t\t  };\r\n\t\tlocalStorage.setItem(\"user\", JSON.stringify(user));\r\n\t  }\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import React, { Component } from \"react\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    AuthService.setCurrentUser(\"Alok\");\r\n\tconsole.log(AuthService.getCurrentUser());\r\n\tthis.props.history.push(\"/gui/routes\");\r\n\twindow.location.reload();\r\n  }\r\n\r\n  render() {\r\n\t  return \"\";\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport moment from 'moment';\r\n\r\nimport AddCustomer from \"./components/add-customer.component\";\r\nimport AddProduct from \"./components/add-product.component\";\r\nimport ProductList from \"./components/product-list.component\";\r\nimport SellerProduct from \"./components/seller-product.component\";\r\nimport ProjectData from \"./components/daily-delivery.component\";\r\nimport AddRoute from \"./components/add-route.component\";\r\nimport RoutesList from \"./components/routes-list.component\";\r\nimport CustomerCalendar from \"./components/customer-calendar.component\";\r\nimport CustomerDaily from \"./components/customer-today.component\";\r\nimport CollectionBillsList from \"./components/collection-bills-list.component\";\r\nimport EmployeeDaily from \"./components/customer-today.component\";\r\nimport CollectionDaily from \"./components/collection-daily.component\";\r\nimport CustomerList from \"./components/customer-list.component\";\r\nimport Bills from \"./components/bills.component\";\r\nimport CollectionBills from \"./components/collection-bills.component\";\r\nimport ExpenseBills from \"./components/expense-bills.component\";\r\nimport ExpenseList from \"./components/expense-list.component\";\r\nimport AddExpense from \"./components/add-expense.component\";\r\nimport Login from \"./components/login.component\";\r\nimport AuthService from \"./services/auth.service\";\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\t  showModeratorBoard: true,\r\n      showAdminBoard: false,\r\n      currentUser: undefined\r\n    };\r\n\tconsole.log(props);\r\n\t//AuthService.setCurrentUser(props);\r\n  }\r\n  componentDidMount() {\r\n    const user = AuthService.getCurrentUser();\r\n    if (user) {\r\n      this.setState({\r\n        currentUser: user,\r\n        showModeratorBoard: user.roles.includes(\"ROLE_MODERATOR\"),\r\n        showAdminBoard: user.roles.includes(\"ROLE_ADMIN\"),\r\n      });\r\n    }\r\n  }\r\n\t\r\n  render() {\r\n\t  const { currentUser, showModeratorBoard, showAdminBoard } = this.state;\r\n    return (\r\n      <Router>\r\n        <div >\r\n          <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n            <div className=\"navbar-nav mr-auto\">\r\n\t\t\t{showModeratorBoard && (\r\n\t\t\t        <li className=\"nav-item\">\r\n                <Link to={\"/gui/routes\"} className=\"nav-link\">\r\n                  Routes\r\n                </Link>\r\n              </li>\r\n\t\t\t)}\r\n      {showModeratorBoard && (\r\n\t\t\t      <li className=\"nav-item\">\r\n              <Link to={\"/gui/customerDaily/\"+moment().format(\"DD-MMM-YYYY\")} className=\"nav-link\">\r\n                Today\r\n              </Link>\r\n            </li>\r\n\t\t\t)}\r\n      \r\n\t\t\t{showAdminBoard && (\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/gui/customerCalendar/\"+moment().format(\"MMM-YYYY\")} className=\"nav-link\">\r\n                  Calendar \r\n                </Link>\r\n              </li>\r\n\t\t\t)}\r\n\t\t\r\n\t\t\t{showModeratorBoard && (\r\n\t\t\t  <li className=\"nav-item\">\r\n                <Link to={\"/gui/expense/\"+moment().format(\"MMM-YYYY\")} className=\"nav-link\">\r\n                  Expense\r\n                </Link>\r\n              </li>\r\n\t\t\t)}\r\n      {showAdminBoard && (\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/gui/customers\"} className=\"nav-link\">\r\n                  Party\r\n                </Link>\r\n              </li>\r\n\t\t\t)}\r\n      {showModeratorBoard && (\r\n\t\t\t  <li className=\"nav-item\">\r\n                <Link to={\"/gui/collectionDaily/\"+moment().format(\"DD-MMM-YYYY\")} className=\"nav-link\">\r\n                  Collection\r\n                </Link>\r\n              </li>\r\n\t\t\t)}\r\n        {showModeratorBoard && (\r\n\t\t\t  <li className=\"nav-item\">\r\n                <Link to={\"/gui/CollectionBillsList/\"+moment().format(\"DD-MMM-YYYY\")} className=\"nav-link\">\r\n                  CollectionBillsList\r\n                </Link>\r\n              </li>\r\n\t\t\t)}\r\n    {showAdminBoard && (\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/gui/productlist\"} className=\"nav-link\">\r\n                  ProductList\r\n                </Link>\r\n              </li>\r\n\t\t\t)}\r\n      {showAdminBoard && (\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/gui/sellerProduct\"} className=\"nav-link\">\r\n                  SellerProduct\r\n                </Link>\r\n              </li>\r\n\t\t\t)}\r\n\r\n            </div>\r\n          </nav>\r\n\r\n          <div className=\"container mt-3\">\r\n            <Switch>\r\n              <Route exact path={[\"/\", \"/gui/routes\"]} component={RoutesList} />\r\n              <Route exact path=\"/gui/customers\" component={CustomerList} />\r\n              <Route exact path=\"/gui/addCustomer\" component={AddCustomer} />\r\n              <Route exact path=\"/gui/productlist\" component={ProductList} />\r\n              <Route exact path=\"/gui/addProduct\" component={AddProduct} />\r\n              <Route exact path=\"/gui/sellerProduct\" component={SellerProduct} />\r\n              <Route exact path=\"/gui/dailyDelivery/:id\" component={ProjectData} />\r\n\t\t\t        <Route exact path=\"/gui/dailyDelivery/:id/:pending\" component={ProjectData} />\r\n              <Route exact path=\"/gui/route\" component={AddRoute} />\r\n              <Route exact path=\"/gui/routes\" component={RoutesList} />\r\n              <Route exact path=\"/gui/customerCalendar/:date\" component={CustomerCalendar} />\r\n              <Route exact path=\"/gui/customerDaily/:date\" component={CustomerDaily} />\r\n              <Route exact path=\"/gui/bills/:month\" component={Bills} />\r\n              <Route exact path=\"/gui/collectionbills/:from/:to\" component={CollectionBills} />\r\n              <Route exact path=\"/gui/collectionbills/:from/:to/:partyId\" component={CollectionBills} />\r\n              <Route exact path=\"/gui/expenseBills/:month\" component={ExpenseBills} />\r\n              <Route exact path=\"/gui/bills/:month/:partyId\" component={Bills} />\r\n\t\t\t        <Route exact path=\"/gui/expense/:month\" component={ExpenseList} />\r\n\t\t\t        <Route exact path=\"/gui/addExpense\" component={AddExpense} />\r\n\t\t\t        <Route exact path=\"/gui/login\" component={Login} />\r\n              <Route exact path=\"/gui/collectionDaily/:date\" component={CollectionDaily} />\r\n              <Route exact path=\"/gui/CollectionBillsList/:date\" component={CollectionBillsList} />\r\n              <Route exact path=\"/gui/employeeDaily/:date\" component={EmployeeDaily} />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { StyledEngineProvider } from '@mui/material/styles';\r\nReactDOM.render(\r\n  <StyledEngineProvider injectFirst>\r\n    <App />\r\n  </StyledEngineProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}