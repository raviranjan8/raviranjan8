{"version":3,"sources":["http-common.js","services/customer.service.js","services/route.service.js","components/add-customer.component.js","services/delivery.service.js","services/bill.service.js","components/modal.component.js","components/daily-delivery.component.js","components/add-route.component.js","services/route.stock.service.js","components/routes-list.component.js","components/customer-calendar.component.js","components/customer-list.component.js","components/editor/dropdown.component.js","components/hooks/route.hook.js","App.js","serviceWorker.js","index.js"],"names":["axios","create","baseURL","headers","params","http","get","id","data","post","put","delete","AddCustomer","props","onChangeName","bind","onChangeAddress","onChangeStartDate","onChangeActive","onChangeRoute","onChangeDefaultQuantity","onChangeRouteSeq","saveTutorial","newTutorial","getRoute","myRef","React","createRef","today","moment","state","name","address","active","startDate","format","routeId","defaultQuantity","routes","routeSeq","submitted","e","this","setState","target","value","checked","current","CustomerService","then","response","console","log","catch","RouteService","getAll","className","onClick","htmlFor","type","required","onChange","ref","map","option","defaultChecked","Component","Modal","handleClickOpen","open","handleClose","getCustomerBill","savePayment","onChangePayment","payment","prevBill","currentBill","customerId","month","date","quantity","rate","bill","dues","BillService","bills","monthprev","subtract","align","Grid","container","spacing","xs","item","sm","onDate","onQuantity","onPrev","previousTitle","onUpdate","onNext","nextTitle","onModalClose","TableContainer","component","Paper","Table","sx","minWidth","aria-label","TableHead","TableRow","TableCell","TableBody","scope","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","ProjectData","handleModalOpen","idx","activeProject","modalTitle","projects","handleModalClose","handleNextProject","arr","length","handlePrevProject","handleModalUpdate","saveDelivery","getProjects","onChangeDate","match","dateObj","DeliveryService","update","response1","projectComponents","key","index","url","onModalOpen","md","columns","i","prevTitle","Item","styled","theme","typography","body2","padding","textAlign","color","palette","text","secondary","Project","AddRoute","Date","getDate","parseInt","getMonth","getFullYear","width","editor","TextEditor","resizable","formatter","disable","to","row","RoutesList","rowChange","saveRoute","rows","retrieveRoutes","currentDate","initialRows","Array","route","param","RouteStockService","stocks","stock","initialRow","customers","customerCount","customer","deliverys","totalDelivered","countOfCustomerDelivered","delivery","col","indexes","column","routeStockId","onRowsChange","CustomerCalendar","initialCalendar","useState","setRows","calendar","setCalendar","useEffect","paramsBill","clone","add","columnVal","columnId","cutomerId","rowData","constructDeliveryUpdateData","stopPropagation","event","onRowChange","isCellSelected","routeName","selectData","setSelectData","useRoutes","textEditorClassname","autoFocus","selectDataRecord","editorOptions","editOnClick","CustomerList","_sort","_order","endDate","App","exact","path","Boolean","window","location","hostname","ReactDOM","render","StyledEngineProvider","injectFirst","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"8TAEeA,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,iCACTC,QAAS,CACP,eAAgB,mBAChB,8BAA+B,OCsBpB,M,+FAzBNC,GACL,OAAOC,EAAKC,IAAI,aAAc,CAAEF,a,0BAG9BG,GACF,OAAOF,EAAKC,IAAL,qBAAuBC,M,6BAGzBC,GACL,OAAOH,EAAKI,KAAK,aAAcD,K,6BAG1BD,EAAIC,GACT,OAAOH,EAAKK,IAAL,qBAAuBH,GAAMC,K,6BAG/BD,GACL,OAAOF,EAAKM,OAAL,qBAA0BJ,M,kCAIjC,OAAOF,EAAKM,OAAO,kB,MCIR,M,+FAzBNP,GACL,OAAOC,EAAKC,IAAI,UAAW,CAAEF,a,0BAG3BG,GACF,OAAOF,EAAKC,IAAL,kBAAoBC,M,6BAGtBC,GACL,OAAOH,EAAKI,KAAK,UAAWD,K,6BAGvBD,EAAIC,GACT,OAAOH,EAAKK,IAAL,kBAAoBH,GAAMC,K,6BAG5BD,GACL,OAAOF,EAAKM,OAAL,kBAAuBJ,M,kCAI9B,OAAOF,EAAKM,OAAO,e,MCnBFC,E,kDACnB,WAAYC,GAAQ,IAAD,uBACjB,cAAMA,IACDC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,gBAAkB,EAAKA,gBAAgBD,KAArB,gBACvB,EAAKE,kBAAoB,EAAKA,kBAAkBF,KAAvB,gBACzB,EAAKG,eAAiB,EAAKA,eAAeH,KAApB,gBACtB,EAAKI,cAAgB,EAAKA,cAAcJ,KAAnB,gBACrB,EAAKK,wBAA0B,EAAKA,wBAAwBL,KAA7B,gBAC/B,EAAKM,iBAAmB,EAAKA,iBAAiBN,KAAtB,gBACxB,EAAKO,aAAe,EAAKA,aAAaP,KAAlB,gBACpB,EAAKQ,YAAc,EAAKA,YAAYR,KAAjB,gBACnB,EAAKS,SAAW,EAAKA,SAAST,KAAd,gBAChB,EAAKU,MAAQC,IAAMC,YAEnB,IAAMC,EAAQC,MAdG,OAejB,EAAKC,MAAQ,CACXvB,GAAI,KACJwB,KAAM,GACNC,QAAS,GACTC,QAAQ,EACRC,UAAWN,EAAMO,OAAO,eACxBC,QAAS,GACTC,gBAAiB,EACjBC,OAAO,GACPC,SAAS,KACTC,WAAW,GAzBI,E,yDA6BNC,GACXC,KAAKC,SAAS,CACZZ,KAAMU,EAAEG,OAAOC,U,sCAIHJ,GACdC,KAAKC,SAAS,CACZX,QAASS,EAAEG,OAAOC,U,uCAILJ,GACfC,KAAKC,SAAS,CACZJ,SAAUE,EAAEG,OAAOC,U,wCAILJ,GAChBC,KAAKC,SAAS,CACZT,UAAWO,EAAEG,OAAOC,U,qCAITJ,GACbC,KAAKC,SAAS,CACZV,OAAQQ,EAAEG,OAAOE,Y,oCAIPL,GACZC,KAAKC,SAAS,CACZP,QAASK,EAAEG,OAAOC,U,8CAIEJ,GACtBC,KAAKC,SAAS,CACZN,gBAAiBI,EAAEG,OAAOC,U,qCAId,IAAD,OACTrC,EAAO,CACTuB,KAAMW,KAAKZ,MAAMC,KACjBC,QAASU,KAAKZ,MAAME,QACpBE,UAAWQ,KAAKZ,MAAMI,UACtBD,OAAQS,KAAKZ,MAAMG,OACnBG,QAASM,KAAKjB,MAAMsB,QAAQF,MAC5BR,gBAAiBK,KAAKZ,MAAMO,gBAC5BE,SAAUG,KAAKZ,MAAMS,UAGvBS,EAAgB/C,OAAOO,GACpByC,MAAK,SAAAC,GACJ,EAAKP,SAAS,CACZpC,GAAI2C,EAAS1C,KAAKD,GAClBwB,KAAMmB,EAAS1C,KAAKuB,KACpBC,QAASkB,EAAS1C,KAAKwB,QACvBC,OAAQiB,EAAS1C,KAAKyB,OACtBC,UAAWgB,EAAS1C,KAAK0B,UACzBE,QAASc,EAAS1C,KAAK4B,QACvBC,gBAAiBa,EAAS1C,KAAK6B,gBAC/BE,SAAUW,EAAS1C,KAAK+B,SACxBC,WAAW,IAEbW,QAAQC,IAAIF,EAAS1C,SAEtB6C,OAAM,SAAAZ,GACLU,QAAQC,IAAIX,Q,oCAKhBC,KAAKC,SAAS,CACZpC,GAAI,KACJwB,KAAM,GACNC,QAAS,GACTE,UAAWL,MAASM,OAAO,eAC3BF,QAAQ,EACRG,QAAS,GACTC,gBAAgB,EAChBE,SAAU,KACVC,WAAW,M,0CAKbE,KAAKlB,a,iCAGI,IAAD,OACR8B,EAAaC,SACVN,MAAK,SAAAC,GACJ,EAAKP,SAAS,CACZL,OAAQY,EAAS1C,OAEnB2C,QAAQC,IAAIF,EAAS1C,SAEtB6C,OAAM,SAAAZ,GACLU,QAAQC,IAAIX,Q,+BAIR,IACAH,EAAWI,KAAKZ,MAAhBQ,OACR,OACE,yBAAKkB,UAAU,eACZd,KAAKZ,MAAMU,UACV,6BACE,2DACA,4BAAQgB,UAAU,kBAAkBC,QAASf,KAAKnB,aAAlD,QAKF,6BACE,yBAAKiC,UAAU,cACb,2BAAOE,QAAQ,QAAf,iBACA,2BACEC,KAAK,OACLH,UAAU,eACVjD,GAAG,OACHqD,UAAQ,EACRf,MAAOH,KAAKZ,MAAMC,KAClB8B,SAAUnB,KAAK5B,aACfiB,KAAK,UAIT,yBAAKyB,UAAU,cACb,2BAAOE,QAAQ,WAAf,WACA,2BACEC,KAAK,OACLH,UAAU,eACVjD,GAAG,UACHqD,UAAQ,EACRf,MAAOH,KAAKZ,MAAME,QAClB6B,SAAUnB,KAAK1B,gBACfe,KAAK,aAIT,yBAAKyB,UAAU,cACb,2BAAOE,QAAQ,aAAf,cACA,2BACEC,KAAK,OACLH,UAAU,eACVjD,GAAG,YACHqD,UAAQ,EACRf,MAAOH,KAAKZ,MAAMI,UAClB2B,SAAUnB,KAAKzB,kBACfc,KAAK,eAGT,yBAAKyB,UAAU,cACb,2BAAOE,QAAQ,mBAAf,oBACA,2BACEC,KAAK,OACLH,UAAU,eACVjD,GAAG,kBACHqD,UAAQ,EACRf,MAAOH,KAAKZ,MAAMO,gBAClBwB,SAAUnB,KAAKtB,wBACfW,KAAK,qBAGT,yBAAKyB,UAAU,cACT,2BAAOE,QAAQ,WAAf,SACA,yBAAKF,UAAU,oBACb,4BAAQA,UAAU,eAAeX,MAAOH,KAAKZ,MAAMM,QACnDyB,SAAUnB,KAAKvB,cAAe2C,IAAKpB,KAAKjB,MAAOM,KAAK,WACjDO,EAAOyB,KAAI,SAACC,GAAD,OACV,4BAAQnB,MAAOmB,EAAOzD,IAAKyD,EAAOjC,YAK9C,yBAAKyB,UAAU,cACb,2BAAOE,QAAQ,YAAf,iBACA,2BACEC,KAAK,OACLH,UAAU,eACVjD,GAAG,WACHqD,UAAQ,EACRf,MAAOH,KAAKZ,MAAMS,SAClBsB,SAAUnB,KAAKrB,iBACfU,KAAK,cAGT,yBAAKyB,UAAU,cACT,2BAAOE,QAAQ,UAAf,UACA,2BAAOC,KAAK,WAAWH,UAAU,eACjCjD,GAAG,SAASwB,KAAK,SACjB8B,SAAUnB,KAAKxB,eAAgB+C,eAAgBvB,KAAKZ,MAAMG,UAGhE,4BAAQwB,QAASf,KAAKpB,aAAckC,UAAU,mBAA9C,gB,GAnO6BU,a,iCCuB1B,M,+FAzBN9D,GACL,OAAOC,EAAKC,IAAI,qBAAsB,CAAEF,a,0BAGtCG,GACF,OAAOF,EAAKC,IAAL,6BAA+BC,M,6BAGjCC,GACL,OAAOH,EAAKI,KAAK,qBAAsBD,K,6BAGlCD,EAAIC,GACT,OAAOH,EAAKK,IAAL,6BAA+BH,GAAMC,K,6BAGvCD,GACL,OAAOF,EAAKM,OAAL,6BAAkCJ,M,kCAIzC,OAAOF,EAAKM,OAAO,0B,kHCIR,M,+FAzBNP,GACL,OAAOC,EAAKC,IAAI,SAAU,CAAEF,a,0BAG1BG,GACF,OAAOF,EAAKC,IAAL,iBAAmBC,M,6BAGrBC,GACL,OAAOH,EAAKI,KAAK,SAAUD,K,6BAGtBD,EAAIC,GACT,OAAOH,EAAKK,IAAL,iBAAmBH,GAAMC,K,6BAG3BD,GACL,OAAOF,EAAKM,OAAL,iBAAsBJ,M,kCAI7B,OAAOF,EAAKM,OAAO,c,MCAFwD,E,kDACjB,WAAYtD,GAAQ,IAAD,8BACjB,cAAMA,IAsDRuD,gBAAkB,WAChB,EAAKzB,SAAS,CACZ0B,MAAM,KAzDS,EA6DnBC,YAAc,WACZ,EAAK3B,SAAS,CACZ0B,MAAM,KA7DR,EAAKE,gBAAkB,EAAKA,gBAAgBxD,KAArB,gBACvB,EAAKyD,YAAc,EAAKA,YAAYzD,KAAjB,gBACnB,EAAK0D,gBAAkB,EAAKA,gBAAgB1D,KAArB,gBACvB,EAAKqD,gBAAkB,EAAKA,gBAAgBrD,KAArB,gBACvB,EAAKuD,YAAc,EAAKA,YAAYvD,KAAjB,gBAEnB,EAAKe,MAAQ,CACX4C,QAAS,KACTC,SAAU,GACVC,YAAa,GACbP,MAAM,GAER,EAAKE,gBAAgB1D,GAdJ,E,4DAiBH4B,GACdC,KAAKC,SAAS,CACZ+B,SAAUjC,EAAEG,OAAOC,U,oCAGT,IAAD,OACX,GAAGH,KAAKZ,MAAM4C,QAAQ,CACpB,IAAIlE,EAAO,CACTqE,WAAYnC,KAAK7B,MAAMgE,WACvBC,MAAOjD,IAAOa,KAAK7B,MAAMkE,KAAM,eAAe5C,OAAO,YACrD6C,SAAUtC,KAAKZ,MAAM8C,YAAYI,SACjCC,KAAMvC,KAAKZ,MAAM8C,YAAYK,KAC7BC,KAAMxC,KAAKZ,MAAM8C,YAAYM,KAC7BC,KAAMzC,KAAKZ,MAAM8C,YAAYO,KAC7BT,QAAShC,KAAKZ,MAAM4C,SAEtBU,EAAYnF,OAAOO,GAChByC,MAAK,SAAAC,GACJ,EAAKP,SAAS,CACZiC,YAAa,CACXI,SAAU,EAAKlD,MAAM8C,YAAYI,SACjCC,KAAM,EAAKnD,MAAM8C,YAAYK,KAC7BC,KAAM,EAAKpD,MAAM8C,YAAYM,KAC7BC,KAAM,EAAKrD,MAAM8C,YAAYO,KAC7BL,MAAOjD,IAAO,EAAKhB,MAAMkE,KAAM,eAAe5C,OAAO,YACrDuC,SAAU,EAAK5C,MAAM8C,YAAYF,QAAS,EAAK5C,MAAM8C,YAAYF,QAAU,GAAKxB,EAAS1C,KAAKkE,WAGlGvB,QAAQC,IAAIF,EAAS1C,MACrB,EAAK4D,kBACL,EAAKtC,MAAM4C,QAAQ,MAEpBrB,OAAM,SAAAZ,GACLU,QAAQC,IAAIX,S,sCAiBJ5B,GAAO,IAAD,OAChBkE,EAAOlD,IAAOhB,EAAMkE,KAAM,eAC1BD,EAAQC,EAAK5C,OAAO,YACpB/B,EAAQ,CAAE,WAAeS,EAAMgE,WAC3B,MAASC,GACbF,EAAc,CAACE,MAAOA,GAC1BM,EAAY7B,OAAOnD,GAAQ6C,MAAK,SAAAC,GAC5B,IAAImC,EAAQnC,EAAS1C,KACrB2C,QAAQC,IAAIiC,GACfA,GACFA,EAAMtB,KAAI,SAACmB,GACZN,EAAW,SAAeM,EAAKF,SAC/BJ,EAAW,KAASM,EAAKD,KACzBL,EAAW,KAASM,EAAKA,KACzBN,EAAW,KAASM,EAAKC,KACtBP,EAAW,QACZA,EAAW,QAAYA,EAAW,QAAYM,EAAKR,QAEnDE,EAAW,QAAYM,EAAKR,WAIxB,EAAK/B,SAAS,CACZiC,YAAaA,OAIlBvB,OAAM,SAAAZ,GACPU,QAAQC,IAAIX,MAGd,IAAI6C,EAAYP,EAAKQ,SAAS,EAAG,UAAUpD,OAAO,YAClD/B,EAAQ,CAAE,WAAeS,EAAMgE,WACrB,MAASS,GACnB,IAAIX,EAAW,CAACG,MAAOQ,GACvBF,EAAY7B,OAAOnD,GAAQ6C,MAAK,SAAAC,GAC9B,IAAImC,EAAQnC,EAAS1C,KACrB6E,GACFA,EAAMtB,KAAI,SAACmB,GACZP,EAAQ,SAAeO,EAAKF,SAC5BL,EAAQ,KAASO,EAAKD,KACtBN,EAAQ,KAASO,EAAKA,KACtBP,EAAQ,KAASO,EAAKC,KACnBR,EAAQ,QACTA,EAAQ,QAAYA,EAAQ,QAAYO,EAAKR,QAE7CC,EAAQ,QAAYO,EAAKR,WAI5B,EAAK/B,SAAS,CACZgC,SAAUA,IAEZxB,QAAQC,IAAI,EAAKtB,UAEduB,OAAM,SAAAZ,GACPU,QAAQC,IAAIX,Q,+BAKF,IAAD,EACyBC,KAAKZ,MAA9B6C,EADA,EACAA,SAAUC,EADV,EACUA,YACjB,OACE,6BACE,wBAAIY,MAAM,UAAU9C,KAAK7B,MAAMkB,MAC/B,kBAAC0D,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,CAAEC,GAAI,IAC7B,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACD,GAAI,GAAIE,GAAI,GACnB,yBAAKtC,UAAU,cACT,2BAAOE,QAAQ,QAAf,SACA,2BACEC,KAAK,OACLH,UAAU,eACVjD,GAAG,OACHqD,UAAQ,EACRf,MAAOH,KAAK7B,MAAMkE,KAClBlB,SAAUnB,KAAK7B,MAAMkF,OACrBhE,KAAK,UAGb,yBAAKyB,UAAU,cACT,2BAAOE,QAAQ,mBAAf,YACA,2BACEC,KAAK,OACLH,UAAU,eACVjD,GAAG,kBACHqD,UAAQ,EACRf,MAAOH,KAAK7B,MAAMwB,gBAClBwB,SAAUnB,KAAK7B,MAAMmF,WACrBjE,KAAK,qBAGT,yBAAKyB,UAAU,cACb,4BAAQA,UAAU,kBAAkBC,QAASf,KAAK7B,MAAMoF,QAAS,SAAUvD,KAAK7B,MAAMqF,cAAtF,KACC,IACD,4BAAQ1C,UAAU,kBAAkBC,QAASf,KAAK7B,MAAMsF,UAAxD,iBACC,IACD,4BAAQ3C,UAAU,kBAAkBC,QAASf,KAAK7B,MAAMuF,QAAS1D,KAAK7B,MAAMwF,UAA5E,IAAwF,WAE1F,yBAAK7C,UAAU,cACb,4BAAQA,UAAU,kBAAkBC,QAASf,KAAK7B,MAAMyF,cAAxD,0BAGZ,kBAACb,EAAA,EAAD,CAAMI,MAAI,EAACD,GAAI,GAAIE,GAAI,GACjB,yBAAKtC,UAAU,cAEf,kBAAC+C,EAAA,EAAD,CAAgBC,UAAWC,KACnB,kBAACC,EAAA,EAAD,CAAOC,GAAI,CAAEC,SAAU,KAAOC,aAAW,gBACvC,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,gBACA,kBAACA,EAAA,EAAD,CAAWxB,MAAM,SAAjB,eAAsCb,EAASG,MAA/C,KACA,kBAACkC,EAAA,EAAD,CAAWxB,MAAM,SAAjB,kBAAyCZ,EAAYE,MAArD,OAGJ,kBAACmC,EAAA,EAAD,KACI,kBAACF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWR,UAAU,KAAKU,MAAM,OAAhC,YAGA,kBAACF,EAAA,EAAD,CAAWxB,MAAM,SAASb,EAASK,UACnC,kBAACgC,EAAA,EAAD,CAAWxB,MAAM,SAASZ,EAAYI,WAExC,kBAAC+B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWR,UAAU,KAAKU,MAAM,OAAhC,QAGA,kBAACF,EAAA,EAAD,CAAWxB,MAAM,SAASb,EAASM,MACnC,kBAAC+B,EAAA,EAAD,CAAWxB,MAAM,SAASZ,EAAYK,OAExC,kBAAC8B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWR,UAAU,KAAKU,MAAM,OAAhC,QAGA,kBAACF,EAAA,EAAD,CAAWxB,MAAM,SAASb,EAASO,MACnC,kBAAC8B,EAAA,EAAD,CAAWxB,MAAM,SAASZ,EAAYM,OAExC,kBAAC6B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWR,UAAU,KAAKU,MAAM,OAAhC,WAGA,kBAACF,EAAA,EAAD,CAAWxB,MAAM,SAASb,EAASD,SACnC,kBAACsC,EAAA,EAAD,CAAWxB,MAAM,SAASZ,EAAYF,UAExC,kBAACqC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWR,UAAU,KAAKU,MAAM,OAAhC,QAGA,kBAACF,EAAA,EAAD,CAAWxB,MAAM,SAASb,EAASQ,MACnC,kBAAC6B,EAAA,EAAD,CAAWxB,MAAM,SAASZ,EAAYO,WAOtD,yBAAK3B,UAAU,cACT,2BAAOE,QAAQ,WAAf,WACA,2BACEC,KAAK,OACLH,UAAU,eACVjD,GAAG,UACHqD,UAAQ,EACRf,MAAOH,KAAKZ,MAAM4C,QAClBb,SAAUnB,KAAK+B,gBACf1C,KAAK,aAGb,4BAAQyB,UAAU,kBAAkBC,QAASf,KAAK8B,aAAlD,sBAIR,kBAAC2C,EAAA,EAAD,CACE9C,KAAM3B,KAAKZ,MAAMuC,KACjB+C,QAAS1E,KAAK4B,YACd+C,kBAAgB,qBAChBC,mBAAiB,4BACjB,kBAACC,EAAA,EAAD,CAAahH,GAAG,sBACb,YAEH,kBAACiH,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAmBlH,GAAG,4BAAtB,qBACqBmC,KAAKZ,MAAM4C,QADhC,mBAIF,kBAACgD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQlE,QAASf,KAAK4B,aAAtB,gB,GA9PuB5C,IAAMwC,WCXpB0D,E,kDAEnB,WAAY/G,GAAQ,IAAD,8BACjB,cAAMA,IAsCRgH,gBAAkB,SAACC,GACjB,EAAKnF,SAAS,CACZoF,cAAeD,EACfE,WAAY,EAAKlG,MAAMmG,SAASH,GAAK/F,KACrCiD,SAAU,EAAKlD,MAAMmG,SAASH,GAAKzF,gBACnC0C,KAAM,EAAKjD,MAAMiD,KACjBF,WAAY,EAAK/C,MAAMmG,SAASH,GAAKvH,MA7CtB,EAiDnB2H,iBAAmB,WACjB,EAAKvF,SAAS,CACZoF,cAAe,MAnDA,EAuDnBI,kBAAoB,WAElB,IAAIC,EAAM,EAAKtG,MAAMmG,SAASI,OAE1BP,GADAA,EAAM,EAAKhG,MAAMiG,cAAgB,GACrBK,EAEhB,EAAKzF,SAAS,CACZoF,cAAeD,EACfE,WAAY,EAAKlG,MAAMmG,SAASH,GAAK/F,KACrCiD,SAAU,EAAKlD,MAAMmG,SAASH,GAAKzF,gBACnC0C,KAAM,EAAKjD,MAAMiD,KACjBF,WAAY,EAAK/C,MAAMmG,SAASH,GAAKvH,MAlEtB,EAuEnB+H,kBAAoB,WAClB,IAAIF,EAAM,EAAKtG,MAAMmG,SAASI,OAE9B,GAAY,KADRP,EAAM,EAAKhG,MAAMiG,eAEnB,IAAID,EAAMM,EAAM,OAEZN,EAAMA,EAAK,EAGjB,EAAKnF,SAAS,CACZoF,cAAeD,EACfE,WAAY,EAAKlG,MAAMmG,SAASH,GAAK/F,KACrCiD,SAAU,EAAKlD,MAAMmG,SAASH,GAAKzF,gBACnC0C,KAAM,EAAKjD,MAAMiD,KACjBF,WAAY,EAAK/C,MAAMmG,SAASH,GAAKvH,MArFtB,EA0FnBgI,kBAAoB,WAClB,EAAKC,aAAa,EAAK1G,MAAM+C,WAAW,EAAK/C,MAAMiD,KAAM,EAAKjD,MAAMkD,UACpE,EAAKmD,qBA1FL,EAAKM,YAAa,EAAKA,YAAY1H,KAAjB,gBAClB,EAAKyH,aAAc,EAAKA,aAAazH,KAAlB,gBACnB,EAAK2H,aAAe,EAAKA,aAAa3H,KAAlB,gBACpB,EAAKoH,kBAAoB,EAAKA,kBAAkBpH,KAAvB,gBACzB,EAAKK,wBAA0B,EAAKA,wBAAwBL,KAA7B,gBAE/B,EAAKe,MAAQ,CACXmG,SAAU,GACVF,cAAe,GACfC,WAAY,GACZnD,WAAY,KACZG,SAAU,GACVD,KAAMlD,MAASM,OAAO,gBAdP,E,gEAqBjBO,KAAK+F,YAAY/F,KAAK7B,MAAM8H,MAAMvI,OAAOG,M,kCAG/BA,GAAK,IAAD,OACRH,EAAQ,CAAE,QAAYG,GAC5ByC,EAAgBO,OAAOnD,GACpB6C,MAAK,SAAAC,GACJ,EAAKP,SAAS,CACZsF,SAAU/E,EAAS1C,OAErB2C,QAAQC,IAAIF,EAAS1C,SAEtB6C,OAAM,SAAAZ,GACLU,QAAQC,IAAIX,Q,8CA6DMA,GACtBC,KAAKC,SAAS,CACZqC,SAAUvC,EAAEG,OAAOC,U,mCAGVJ,GACXC,KAAKC,SAAS,CACZoC,KAAMtC,EAAEG,OAAOC,U,mCAILtC,EAAIwE,EAAMC,GACtB,IAAM4D,EAAU/G,IAAOkD,EAAM,eACzBvE,EAAO,CACTqE,WAAYtE,EACZwE,KAAM6D,EAAQzG,OAAO,MACrB2C,MAAO8D,EAAQzG,OAAO,YACtB6C,SAAUA,GAGN5E,EAAU,CAAE,WAAeG,EACf,KAAQC,EAAKuE,KACb,MAASvE,EAAKsE,OAIhC+D,EAAgBtF,OAAOnD,GAAQ6C,MAAK,SAAAC,GAC7BA,EAAS1C,MAAQ0C,EAAS1C,KAAK6H,OAAS,GACzC7H,EAAI,GAAO0C,EAAS1C,KAAK,GAAGD,GAC5BsI,EAAgBC,OAAOtI,EAAI,GAAQA,GAAMyC,MAAK,SAAA8F,GAC5C5F,QAAQC,IAAI2F,EAAUvI,SAEvB6C,OAAM,SAAAZ,GACLU,QAAQC,IAAIX,OAGdoG,EAAgB5I,OAAOO,GAAMyC,MAAK,SAAA8F,GAChC5F,QAAQC,IAAI2F,EAAUvI,SAEvB6C,OAAM,SAAAZ,GACLU,QAAQC,IAAIX,SAIjBY,OAAM,SAAAZ,GACLU,QAAQC,IAAIX,MAGhBC,KAAKZ,MAAMiD,KAAKlD,MAASM,OAAO,iB,+BAGxB,IAAD,OACC8F,EAAavF,KAAKZ,MAAlBmG,SAmBR,IAjBmBH,EAAKM,EAiBlBY,EAAoBf,EAASlE,KAAI,SAACvD,EAAMsH,EAAKM,GAAZ,OACrC,kBAAC,EAAD,CACEa,IAAK,WAAazI,EAAKD,GACvB2I,MAAOpB,EACP/F,KAAMvB,EAAKuB,KACXoH,IAAK3I,EAAKwB,QACVoH,YAAa,EAAKvB,qBAItB,MAAgC,KAA7BnF,KAAKZ,MAAMiG,cAEV,6BACE,kBAACtC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,CAAEC,GAAI,EAAGyD,GAAI,GAAKC,QAAS,CAAE1D,GAAI,EAAGE,GAAI,EAAGuD,GAAI,KACjEL,IAMT,6BACE,kBAAC,EAAD,CACEjH,KAAMW,KAAKZ,MAAMkG,WACjB3F,gBAAiBK,KAAKZ,MAAMkD,SAC5BD,KAAMrC,KAAKZ,MAAMiD,KACjBF,WAAYnC,KAAKZ,MAAM+C,WACvBqB,cArCR,SAAmB4B,EAAKM,GAEtB,GAAY,IAARN,EACF,IAAIyB,EAAInB,EAAIC,OAAQ,OAEhBkB,EAAIzB,EAAK,EAGf,OAAOM,EAAImB,GAAGxH,KA6BOyH,CAAU9G,KAAKZ,MAAMiG,cAAeE,GACnD5B,WA5CWyB,EA4CUpF,KAAKZ,MAAMiG,cA5ChBK,EA4C+BH,EAzC9CG,GAFCN,EAAM,GACFM,EAAIC,QACFtG,MA0CRuE,aAAc5D,KAAKwF,iBACnB9B,OAAQ1D,KAAKyF,kBACblC,OAAQvD,KAAK4F,kBACbvC,OAAQrD,KAAKgG,aACb1C,WAAYtD,KAAKtB,wBACjB+E,SAAUzD,KAAK6F,yB,GAzMcrE,aAuNnCuF,EAAOC,YAAOjD,IAAPiD,EAAc,gBAAGC,EAAH,EAAGA,MAAH,mBAAC,eACvBA,EAAMC,WAAWC,OADK,IAEzBC,QAASH,EAAMhE,QAAQ,GACvBoE,UAAW,SACXC,MAAOL,EAAMM,QAAQC,KAAKC,eAKtBC,E,uKAEF,OAEF,kBAAC3E,EAAA,EAAD,CAAMI,MAAI,EAACD,GAAI,EAAGE,GAAI,EAAGuD,GAAI,EAAGJ,IAAKvG,KAAK7B,MAAMqI,MAAOzF,QAASf,KAAK7B,MAAMuI,YAAYrI,KAAK2B,KAAMA,KAAK7B,MAAMqI,QAC3G,kBAACO,EAAD,KAAM,4BAAK/G,KAAK7B,MAAMkB,KAAhB,MAAyBW,KAAK7B,MAAMsI,W,GALxBzH,IAAMwC,WC1OPmG,E,kDACnB,WAAYxJ,GAAQ,IAAD,uBACjB,cAAMA,IACDC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,gBAAkB,EAAKA,gBAAgBD,KAArB,gBACvB,EAAKE,kBAAoB,EAAKA,kBAAkBF,KAAvB,gBACzB,EAAKG,eAAiB,EAAKA,eAAeH,KAApB,gBACtB,EAAKO,aAAe,EAAKA,aAAaP,KAAlB,gBACpB,EAAKQ,YAAc,EAAKA,YAAYR,KAAjB,gBACnB,IAAMa,EAAQ,IAAI0I,KARD,OASjB,EAAKxI,MAAQ,CACXvB,GAAI,KACJwB,KAAM,GACNC,QAAS,GACTC,QAAQ,EACRC,UAAWN,EAAM2I,UAAY,IAAKC,SAAS5I,EAAM6I,WAAW,GAAI,IAAI7I,EAAM8I,cAE1ElI,WAAW,GAhBI,E,yDAoBNC,GACXC,KAAKC,SAAS,CACZZ,KAAMU,EAAEG,OAAOC,U,sCAIHJ,GACdC,KAAKC,SAAS,CACZX,QAASS,EAAEG,OAAOC,U,wCAIJJ,GAChBC,KAAKC,SAAS,CACZT,UAAWO,EAAEG,OAAOC,U,qCAITJ,GACbU,QAAQC,IAAIX,EAAEG,OAAOE,SACrBJ,KAAKC,SAAS,CACZV,OAAQQ,EAAEG,OAAOE,Y,qCAIL,IAAD,OACTtC,EAAO,CACTuB,KAAMW,KAAKZ,MAAMC,KACjBC,QAASU,KAAKZ,MAAME,QACpBE,UAAWQ,KAAKZ,MAAMI,UACtBD,OAAQS,KAAKZ,MAAMG,QAErBkB,QAAQC,IAAIV,KAAKZ,MAAMG,QACvBqB,EAAarD,OAAOO,GACjByC,MAAK,SAAAC,GACJ,EAAKP,SAAS,CACZpC,GAAI2C,EAAS1C,KAAKD,GAClBwB,KAAMmB,EAAS1C,KAAKuB,KACpBC,QAASkB,EAAS1C,KAAKwB,QACvBC,OAAQiB,EAAS1C,KAAKyB,OACtBC,UAAWgB,EAAS1C,KAAK0B,UAEzBM,WAAW,IAEbW,QAAQC,IAAIF,EAAS1C,SAEtB6C,OAAM,SAAAZ,GACLU,QAAQC,IAAIX,Q,oCAKhBC,KAAKd,MAAQ,IAAI0I,KACjB5H,KAAKC,SAAS,CACZpC,GAAI,KACJwB,KAAM,GACNC,QAAS,GACTE,UAAWQ,KAAKd,MAAM2I,UAAY,IAAKC,SAAS9H,KAAKd,MAAM6I,WAAW,GAAI,IAAI/H,KAAKd,MAAM8I,cACzFzI,QAAQ,EAERO,WAAW,M,+BAKb,OACE,yBAAKgB,UAAU,eACZd,KAAKZ,MAAMU,UACV,6BACE,2DACA,4BAAQgB,UAAU,kBAAkBC,QAASf,KAAKnB,aAAlD,QAKF,6BACE,yBAAKiC,UAAU,cACb,2BAAOE,QAAQ,QAAf,cACA,2BACEC,KAAK,OACLH,UAAU,eACVjD,GAAG,OACHqD,UAAQ,EACRf,MAAOH,KAAKZ,MAAMC,KAClB8B,SAAUnB,KAAK5B,aACfiB,KAAK,UAIT,yBAAKyB,UAAU,cACb,2BAAOE,QAAQ,WAAf,WACA,2BACEC,KAAK,OACLH,UAAU,eACVjD,GAAG,UACHqD,UAAQ,EACRf,MAAOH,KAAKZ,MAAME,QAClB6B,SAAUnB,KAAK1B,gBACfe,KAAK,aAIT,4BAAQ0B,QAASf,KAAKpB,aAAckC,UAAU,mBAA9C,gB,GA3H0BU,a,QCyBvB,M,+FAzBN9D,GACL,OAAOC,EAAKC,IAAI,eAAgB,CAAEF,a,0BAGhCG,GACF,OAAOF,EAAKC,IAAL,uBAAyBC,M,6BAG3BC,GACL,OAAOH,EAAKI,KAAK,eAAgBD,K,6BAG5BD,EAAIC,GACT,OAAOH,EAAKK,IAAL,uBAAyBH,GAAMC,K,6BAGjCD,GACL,OAAOF,EAAKM,OAAL,uBAA4BJ,M,kCAInC,OAAOF,EAAKM,OAAO,oB,aCdjB2I,EAAU,CACd,CAAEL,IAAK,WAAYlH,KAAM,YAAc4I,MAAO,GAAIC,OAAQC,IAAaC,WAAW,GAClF,CAAE7B,IAAK,UAAWlH,KAAM,SAAW4I,MAAO,GAAIG,WAAW,EAC/CC,UADV,SACoBlK,GACR,OAAO,oCACL,kBAAC,IAAD,CAAMmK,QAAQ,OACdC,GAAIpK,EAAMqK,IAAIlG,SAAY,kBAAoBnE,EAAMqK,IAAI3K,GAAM,GAC9DiD,UAAU,uBAFV,YAOd,CAAEyF,IAAK,YAAalH,KAAM,gBAAkB4I,MAAO,IAAMG,WAAW,GACpE,CAAE7B,IAAK,SAAUlH,KAAM,kBAAoB4I,MAAO,IAAMG,WAAW,GACnE,CAAE7B,IAAK,gBAAiBlH,KAAM,iBAAmB4I,MAAO,IAAMG,WAAW,GACzE,CAAE7B,IAAK,KAAMlH,KAAM,WAAa4I,MAAO,GAAKG,WAAW,GACvD,CAAE7B,IAAK,OAAQlH,KAAM,OAAS6I,OAAQC,IAAaC,WAAW,GAC9D,CAAE7B,IAAK,UAAWlH,KAAM,UAAY6I,OAAQC,IAAaC,WAAW,IAGjDK,E,kDACnB,WAAYtK,GAAQ,IAAD,8BACjB,cAAMA,IACDuK,UAAY,EAAKA,UAAUrK,KAAf,gBACjB,EAAKsK,UAAY,EAAKA,UAAUtK,KAAf,gBAEjB,EAAKe,MAAQ,CACXwJ,KAAM,IANS,E,gEAYjB5I,KAAK6I,mB,uCAEW,IAAD,OACXC,EAAc3J,MACd4J,EAAc,KAClBnI,EAAaC,SAASN,MAAK,SAAAC,GACvB,IAAIZ,EAASY,EAAS1C,KAC5B2C,QAAQC,IAAId,GACNmJ,EAAc,IAAIC,MAAMpJ,EAAO+F,QAC/B/F,EAAOyB,KAAI,SAAC4H,EAAOzC,GACjBuC,EAAYvC,GAAO,GACnBuC,EAAYvC,GAAZ,GAAyByC,EAAMpL,GAC/BkL,EAAYvC,GAAZ,KAA2ByC,EAAM5J,KACjC0J,EAAYvC,GAAZ,QAA8ByC,EAAM3J,WAE5CmB,QAAQC,IAAIqI,MAEPpI,OAAM,SAAAZ,GACLU,QAAQC,IAAIX,MAGhB,IAAMmJ,EAAQ,CACZ7G,KAAMyG,EAAYrJ,OAAO,MACzB2C,MAAO0G,EAAYrJ,OAAO,aAE5B0J,EAAkBtI,OAAOqI,GAAO3I,MAAK,SAACC,GACpC,IAAI4I,EAAS5I,EAAS1C,KACtBsL,GACFA,EAAO/H,KAAI,SAACgI,EAAO7C,GAAW,IAAD,gBACRuC,GADQ,IAC9B,IAAI,EAAJ,qBAAkC,CAAC,IAA3BO,EAA0B,QAChC,GAAGA,EAAWzL,IAAMwL,EAAM3J,QAAQ,CACnC4J,EAAU,SAAaD,EAAM/G,SAC7BgH,EAAU,aAAiBD,EAAMxL,GACjC,QAL6B,qCAW5B8C,OAAM,SAACZ,GACNU,QAAQC,IAAIX,MAEd,IAAIwJ,EAAW,KAEfjJ,EAAgBO,OADM,CAACtB,QAAQ,IACOgB,MAAK,SAACC,GAC1C+I,EAAY/I,EAAS1C,KACrBiL,EAAY1H,KAAI,SAACiI,EAAY9C,GAC3B,IADqC,EACjCgD,EAAgB,EADiB,cAEjBD,GAFiB,IAErC,IAAI,EAAJ,qBAA8B,CAAC,IAAvBE,EAAsB,QACzBH,EAAWzL,IAAM4L,EAAS/J,UACxB4J,EAAU,WACXA,EAAU,WAAeA,EAAU,WAAe3D,QAAQ8D,EAAS5L,IAEnEyL,EAAU,WAAe,GAC1BA,EAAU,WAAe,GAAGG,EAAS5L,IAEtC2L,MAViC,8BAarCF,EAAU,cAAkBE,QAG/B7I,OAAM,SAACZ,GACNU,QAAQC,IAAIX,MAGdoG,EAAgBtF,OAAOqI,GAAO3I,MAAK,SAACC,GAClC,IAAIkJ,EAAYlJ,EAAS1C,KACzB4L,GACFX,EAAY1H,KAAI,SAACiI,EAAY9C,GAC9B,IAAImD,EAAiB,EACjBC,EAA2B,EAC/BF,EAAUrI,KAAI,SAACwI,GACd,GAAGP,EAAWnH,WACZ,IAAI,IAAI0E,EAAE,EAAGA,EAAIyC,EAAWnH,WAAWwD,OAAQkB,IAChD,GAAGyC,EAAWnH,WAAW0E,IAAMgD,EAAS1H,WAAY,CAClDyH,IACAD,IAAmCE,EAASvH,SAC5C,UAKJgH,EAAU,OAAWM,EACrBN,EAAU,UAAcK,KAGrBlJ,QAAQC,IAAIqI,GACZ,EAAK9I,SAAS,CACZ2I,KAAMG,OAGTpI,OAAM,SAACZ,GACNU,QAAQC,IAAIX,Q,gCAKNyI,EAAKsB,GACb9J,KAAK2I,UAAUH,EAAIsB,EAAIC,SAASD,GAChC9J,KAAKC,SAAS,CACZ2I,KAAMJ,M,gCAIAA,EAAIsB,GACZ,GAAqB,YAAlBA,EAAIE,OAAOzD,IAAkB,CAC5B,IAAIzI,EAAO,CACTD,GAAI2K,EAAI3K,GACRwB,KAAMmJ,EAAInJ,KACVC,QAASkJ,EAAIlJ,SAEfsB,EAAawF,OAAOoC,EAAI3K,GAAIC,GACzByC,MAAK,SAAAC,GACJC,QAAQC,IAAIF,EAAS1C,SAEtB6C,OAAM,SAAAZ,GACLU,QAAQC,IAAIX,UAEf,EACCjC,EAAO,CACTD,GAAI2K,EAAIyB,aACRvK,QAAS8I,EAAI3K,GACbyE,UAAWkG,EAAIlG,SACfD,KAAMlD,MAASM,OAAO,MACtB2C,MAAOjD,MAASM,OAAO,cAEjB5B,GACNsL,EAAkB/C,OAAOtI,EAAKD,GAAIC,GACjCyC,MAAK,SAAAC,GACJC,QAAQC,IAAIF,EAAS1C,MACrB0K,EAAIyB,aAAezJ,EAAS1C,KAAKD,MAElC8C,OAAM,SAAAZ,GACLU,QAAQC,IAAIX,MAGdoJ,EAAkB5L,OAAOO,GACxByC,MAAK,SAAAC,GACJC,QAAQC,IAAIF,EAAS1C,MACrB0K,EAAIyB,aAAezJ,EAAS1C,KAAKD,MAElC8C,OAAM,SAAAZ,GACLU,QAAQC,IAAIX,S,+BAOV,IACA6I,EAAS5I,KAAKZ,MAAdwJ,KAER,OACE,6BACE,kBAAC7F,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,CAAEC,GAAI,IAC3B,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACD,GAAI,EAAGE,GAAI,GACpB,kBAAC,IAAD,CAAMmF,GAAI,SAAUzH,UAAU,YAA9B,cAIF,kBAACiC,EAAA,EAAD,CAAMI,MAAI,EAACD,GAAI,EAAGE,GAAI,GACtB,kBAAC,IAAD,CAAMtC,UAAU,YACT3B,MAASM,OAAO,kBAI3B,kBAAC,IAAD,CAAUmH,QAASA,EAASgC,KAAMA,EAAMsB,aAAclK,KAAK0I,iB,GApL3BlH,a,OCpBlCoF,EAAU,CACd,CAAEL,IAAK,KAAMlH,KAAM,KAAO6E,SAAU,GAAKkE,WAAW,GACpD,CAAE7B,IAAK,OAAQlH,KAAM,OAAS4I,MAAO,IAAKG,WAAW,GACrD,CAAE7B,IAAK,KAAMlH,KAAM,IAAM6I,OAAQC,IAAajE,SAAS,GAAIkE,WAAW,GACtE,CAAE7B,IAAK,KAAMlH,KAAM,IAAM6I,OAAQC,IAAajE,SAAS,GAAKkE,WAAW,GACvE,CAAE7B,IAAK,KAAMlH,KAAM,IAAM6I,OAAQC,IAAajE,SAAS,GAAKkE,WAAW,GACvE,CAAE7B,IAAK,KAAMlH,KAAM,IAAM6I,OAAQC,IAAajE,SAAS,GAAKkE,WAAW,GACvE,CAAE7B,IAAK,KAAMlH,KAAM,IAAM6I,OAAQC,IAAajE,SAAS,GAAKkE,WAAW,GACvE,CAAE7B,IAAK,KAAMlH,KAAM,IAAM6I,OAAQC,IAAajE,SAAS,GAAKkE,WAAW,GACvE,CAAE7B,IAAK,KAAMlH,KAAM,IAAM6I,OAAQC,IAAajE,SAAS,GAAKkE,WAAW,GACvE,CAAE7B,IAAK,KAAMlH,KAAM,IAAM6I,OAAQC,IAAajE,SAAS,GAAKkE,WAAW,GACvE,CAAE7B,IAAK,KAAMlH,KAAM,IAAM6I,OAAQC,IAAajE,SAAS,GAAKkE,WAAW,GACvE,CAAE7B,IAAK,KAAMlH,KAAM,KAAO6I,OAAQC,IAAajE,SAAS,GAAKkE,WAAW,GACxE,CAAE7B,IAAK,KAAMlH,KAAM,KAAO6I,OAAQC,IAAajE,SAAS,GAAKkE,WAAW,GACxE,CAAE7B,IAAK,KAAMlH,KAAM,KAAO6I,OAAQC,IAAajE,SAAS,GAAKkE,WAAW,GACxE,CAAE7B,IAAK,KAAMlH,KAAM,KAAO6I,OAAQC,IAAajE,SAAS,GAAKkE,WAAW,GACxE,CAAE7B,IAAK,KAAMlH,KAAM,KAAO6I,OAAQC,IAAajE,SAAS,GAAKkE,WAAW,GACxE,CAAE7B,IAAK,KAAMlH,KAAM,KAAO6I,OAAQC,IAAajE,SAAS,GAAKkE,WAAW,GACxE,CAAE7B,IAAK,KAAMlH,KAAM,KAAO6I,OAAQC,IAAajE,SAAS,GAAKkE,WAAW,GACxE,CAAE7B,IAAK,KAAMlH,KAAM,KAAO6I,OAAQC,IAAajE,SAAS,GAAKkE,WAAW,GACxE,CAAE7B,IAAK,KAAMlH,KAAM,KAAO6I,OAAQC,IAAajE,SAAS,GAAKkE,WAAW,GACxE,CAAE7B,IAAK,KAAMlH,KAAM,KAAO6I,OAAQC,IAAajE,SAAS,GAAKkE,WAAW,GACxE,CAAE7B,IAAK,KAAMlH,KAAM,KAAO6I,OAAQC,IAAajE,SAAS,GAAKkE,WAAW,GACxE,CAAE7B,IAAK,KAAMlH,KAAM,KAAO6I,OAAQC,IAAajE,SAAS,GAAKkE,WAAW,GACxE,CAAE7B,IAAK,KAAMlH,KAAM,KAAO6I,OAAQC,IAAajE,SAAS,GAAKkE,WAAW,GACxE,CAAE7B,IAAK,KAAMlH,KAAM,KAAO6I,OAAQC,IAAajE,SAAS,GAAKkE,WAAW,GACxE,CAAE7B,IAAK,KAAMlH,KAAM,KAAO6I,OAAQC,IAAajE,SAAS,GAAKkE,WAAW,GACxE,CAAE7B,IAAK,KAAMlH,KAAM,KAAO6I,OAAQC,IAAajE,SAAS,GAAKkE,WAAW,GACxE,CAAE7B,IAAK,KAAMlH,KAAM,KAAO6I,OAAQC,IAAajE,SAAS,GAAKkE,WAAW,GACxE,CAAE7B,IAAK,KAAMlH,KAAM,KAAO6I,OAAQC,IAAajE,SAAS,GAAKkE,WAAW,GACxE,CAAE7B,IAAK,KAAMlH,KAAM,KAAO6I,OAAQC,IAAajE,SAAS,GAAKkE,WAAW,GACxE,CAAE7B,IAAK,KAAMlH,KAAM,KAAO6I,OAAQC,IAAajE,SAAS,GAAKkE,WAAW,GACxE,CAAE7B,IAAK,KAAMlH,KAAM,KAAO6I,OAAQC,IAAajE,SAAS,GAAKkE,WAAW,GACxE,CAAE7B,IAAK,KAAMlH,KAAM,KAAO6I,OAAQC,IAAajE,SAAS,GAAKkE,WAAW,GACxE,CAAE7B,IAAK,MAAOlH,KAAM,MAAQ6E,SAAS,GAAKkE,WAAW,GACrD,CAAE7B,IAAK,OAAQlH,KAAM,OAAS6E,SAAS,GAAKkE,WAAW,GACvD,CAAE7B,IAAK,OAAQlH,KAAM,OAAS6E,SAAS,GAAKkE,WAAW,GACvD,CAAE7B,IAAK,OAAQlH,KAAM,OAAS6E,SAAS,GAAKkE,WAAW,GACvD,CAAE7B,IAAK,YAAalH,KAAM,QAAU6E,SAAS,GAAKkE,WAAW,GAC7D,CAAE7B,IAAK,OAAQlH,KAAM,OAAS6E,SAAS,GAAKkE,WAAW,IAwKxC+B,EArKQ,SAAAhM,GAEvB,IAwHwBiE,EAxHlBgI,EAAkB,CACtBtB,YAAa3J,OAHiB,EAMNkL,mBAAS,IANH,mBAMvBzB,EANuB,KAMjB0B,EANiB,OAOED,mBAASD,GAPX,mBAOvBG,EAPuB,KAObC,EAPa,KA8H9B,OApHAC,qBAAU,WACR,IAAIF,EAAS,CAACzB,YAAa3J,IAAOhB,EAAM8H,MAAMvI,OAAO2E,KAAK,aAC1DmI,EAAYD,GACZ,IAAIxB,EAAc,KAElBzI,EAAgBO,OADM,CAAEtB,QAAQ,IACMgB,MAAK,SAACC,GAC1C,IAAI+I,EAAY/I,EAAS1C,KACzBiL,EAAc,IAAIC,MAAMO,EAAU5D,QAClC4D,EAAUlI,KAAI,SAACoI,EAAUjD,GACvBuC,EAAYvC,GAAO,GACnBuC,EAAYvC,GAAZ,GAAyBiD,EAAS5L,GAClCkL,EAAYvC,GAAZ,KAA2BiD,EAASpK,WAGvCsB,OAAM,SAACZ,GACNU,QAAQC,IAAIX,MAEd,IAAMrC,EAAQ,CAAE,MAAU6M,EAASzB,YAAYrJ,OAAO,aACtDgB,QAAQC,IAAIhD,GACZyI,EAAgBtF,OAAOnD,GAAQ6C,MAAK,SAACC,GACnBA,EAAS1C,KACfuD,KAAI,SAACwI,GAAc,IAAD,gBACJd,GADI,IAC1B,IAAI,EAAJ,qBAAkC,CAAC,IAA3BO,EAA0B,QAChC,GAAGA,EAAWzL,IAAMgM,EAAS1H,WAAW,CACtCmH,EAAWO,EAASxH,MAAQwH,EAASvH,SACrCgH,EAAW,KAAKO,EAASxH,MAAMwH,EAAShM,GACxC,QALsB,kCAS5B4C,QAAQC,IAAIqI,GACZuB,EAAQvB,MAETpI,OAAM,SAACZ,GACNU,QAAQC,IAAIX,MAGd,IAAM2K,EAAY,CAAE,MAAUH,EAASzB,YAAYrJ,OAAO,aAC1DgB,QAAQC,IAAIgK,GACZhI,EAAY7B,OAAO6J,GAAYnK,MAAK,SAACC,GACnC,IAAIkJ,EAAYlJ,EAAS1C,KACzB2C,QAAQC,IAAIgJ,GACZA,EAAUrI,KAAI,SAACwI,GAAc,IAAD,gBACJd,GADI,IAC1B,IAAI,EAAJ,qBAAkC,CAAC,IAA3BO,EAA0B,QAChC,GAAGA,EAAWzL,IAAMgM,EAAS1H,WAAW,CACtCmH,EAAU,IAAUO,EAASvH,SAC7BgH,EAAU,KAASO,EAAStH,KAC5B+G,EAAU,KAASO,EAASrH,KAC5B8G,EAAU,KAASO,EAASpH,KAC5B6G,EAAU,UAAcA,EAAU,MAAUA,EAAU,KAAUA,EAAU,KAAW,GAClFA,EAAU,KACXA,EAAU,KAASA,EAAU,KAASO,EAAS7H,QAE/CsH,EAAU,MAAUO,EAAS7H,QAE/B,QAbsB,qCAkB7BrB,OAAM,SAACZ,GACNU,QAAQC,IAAIX,QAEb,CAAC5B,EAAM8H,MAAMvI,OAAO2E,OAsDrB,6BACGkI,EACD,yBAAKzJ,UAAU,YACb,kBAACiC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,CAAEC,GAAI,IAC/B,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACD,GAAI,EAAGE,GAAI,GAClB,kBAAC,IAAD,CACEmF,GAAI,qBAAqBgC,EAASzB,YAAY6B,QAAQ9H,SAAS,EAAG,UAAUpD,OAAO,YACnFqB,UAAU,uBAFZ,QAKCyJ,EAASzB,YAAYrJ,OAAO,eAC7B,kBAAC,IAAD,CACE8I,GAAI,qBAAqBgC,EAASzB,YAAY6B,QAAQC,IAAI,EAAG,UAAUnL,OAAO,YAC9EqB,UAAU,uBAFZ,SAMJ,kBAACiC,EAAA,EAAD,CAAMI,MAAI,EAACD,GAAI,EAAGE,GAAI,GAClB,kBAAC,IAAD,CACErC,SAxBUqB,EAwBYmI,EAASzB,YAAYrJ,OAAO,oBAvB5DgB,QAAQC,IAAI0B,IAwBFtB,UAAU,SAFZ,mCAUJ,6BACE,6BACA,6DAGJ,kBAAC,IAAD,CAAU8F,QAASA,EAASgC,KAAMA,EAAMsB,aArF5C,SAAmB1B,EAAKsB,IAKxB,SAAqCtB,EAAKsB,GACxC,IAAIe,EAAYrC,EAAIsB,EAAIC,SAASD,EAAIE,OAAOzD,KACxCuE,EAAWtC,EAAIsB,EAAIC,SAAS,KAAKD,EAAIE,OAAOzD,KAQhD9F,QAAQC,IAAI8H,EAAIsB,EAAIC,SAASlM,GAAI,MAAMgN,EAAY,MAAOC,GAI5D,SAAuBC,EAAW1I,EAAMD,EAAOE,EAAUzE,EAAImN,GAC3D,IAAIlN,EAAO,CACTqE,WAAY4I,EACZ1I,KAAMA,EACND,MAAOA,EAAM3C,OAAO,YACpB6C,SAAUA,GAETzE,EACCsI,EAAgBC,OAAOvI,EAAIC,GACxByC,MAAK,SAAAC,GACJC,QAAQC,IAAIF,EAAS1C,SAEtB6C,OAAM,SAAAZ,GACLU,QAAQC,IAAIX,MAGlBoG,EAAgB5I,OAAOO,GAClByC,MAAK,SAAAC,GAEJwK,EADa,KAAK3I,GACF7B,EAAS1C,KAAKD,GAC9B4C,QAAQC,IAAIsK,MAEbrK,OAAM,SAAAZ,GACLU,QAAQC,IAAIX,MA1BpB+F,CAAa0C,EAAIsB,EAAIC,SAASlM,GAAIiM,EAAIE,OAAOzD,IAAKgE,EAASzB,YAAc+B,EAAWC,EAAUtC,EAAIsB,EAAIC,UAftGkB,CAA4BzC,EAAIsB,GAChCQ,EAAS9B,QCxHR,SAAS0C,EAAgBC,GAC9BA,EAAMD,kBAGR,IAAMtE,EAAU,CACd,CAAEL,IAAK,KAAMlH,KAAM,KAAO4I,MAAO,GAAKG,WAAW,GACjD,CAAE7B,IAAK,OAAQlH,KAAM,OAAS6I,OAAQC,IAAaC,WAAW,GAC9D,CAAE7B,IAAK,UAAWlH,KAAM,UAAY6I,OAAQC,IAAaC,WAAW,GACpE,CAAE7B,IAAK,YAAalH,KAAM,YAAc6I,OAAQC,IAAaC,WAAW,GACxE,CAAE7B,IAAK,UAAWlH,KAAM,UAAY6I,OAAQC,IAAaC,WAAW,GACpE,CAAE7B,IAAK,kBAAmBlH,KAAM,WAAa4I,MAAO,GAAMC,OAAQC,IAAaC,WAAW,GAC1F,CAAE7B,IAAK,SAAUlH,KAAM,SAAW4I,MAAO,GACjCI,UADR,YACyD,IAArCG,EAAoC,EAApCA,IAAK4C,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,eAC5B,OACE,kBAAC,IAAD,CACElL,MAAOqI,EAAIjJ,OACX4B,SAAU,WACRiK,EAAY,2BAAK5C,GAAN,IAAWjJ,QAASiJ,EAAIjJ,WAErCwB,QAASmK,EACTG,eAAgBA,MAI9B,CAAE9E,IAAK,UAAWlH,KAAM,QAAU+I,WAAW,EACnCC,UADV,SACoBlK,GACR,OAAO,oCAAGA,EAAMqK,IAAI8C,YAEtBpD,OC/BG,YAA+C,IAArBM,EAAoB,EAApBA,IAAK4C,EAAe,EAAfA,YACpCG,ECJe,WAAO,IAAD,EACOlB,qBADP,mBACtBkB,EADsB,KACVC,EADU,KAc7B,OAZAf,qBAAU,WACJc,GAAoC,IAAtBA,EAAW5F,QAC3B/E,EAAaC,SACZN,MAAK,SAAAC,GACJgL,EAAchL,EAAS1C,MACvB2C,QAAQC,IAAI6K,MAEb5K,OAAM,SAAAZ,GACLU,QAAQC,IAAIX,QAGf,CAACwL,IACG,CAACA,cDVeE,GAAfF,WAER,OACE,4BACEzK,UAAWqH,IAAWuD,oBACtBvL,MAAOqI,EAAI9I,QACXyB,SAAU,SAACgK,GAAD,OAAWC,EAAY,2BAAK5C,GAAN,IAAW9I,QAASyL,EAAMjL,OAAOC,SAAS,IAC1EwL,WAAS,GAERJ,GAAcA,EAAWlK,KAAI,SAACuK,GAAD,OAC5B,4BAAQrF,IAAKqF,EAAiB/N,GAAIsC,MAAOyL,EAAiB/N,IACvD+N,EAAiBvM,WDoBhBwM,cAAe,CACbC,aAAa,IAEzB,CAAEvF,IAAK,WAAYlH,KAAM,MAAQ4I,MAAO,GAAKC,OAAQC,IAAaC,WAAW,IA+E9D2D,GA5EI,SAAA5N,GAAU,IAAD,EACFkM,mBAAS,IADP,mBACnBzB,EADmB,KACb0B,EADa,KAgE1B,OA7DAG,qBAAU,WACR,IAAI1B,EAAc,KAGlBzI,EAAgBO,OAFM,CAACmL,MAAO,UACZC,OAAQ,QACY1L,MAAK,SAACC,GAC1C,IAAI+I,EAAY/I,EAAS1C,KACzBiL,EAAc,IAAIC,MAAMO,EAAU5D,QAClC4D,EAAUlI,KAAI,SAACoI,EAAUjD,GACvBuC,EAAYvC,GAAO,GACnBuC,EAAYvC,GAAZ,GAAyBiD,EAAS5L,GAClCkL,EAAYvC,GAAZ,KAA2BiD,EAASpK,KACpC0J,EAAYvC,GAAZ,QAA8BiD,EAASnK,QACvCyJ,EAAYvC,GAAZ,UAAgCiD,EAASjK,UACzCuJ,EAAYvC,GAAZ,QAA8BiD,EAASyC,QACvCnD,EAAYvC,GAAZ,gBAAsCiD,EAAS9J,gBAC/CoJ,EAAYvC,GAAZ,OAA6BiD,EAASlK,OACtCwJ,EAAYvC,GAAZ,QAA8BiD,EAAS/J,QACvCqJ,EAAYvC,GAAZ,SAA+BiD,EAAS5J,SACrC4J,EAASR,QACVF,EAAYvC,GAAZ,UAAgCiD,EAASR,MAAM5J,SAGnDiL,EAAQvB,MAETpI,OAAM,SAACZ,GACNU,QAAQC,IAAIX,QAEb,IAmCD,6BACU,kBAAC,IAAD,CAAMwI,GAAI,eAAgBzH,UAAU,YAApC,gBAGR,6BACE,kBAAC,IAAD,CAAU8F,QAASA,EAASgC,KAAMA,EAAMsB,aAtC9C,SAAmB1B,EAAKsB,IAKxB,SAAqCtB,EAAKsB,GACxCrJ,QAAQC,IAAI8H,EAAIsB,EAAIC,SAASlM,GAAI,MAAM2K,EAAIsB,EAAIC,SAASD,EAAIE,OAAOzD,MAIrE,SAAuBiC,GACrB,IAAI1K,EAAO,CACTD,GAAI2K,EAAI3K,GACRwB,KAAMmJ,EAAInJ,KACVC,QAASkJ,EAAIlJ,QACbE,UAAWgJ,EAAIhJ,UACf0M,QAAS1D,EAAI0D,QACb3M,OAAQiJ,EAAIjJ,OACZG,QAAS8I,EAAI9I,QACbC,gBAAiB6I,EAAI7I,gBACrBE,SAAU2I,EAAI3I,UAGZS,EAAgB8F,OAAOoC,EAAI3K,GAAIC,GAC5ByC,MAAK,SAAAC,GACJC,QAAQC,IAAIF,EAAS1C,SAEtB6C,OAAM,SAAAZ,GACLU,QAAQC,IAAIX,MArBpB+F,CAAa0C,EAAIsB,EAAIC,UANrBkB,CAA4BzC,EAAIsB,GAChCQ,EAAS9B,SGvBA2D,G,uKAxCX,OACE,kBAAC,IAAD,KACE,6BACE,yBAAKrL,UAAU,4CACb,yBAAKA,UAAU,sBACf,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAMyH,GAAI,UAAWzH,UAAU,YAA/B,WAIF,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMyH,GAAI,aAAczH,UAAU,YAAlC,cAIF,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMyH,GAAI,qBAAqBpJ,MAASM,OAAO,YAAaqB,UAAU,YAAtE,wBAON,yBAAKA,UAAU,kBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOsL,OAAK,EAACC,KAAM,CAAC,IAAK,WAAYvI,UAAW2E,IAChD,kBAAC,IAAD,CAAO2D,OAAK,EAACC,KAAK,aAAavI,UAAWiI,KAC1C,kBAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,eAAevI,UAAW5F,IAC5C,kBAAC,IAAD,CAAOkO,OAAK,EAACC,KAAK,qBAAqBvI,UAAWoB,IAClD,kBAAC,IAAD,CAAOkH,OAAK,EAACC,KAAK,SAASvI,UAAW6D,IACtC,kBAAC,IAAD,CAAOyE,OAAK,EAACC,KAAK,UAAUvI,UAAW2E,IACvC,kBAAC,IAAD,CAAO2D,OAAK,EAACC,KAAK,0BAA0BvI,UAAWqG,Y,GAjCnD3I,aCDE8K,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASxG,MACvB,2D,cCXNyG,IAASC,OACP,kBAACC,GAAA,EAAD,CAAsBC,aAAW,GAC/B,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3M,MAAK,SAAA4M,GACJA,EAAaC,gBAEdzM,OAAM,SAAA0M,GACL5M,QAAQ4M,MAAMA,EAAMC,a","file":"static/js/main.962c0a74.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"http://192.168.43.137:8080/api\",\n  headers: {\n    \"Content-type\": \"application/json\",\n    \"Access-Control-Allow-Origin\": \"*\"\n  }\n});","import http from \"../http-common\";\n\nclass CustomerService {\n  getAll(params) {\n    return http.get(\"/customers\", { params });\n  }\n\n  get(id) {\n    return http.get(`/customers/${id}`);\n  }\n\n  create(data) {\n    return http.post(\"/customers\", data);\n  }\n\n  update(id, data) {\n    return http.put(`/customers/${id}`, data);\n  }\n\n  delete(id) {\n    return http.delete(`/customers/${id}`);\n  }\n\n  deleteAll() {\n    return http.delete(\"/customers\");\n  }\n}\n\nexport default new CustomerService();\n","import http from \"../http-common\";\n\nclass RouteService {\n  getAll(params) {\n    return http.get(\"/routes\", { params });\n  }\n\n  get(id) {\n    return http.get(`/routes/${id}`);\n  }\n\n  create(data) {\n    return http.post(\"/routes\", data);\n  }\n\n  update(id, data) {\n    return http.put(`/routes/${id}`, data);\n  }\n\n  delete(id) {\n    return http.delete(`/routes/${id}`);\n  }\n\n  deleteAll() {\n    return http.delete(\"/routes\");\n  }\n}\n\nexport default new RouteService();\n","import React, { Component } from \"react\";\nimport CustomerService from \"../services/customer.service\";\nimport RouteService from \"../services/route.service\";\nimport moment from \"moment\";\n\nexport default class AddCustomer extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeName = this.onChangeName.bind(this);\n    this.onChangeAddress = this.onChangeAddress.bind(this);\n    this.onChangeStartDate = this.onChangeStartDate.bind(this);\n    this.onChangeActive = this.onChangeActive.bind(this);\n    this.onChangeRoute = this.onChangeRoute.bind(this);\n    this.onChangeDefaultQuantity = this.onChangeDefaultQuantity.bind(this);\n    this.onChangeRouteSeq = this.onChangeRouteSeq.bind(this);\n    this.saveTutorial = this.saveTutorial.bind(this);\n    this.newTutorial = this.newTutorial.bind(this);\n    this.getRoute = this.getRoute.bind(this);\n    this.myRef = React.createRef();\n\n    const today = moment();\n    this.state = {\n      id: null,\n      name: \"\",\n      address: \"\", \n      active: true,\n      startDate: today.format(\"DD-MMM-YYYY\"),\n      routeId: \"\",\n      defaultQuantity: 1,\n      routes:[],\n      routeSeq:null,\n      submitted: false\n    };\n  }\n\n  onChangeName(e) {\n    this.setState({\n      name: e.target.value\n    });\n  }\n\n  onChangeAddress(e) {\n    this.setState({\n      address: e.target.value\n    });\n  }\n\n  onChangeRouteSeq(e) {\n    this.setState({\n      routeSeq: e.target.value\n    });\n  }\n\n  onChangeStartDate(e) {\n    this.setState({\n      startDate: e.target.value\n    });\n  }\n\n  onChangeActive(e) {\n    this.setState({\n      active: e.target.checked\n    });\n  }\n\n  onChangeRoute(e) {\n    this.setState({\n      routeId: e.target.value\n    });\n  }\n\n  onChangeDefaultQuantity(e) {\n    this.setState({\n      defaultQuantity: e.target.value\n    });\n  }\n\n  saveTutorial() {\n    var data = {\n      name: this.state.name,\n      address: this.state.address,\n      startDate: this.state.startDate,\n      active: this.state.active,\n      routeId: this.myRef.current.value,\n      defaultQuantity: this.state.defaultQuantity,\n      routeSeq: this.state.routeSeq\n    };\n\n    CustomerService.create(data)\n      .then(response => {\n        this.setState({\n          id: response.data.id,\n          name: response.data.name,\n          address: response.data.address,\n          active: response.data.active,\n          startDate: response.data.startDate,\n          routeId: response.data.routeId,\n          defaultQuantity: response.data.defaultQuantity,\n          routeSeq: response.data.routeSeq,\n          submitted: true\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  newTutorial() {\n    this.setState({\n      id: null,\n      name: \"\",\n      address: \"\",\n      startDate: moment().format(\"DD-MMM-YYYY\"),\n      active: true,\n      routeId: \"\",\n      defaultQuantity:1,\n      routeSeq: null,\n      submitted: false\n    });\n  }\n\n  componentDidMount() {\n    this.getRoute();\n  }\n\n  getRoute(){\n    RouteService.getAll()\n      .then(response => {\n        this.setState({\n          routes: response.data\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  render() {\n    const { routes } = this.state;\n    return (\n      <div className=\"submit-form\">\n        {this.state.submitted ? (\n          <div>\n            <h4>You submitted successfully!</h4>\n            <button className=\"btn btn-success\" onClick={this.newTutorial}>\n              Add\n            </button>\n          </div>\n        ) : (\n          <div>\n            <div className=\"form-group\">\n              <label htmlFor=\"name\">Customer Name</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"name\"\n                required\n                value={this.state.name}\n                onChange={this.onChangeName}\n                name=\"name\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"address\">Address</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"address\"\n                required\n                value={this.state.address}\n                onChange={this.onChangeAddress}\n                name=\"address\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"startDate\">Start Date</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"startDate\"\n                required\n                value={this.state.startDate}\n                onChange={this.onChangeStartDate}\n                name=\"startDate\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"defaultQuantity\">Default Quantity</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"defaultQuantity\"\n                required\n                value={this.state.defaultQuantity}\n                onChange={this.onChangeDefaultQuantity}\n                name=\"defaultQuantity\"\n              />\n            </div>\n            <div className=\"form-group\">        \n                  <label htmlFor=\"routeId\">Route</label>\n                  <div className=\"select-container\">\n                    <select className=\"form-control\" value={this.state.routeId} \n                    onChange={this.onChangeRoute} ref={this.myRef} name=\"routeId\">\n                      {routes.map((option) => (\n                        <option value={option.id}>{option.name}</option>\n                      ))}\n                    </select>\n                  </div>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"routeSeq\">Route Sequene</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"routeSeq\"\n                required\n                value={this.state.routeSeq}\n                onChange={this.onChangeRouteSeq}\n                name=\"routeSeq\"\n              />\n            </div>\n            <div className=\"form-group\">        \n                  <label htmlFor=\"active\">Active</label>\n                  <input type=\"checkbox\" className=\"form-control\"\n                  id=\"active\" name=\"active\"\n                  onChange={this.onChangeActive} defaultChecked={this.state.active}/>\n            </div>\n\n            <button onClick={this.saveTutorial} className=\"btn btn-success\">\n              Submit\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import http from \"../http-common\";\n\nclass DeliveryService {\n  getAll(params) {\n    return http.get(\"/customerDeliverys\", { params });\n  }\n\n  get(id) {\n    return http.get(`/customerDeliverys/${id}`);\n  }\n\n  create(data) {\n    return http.post(\"/customerDeliverys\", data);\n  }\n\n  update(id, data) {\n    return http.put(`/customerDeliverys/${id}`, data);\n  }\n\n  delete(id) {\n    return http.delete(`/customerDeliverys/${id}`);\n  }\n\n  deleteAll() {\n    return http.delete(\"/customerDeliverys\");\n  }\n}\n\nexport default new DeliveryService();\n","import http from \"../http-common\";\n\nclass BillService {\n  getAll(params) {\n    return http.get(\"/bills\", { params });\n  }\n\n  get(id) {\n    return http.get(`/bills/${id}`);\n  }\n\n  create(data) {\n    return http.post(\"/bills\", data);\n  }\n\n  update(id, data) {\n    return http.put(`/bills/${id}`, data);\n  }\n\n  delete(id) {\n    return http.delete(`/bills/${id}`);\n  }\n\n  deleteAll() {\n    return http.delete(\"/bills\");\n  }\n}\n\nexport default new BillService();\n","import React, { Component } from \"react\";\r\nimport moment from 'moment';\r\n\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\n\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nimport { experimentalStyled as styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nimport BillService from \"../services/bill.service\";\r\n\r\nexport default class Modal extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.getCustomerBill = this.getCustomerBill.bind(this);\r\n      this.savePayment = this.savePayment.bind(this);\r\n      this.onChangePayment = this.onChangePayment.bind(this);\r\n      this.handleClickOpen = this.handleClickOpen.bind(this);\r\n      this.handleClose = this.handleClose.bind(this);\r\n  \r\n      this.state = {\r\n        payment: null,\r\n        prevBill: {},\r\n        currentBill: {},\r\n        open: false\r\n      };\r\n      this.getCustomerBill(props);\r\n    }\r\n  \r\n    onChangePayment(e){\r\n      this.setState({\r\n        payment: +e.target.value\r\n      });\r\n    }\r\n    savePayment(){\r\n      if(this.state.payment){\r\n        var data = {\r\n          customerId: this.props.customerId,\r\n          month: moment(this.props.date, \"DD-MMM-YYYY\").format(\"MMM-YYYY\"),\r\n          quantity: this.state.currentBill.quantity,\r\n          rate: this.state.currentBill.rate,\r\n          bill: this.state.currentBill.bill,\r\n          dues: this.state.currentBill.dues,\r\n          payment: this.state.payment\r\n        };\r\n        BillService.create(data)\r\n          .then(response => {\r\n            this.setState({\r\n              currentBill: {\r\n                quantity: this.state.currentBill.quantity,\r\n                rate: this.state.currentBill.rate,\r\n                bill: this.state.currentBill.bill,\r\n                dues: this.state.currentBill.dues,\r\n                month: moment(this.props.date, \"DD-MMM-YYYY\").format(\"MMM-YYYY\"),\r\n                payment: (this.state.currentBill.payment? this.state.currentBill.payment : 0) + response.data.payment\r\n              }\r\n            });\r\n            console.log(response.data);\r\n            this.handleClickOpen();\r\n            this.state.payment=\"\";\r\n          })\r\n          .catch(e => {\r\n            console.log(e);\r\n          });\r\n        }\r\n    }\r\n  \r\n    handleClickOpen = () => {\r\n      this.setState({\r\n        open: true\r\n      });\r\n    };\r\n  \r\n    handleClose = () => {\r\n      this.setState({\r\n        open: false\r\n      });\r\n    };\r\n  \r\n    getCustomerBill(props){\r\n      var date = moment(props.date, \"DD-MMM-YYYY\");\r\n      var month = date.format(\"MMM-YYYY\");\r\n      var params ={ \"customerId\" : props.customerId ,\r\n              \"month\": month};\r\n      var currentBill = {month: month};\r\n      BillService.getAll(params).then(response => {\r\n          var bills = response.data;\r\n          console.log(bills);    \r\n\t\t  if(bills){\r\n\t\t\t  bills.map((bill) => {\r\n\t\t\t\tcurrentBill[\"quantity\"] = bill.quantity;\r\n\t\t\t\tcurrentBill[\"rate\"]=bill.rate;\r\n\t\t\t\tcurrentBill[\"bill\"]=bill.bill;\r\n\t\t\t\tcurrentBill[\"dues\"]=bill.dues;\r\n\t\t\t\tif(currentBill[\"payment\"]){\r\n\t\t\t\t  currentBill[\"payment\"]=currentBill[\"payment\"]+bill.payment;\r\n\t\t\t\t}else{\r\n\t\t\t\t  currentBill[\"payment\"]=bill.payment;\r\n\t\t\t\t}\r\n\t\t\t  });\r\n\t\t  }\r\n          this.setState({\r\n            currentBill: currentBill\r\n          });\r\n          \r\n      })\r\n      .catch(e => {\r\n      console.log(e);\r\n      });\r\n  \r\n    var monthprev = date.subtract(1, 'months').format(\"MMM-YYYY\");\r\n    params ={ \"customerId\" : props.customerId ,\r\n              \"month\": monthprev};\r\n    var prevBill = {month: monthprev};\r\n    BillService.getAll(params).then(response => {\r\n      var bills = response.data;\r\n\t  if(bills){\r\n\t\t  bills.map((bill) => {\r\n\t\t\tprevBill[\"quantity\"] = bill.quantity;\r\n\t\t\tprevBill[\"rate\"]=bill.rate;\r\n\t\t\tprevBill[\"bill\"]=bill.bill;\r\n\t\t\tprevBill[\"dues\"]=bill.dues;\r\n\t\t\tif(prevBill[\"payment\"]){\r\n\t\t\t  prevBill[\"payment\"]=prevBill[\"payment\"]+bill.payment;\r\n\t\t\t}else{\r\n\t\t\t  prevBill[\"payment\"]=bill.payment\r\n\t\t\t}\r\n\t\t  });\r\n\t  }\r\n\t\tthis.setState({\r\n\t\t  prevBill: prevBill\r\n\t\t});\r\n\t\tconsole.log(this.state);\r\n    })\r\n    .catch(e => {\r\n    console.log(e);\r\n    });\r\n    \r\n    }\r\n  \r\n    render() {\r\n      const {prevBill, currentBill} = this.state;\r\n      return (\r\n        <div>\r\n          <h1 align=\"center\">{this.props.name}</h1>\r\n          <Grid container spacing={{ xs: 4}} >\r\n            <Grid item xs={12} sm={6}> \r\n                <div className=\"form-group\">\r\n                      <label htmlFor=\"date\"> Date</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"date\"\r\n                        required\r\n                        value={this.props.date}\r\n                        onChange={this.props.onDate}\r\n                        name=\"date\"\r\n                      />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                      <label htmlFor=\"defaultQuantity\">Quantity</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"defaultQuantity\"\r\n                        required\r\n                        value={this.props.defaultQuantity}\r\n                        onChange={this.props.onQuantity}\r\n                        name=\"defaultQuantity\"\r\n                      />\r\n                </div>\r\n                    <div className=\"form-group\">\r\n                      <button className=\"btn btn-success\" onClick={this.props.onPrev}>{'\\u2B05'}{this.props.previousTitle} </button>\r\n                      {\" \"}\r\n                      <button className=\"btn btn-success\" onClick={this.props.onUpdate}>Update & Next</button>\r\n                      {\" \"}\r\n                      <button className=\"btn btn-success\" onClick={this.props.onNext}>{this.props.nextTitle} {'\\u27A1'}</button>    \r\n                    </div>\r\n                    <div className=\"form-group\" >\r\n                      <button className=\"btn btn-success\" onClick={this.props.onModalClose}>Close Route Delivery</button>\r\n                    </div>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}> \r\n                <div className=\"form-group\">\r\n  \r\n                <TableContainer component={Paper}>\r\n                        <Table sx={{ minWidth: 200 }} aria-label=\"simple table\">\r\n                          <TableHead>\r\n                            <TableRow>\r\n                              <TableCell>Billing</TableCell>\r\n                              <TableCell align=\"right\">Prev Month ({prevBill.month})</TableCell>\r\n                              <TableCell align=\"right\">Current Month ({currentBill.month})</TableCell>\r\n                            </TableRow>\r\n                          </TableHead>\r\n                          <TableBody>\r\n                              <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    Quantity\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">{prevBill.quantity}</TableCell>\r\n                                <TableCell align=\"right\">{currentBill.quantity}</TableCell>\r\n                              </TableRow>\r\n                              <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    Rate\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">{prevBill.rate}</TableCell>\r\n                                <TableCell align=\"right\">{currentBill.rate}</TableCell>\r\n                              </TableRow>\r\n                              <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    Bill\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">{prevBill.bill}</TableCell>\r\n                                <TableCell align=\"right\">{currentBill.bill}</TableCell>\r\n                              </TableRow>\r\n                              <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    Payment\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">{prevBill.payment}</TableCell>\r\n                                <TableCell align=\"right\">{currentBill.payment}</TableCell>\r\n                              </TableRow>\r\n                              <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    Dues\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">{prevBill.dues}</TableCell>\r\n                                <TableCell align=\"right\">{currentBill.dues}</TableCell>\r\n                              </TableRow>\r\n                          </TableBody>\r\n                        </Table>\r\n                      </TableContainer>\r\n                    \r\n                </div>\r\n                <div className=\"form-group\">\r\n                      <label htmlFor=\"payment\">Payment</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"payment\"\r\n                        required\r\n                        value={this.state.payment}\r\n                        onChange={this.onChangePayment}\r\n                        name=\"payment\"\r\n                      />\r\n                </div>\r\n                <button className=\"btn btn-success\" onClick={this.savePayment}>Payment Received</button>   \r\n          </Grid>\r\n        </Grid>\r\n  \r\n        <Dialog\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\">\r\n          <DialogTitle id=\"alert-dialog-title\">\r\n            {\"Payments\"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              Payment of amount {this.state.payment} is confirmed.\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose}>Close</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        </div>\r\n      );\r\n    }\r\n  }","import React, { Component } from \"react\";\nimport moment from 'moment';\n\nimport { experimentalStyled as styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\n\nimport CustomerService from \"../services/customer.service\";\nimport DeliveryService from \"../services/delivery.service\";\nimport Modal from \"./modal.component\";\n\nexport default class ProjectData extends Component {\n  \n  constructor(props) {\n    super(props);\n    this.getProjects= this.getProjects.bind(this);\n    this.saveDelivery= this.saveDelivery.bind(this);\n    this.onChangeDate = this.onChangeDate.bind(this);\n    this.handleNextProject = this.handleNextProject.bind(this);\n    this.onChangeDefaultQuantity = this.onChangeDefaultQuantity.bind(this);\n\n    this.state = {\n      projects: [],\n      activeProject: '',\n      modalTitle: '',\n      customerId: null,\n      quantity: '',\n      date: moment().format(\"DD-MMM-YYYY\")\n    }\n   \n  }\n  \n\n  componentDidMount() {\n    this.getProjects(this.props.match.params.id);\n  }\n\n  getProjects(id) {\n    const params ={ \"routeId\" : id };\n    CustomerService.getAll(params)\n      .then(response => {\n        this.setState({\n          projects: response.data\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n\n  handleModalOpen = (idx) => {\n    this.setState({\n      activeProject: idx,\n      modalTitle: this.state.projects[idx].name,\n      quantity: this.state.projects[idx].defaultQuantity,\n      date: this.state.date,\n      customerId: this.state.projects[idx].id\n    });  \n  };\n\n  handleModalClose = () => {\n    this.setState({\n      activeProject: ''\n    });  \n  };\n\n  handleNextProject = () => {\n    \n    var arr = this.state.projects.length;\n    var idx = this.state.activeProject + 1;\n    var idx = idx % arr;\n    \n    this.setState({\n      activeProject: idx,\n      modalTitle: this.state.projects[idx].name,\n      quantity: this.state.projects[idx].defaultQuantity,\n      date: this.state.date,\n      customerId: this.state.projects[idx].id\n    }); \n    \n  }\n\n  handlePrevProject = () => {\n    var arr = this.state.projects.length;\n    var idx = this.state.activeProject;    \n    if (idx === 0) {\n      var idx = arr - 1;\n    } else {\n      var idx = idx -1;\n    }\n    \n    this.setState({\n      activeProject: idx,\n      modalTitle: this.state.projects[idx].name,\n      quantity: this.state.projects[idx].defaultQuantity,\n      date: this.state.date,\n      customerId: this.state.projects[idx].id\n    });  \n    \n  }\n\n  handleModalUpdate = () => {\n    this.saveDelivery(this.state.customerId,this.state.date, this.state.quantity);\n    this.handleNextProject();\n  }\n\n  onChangeDefaultQuantity(e) {\n    this.setState({\n      quantity: e.target.value\n    });\n  }\n  onChangeDate(e) {\n    this.setState({\n      date: e.target.value\n    });\n  }\n\n  saveDelivery (id, date, quantity) {\n    const dateObj = moment(date, \"DD-MMM-YYYY\");\n    var data = {\n      customerId: id,\n      date: dateObj.format(\"DD\"),\n      month: dateObj.format(\"MMM-YYYY\"),\n      quantity: quantity\n    };\n    \n    const params =  { \"customerId\" : id , \n                      \"date\": data.date,\n                      \"month\": data.month\n                   };\n                   \n\n    DeliveryService.getAll(params).then(response => {\n        if(response.data && response.data.length > 0){\n          data[\"id\"]=response.data[0].id;\n          DeliveryService.update(data[\"id\"], data).then(response1 => {\n            console.log(response1.data);\n          })\n          .catch(e => {\n            console.log(e);\n          });\n        } else {\n          DeliveryService.create(data).then(response1 => {\n            console.log(response1.data);\n          })\n          .catch(e => {\n            console.log(e);\n          });\n        }\n      })\n      .catch(e => {\n        console.log(e);\n      });\n    \n    this.state.date=moment().format(\"DD-MMM-YYYY\");\n  }\n\n  render() {\n    const { projects } = this.state;\n    \n    function nextTitle(idx, arr) {\n      var i = idx + 1;\n      var i = i % arr.length;\n      return arr[i].name;\n    }\n    \n    function prevTitle(idx, arr) {\n      \n      if (idx === 0) {\n        var i = arr.length -1;\n      } else {\n        var i = idx -1;\n      }\n      \n      return arr[i].name;\n    }\n\n    const projectComponents = projects.map((data, idx, arr) =>\n      <Project\n        key={'project-' + data.id}\n        index={idx}\n        name={data.name}\n        url={data.address}\n        onModalOpen={this.handleModalOpen}\n      />,\n    );\n\n    if(this.state.activeProject === '') {\n      return (\n        <div>\n          <Grid container spacing={{ xs: 1, md: 1 }} columns={{ xs: 4, sm: 8, md: 12 }}>\n                {projectComponents}\n          </Grid>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <Modal \n            name={this.state.modalTitle}\n            defaultQuantity={this.state.quantity}\n            date={this.state.date}\n            customerId={this.state.customerId}\n            previousTitle={prevTitle(this.state.activeProject, projects)}\n            nextTitle={nextTitle(this.state.activeProject, projects)}\n            onModalClose={this.handleModalClose}\n            onNext={this.handleNextProject}\n            onPrev={this.handlePrevProject}\n            onDate={this.onChangeDate}\n            onQuantity={this.onChangeDefaultQuantity}\n            onUpdate={this.handleModalUpdate}\n          />\n        </div>\n      );\n    }\n  }\n}\n\nconst styles = theme => ({\n  root: {\n    color: theme.success.main\n  }\n});\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(2),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\n\n\nclass Project extends React.Component {\n  render() {\n    return (\n\n  <Grid item xs={2} sm={4} md={4} key={this.props.index} onClick={this.props.onModalOpen.bind(this, this.props.index)}>\n    <Item><h1>{this.props.name} - {this.props.url}</h1></Item>\n  </Grid>                \n    );\n  }\n}\n\n\n","import React, { Component } from \"react\";\nimport RouteService from \"../services/route.service\";\n\nexport default class AddRoute extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeName = this.onChangeName.bind(this);\n    this.onChangeAddress = this.onChangeAddress.bind(this);\n    this.onChangeStartDate = this.onChangeStartDate.bind(this);\n    this.onChangeActive = this.onChangeActive.bind(this);\n    this.saveTutorial = this.saveTutorial.bind(this);\n    this.newTutorial = this.newTutorial.bind(this);\n    const today = new Date();\n    this.state = {\n      id: null,\n      name: \"\",\n      address: \"\", \n      active: true,\n      startDate: today.getDate() + \"-\"+ parseInt(today.getMonth()+1) +\"-\"+today.getFullYear(),\n\n      submitted: false\n    };\n  }\n\n  onChangeName(e) {\n    this.setState({\n      name: e.target.value\n    });\n  }\n\n  onChangeAddress(e) {\n    this.setState({\n      address: e.target.value\n    });\n  }\n\n  onChangeStartDate(e) {\n    this.setState({\n      startDate: e.target.value\n    });\n  }\n\n  onChangeActive(e) {\n    console.log(e.target.checked);\n    this.setState({\n      active: e.target.checked\n    });\n  }\n\n  saveTutorial() {\n    var data = {\n      name: this.state.name,\n      address: this.state.address,\n      startDate: this.state.startDate,\n      active: this.state.active\n    };\n    console.log(this.state.active);\n    RouteService.create(data)\n      .then(response => {\n        this.setState({\n          id: response.data.id,\n          name: response.data.name,\n          address: response.data.address,\n          active: response.data.active,\n          startDate: response.data.startDate,\n\n          submitted: true\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  newTutorial() {\n    this.today = new Date();\n    this.setState({\n      id: null,\n      name: \"\",\n      address: \"\",\n      startDate: this.today.getDate() + \"-\"+ parseInt(this.today.getMonth()+1) +\"-\"+this.today.getFullYear(),\n      active: true,\n\n      submitted: false\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"submit-form\">\n        {this.state.submitted ? (\n          <div>\n            <h4>You submitted successfully!</h4>\n            <button className=\"btn btn-success\" onClick={this.newTutorial}>\n              Add\n            </button>\n          </div>\n        ) : (\n          <div>\n            <div className=\"form-group\">\n              <label htmlFor=\"name\">Route Name</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"name\"\n                required\n                value={this.state.name}\n                onChange={this.onChangeName}\n                name=\"name\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"address\">Address</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"address\"\n                required\n                value={this.state.address}\n                onChange={this.onChangeAddress}\n                name=\"address\"\n              />\n            </div>            \n\n            <button onClick={this.saveTutorial} className=\"btn btn-success\">\n              Submit\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import http from \"../http-common\";\n\nclass RouteStockService {\n  getAll(params) {\n    return http.get(\"/routeStocks\", { params });\n  }\n\n  get(id) {\n    return http.get(`/routeStocks/${id}`);\n  }\n\n  create(data) {\n    return http.post(\"/routeStocks\", data);\n  }\n\n  update(id, data) {\n    return http.put(`/routeStocks/${id}`, data);\n  }\n\n  delete(id) {\n    return http.delete(`/routeStocks/${id}`);\n  }\n\n  deleteAll() {\n    return http.delete(\"/routeStocks\");\n  }\n}\n\nexport default new RouteStockService();\n","import React, { Component } from \"react\";\nimport RouteService from \"../services/route.service\";\nimport RouteStockService from \"../services/route.stock.service\";\nimport CustomerService from \"../services/customer.service\";\nimport DeliveryService from \"../services/delivery.service\";\nimport { Link } from \"react-router-dom\";\nimport DataGrid, {TextEditor} from 'react-data-grid';\nimport moment from \"moment\";\nimport Grid from '@mui/material/Grid';\n\nconst columns = [\n  { key: 'quantity', name: 'Stock (L)' , width: 40, editor: TextEditor , resizable: true },\n  { key: 'routeId', name: 'Action' , width: 40, resizable: true ,\n            formatter(props) {\n              return <>\n                <Link disable=\"true\"\n                to={props.row.quantity ? (\"/dailyDelivery/\" + props.row.id ): \"\"}\n                className=\"badge badge-warning\">\n                Start\n                </Link>\n              </>;\n            }},\n  { key: 'delivered', name: 'Delivered (L)' , width: 120 , resizable: true },\n  { key: 'served', name: 'Customer Served' , width: 140 , resizable: true },\n  { key: 'totalCustomer', name: 'Total Customer' , width: 130 , resizable: true },\n  { key: 'id', name: 'Route ID' , width: 80 , resizable: true },\n  { key: 'name', name: 'Name' , editor: TextEditor , resizable: true },\n  { key: 'address', name: 'Address' , editor: TextEditor , resizable: true }\n];\n\nexport default class RoutesList extends Component {\n  constructor(props) {\n    super(props);\n    this.rowChange = this.rowChange.bind(this);\n    this.saveRoute = this.saveRoute.bind(this);\n\n    this.state = {\n      rows: []\n    };\n    \n  }\n\n  componentDidMount() {\n    this.retrieveRoutes();\n  }\n  retrieveRoutes() {\n    var currentDate = moment();\n    var initialRows = null;\n    RouteService.getAll().then(response => {\n        var routes = response.data;\n\t\tconsole.log(routes);\n        initialRows = new Array(routes.length);\n        routes.map((route, index) => {\n          initialRows[index]={};\n          initialRows[index][\"id\"]=route.id;\n          initialRows[index][\"name\"]=route.name;\n          initialRows[index][\"address\"]=route.address;          \n        });\n\t\tconsole.log(initialRows);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n      \n    const param = {\n      date: currentDate.format(\"DD\") ,\n      month: currentDate.format(\"MMM-YYYY\") \n    };\n    RouteStockService.getAll(param).then((response) => {\n      var stocks = response.data;    \n\t  if(stocks){\n\t\t  stocks.map((stock, index) => {\n\t\t\tfor(var initialRow of initialRows){\n\t\t\t  if(initialRow.id == stock.routeId){\n\t\t\t\tinitialRow[\"quantity\"]=stock.quantity;\n\t\t\t\tinitialRow[\"routeStockId\"]=stock.id;\n\t\t\t\tbreak;\n\t\t\t  }\n\t\t\t};\n\t\t  });\n\t  }\n    })\n    .catch((e) => {\n      console.log(e);\n    });   \n    var customers =null;\n    const paramCustomer = {active: true}; \n    CustomerService.getAll(paramCustomer).then((response) => {\n      customers = response.data;\n      initialRows.map((initialRow, index) => {\n        var customerCount = 0;\n        for(var customer of customers){\n          if(initialRow.id == customer.routeId){\n            if(initialRow[\"customerId\"]){\n              initialRow[\"customerId\"][initialRow[\"customerId\"].length]=customer.id;\n            }else{\n              initialRow[\"customerId\"]=[];\n             initialRow[\"customerId\"][0]=customer.id;\n           }\n            customerCount++;\n          }\n        }\n        initialRow[\"totalCustomer\"]=customerCount;\n      });\n    })\n    .catch((e) => {\n      console.log(e);\n    });\n\n    DeliveryService.getAll(param).then((response) => {\n      var deliverys = response.data;\n\t  if(deliverys){\n\t\t  initialRows.map((initialRow, index) => {\n\t\t\tvar totalDelivered = 0;\n\t\t\tvar countOfCustomerDelivered = 0;\n\t\t\tdeliverys.map((delivery) => {\n\t\t\t\tif(initialRow.customerId){\n\t\t\t\t  for(var i=0; i < initialRow.customerId.length; i++){\n\t\t\t\t\tif(initialRow.customerId[i] == delivery.customerId ){\n\t\t\t\t\t  countOfCustomerDelivered++;\n\t\t\t\t\t  totalDelivered = totalDelivered + +delivery.quantity ;\n\t\t\t\t\t  break;\n\t\t\t\t\t}\n\t\t\t\t  }\n\t\t\t\t}\n\t\t\t});\n\t\t\tinitialRow[\"served\"]=countOfCustomerDelivered;\n\t\t\tinitialRow[\"delivered\"]=totalDelivered;\n\t\t  });\n\t  }\n      console.log(initialRows);\n      this.setState({\n        rows: initialRows\n      });\n    })\n    .catch((e) => {\n      console.log(e);\n    });\n    \n  }\n\n  rowChange(row, col) {\n    this.saveRoute(row[col.indexes],col);\n    this.setState({\n      rows: row\n    });\n  };\n\n  saveRoute(row,col) {\n    if(col.column.key != 'quantity'){\n        var data = {\n          id: row.id,\n          name: row.name,\n          address: row.address,\n        };\n        RouteService.update(row.id, data)\n          .then(response => {\n            console.log(response.data);\n          })\n          .catch(e => {\n            console.log(e);\n          });\n    }else{\n      var data = {\n        id: row.routeStockId,\n        routeId: row.id,\n        quantity: +row.quantity,\n        date: moment().format(\"DD\"),\n        month: moment().format(\"MMM-YYYY\")\n      };\n      if(data.id){\n        RouteStockService.update(data.id, data)\n        .then(response => {\n          console.log(response.data);\n          row.routeStockId = response.data.id;\n        })\n        .catch(e => {\n          console.log(e);\n        });\n      }else{\n        RouteStockService.create(data)\n        .then(response => {\n          console.log(response.data);\n          row.routeStockId = response.data.id;\n        })\n        .catch(e => {\n          console.log(e);\n        });\n      }\n    }\n  }\n\n\n  render() {\n    const { rows } = this.state;\n\n    return (\n      <div >\n        <Grid container spacing={{ xs: 4}} >\n            <Grid item xs={6} sm={6}> \n              <Link to={\"/route\"} className=\"nav-link\">\n                        Add Route\n              </Link>\n            </Grid>\n            <Grid item xs={6} sm={6}> \n            <Link className=\"nav-link\">\n                  {moment().format(\"DD-MMM-YYYY\")}\n              </Link>\n            </Grid>\n        </Grid>\n        <DataGrid columns={columns} rows={rows} onRowsChange={this.rowChange} />  \n      </div>\n    );\n  }\n}\n","import React, { Component, useState , useEffect } from \"react\";\nimport RouteService from \"../services/route.service\";\nimport { Link } from \"react-router-dom\";\nimport DataGrid, {TextEditor} from 'react-data-grid';\nimport DeliveryService from \"../services/delivery.service\";\nimport CustomerService from \"../services/customer.service\";\nimport BillService from \"../services/bill.service\";\nimport moment from 'moment';\nimport Grid from '@mui/material/Grid';\n\nconst columns = [\n  { key: 'id', name: 'ID' , minWidth: 40 , resizable: true },\n  { key: 'name', name: 'Name' , width: 200, resizable: true },\n  { key: '01', name: '1' , editor: TextEditor , minWidth:40, resizable: true },\n  { key: '02', name: '2' , editor: TextEditor , minWidth:40 , resizable: true },\n  { key: '03', name: '3' , editor: TextEditor , minWidth:40 , resizable: true },\n  { key: '04', name: '4' , editor: TextEditor , minWidth:40 , resizable: true },\n  { key: '05', name: '5' , editor: TextEditor , minWidth:40 , resizable: true },\n  { key: '06', name: '6' , editor: TextEditor , minWidth:40 , resizable: true },\n  { key: '07', name: '7' , editor: TextEditor , minWidth:40 , resizable: true },\n  { key: '08', name: '8' , editor: TextEditor , minWidth:40 , resizable: true },\n  { key: '09', name: '9' , editor: TextEditor , minWidth:40 , resizable: true },\n  { key: '10', name: '10' , editor: TextEditor , minWidth:40 , resizable: true },\n  { key: '11', name: '11' , editor: TextEditor , minWidth:40 , resizable: true },\n  { key: '12', name: '12' , editor: TextEditor , minWidth:40 , resizable: true },\n  { key: '13', name: '13' , editor: TextEditor , minWidth:40 , resizable: true },\n  { key: '14', name: '14' , editor: TextEditor , minWidth:40 , resizable: true },\n  { key: '15', name: '15' , editor: TextEditor , minWidth:40 , resizable: true },\n  { key: '16', name: '16' , editor: TextEditor , minWidth:40 , resizable: true },\n  { key: '17', name: '17' , editor: TextEditor , minWidth:40 , resizable: true },\n  { key: '18', name: '18' , editor: TextEditor , minWidth:40 , resizable: true },\n  { key: '19', name: '19' , editor: TextEditor , minWidth:40 , resizable: true },\n  { key: '20', name: '20' , editor: TextEditor , minWidth:40 , resizable: true },\n  { key: '21', name: '21' , editor: TextEditor , minWidth:40 , resizable: true },\n  { key: '22', name: '22' , editor: TextEditor , minWidth:40 , resizable: true },\n  { key: '23', name: '23' , editor: TextEditor , minWidth:40 , resizable: true },\n  { key: '24', name: '24' , editor: TextEditor , minWidth:40 , resizable: true },\n  { key: '25', name: '25' , editor: TextEditor , minWidth:40 , resizable: true },\n  { key: '26', name: '26' , editor: TextEditor , minWidth:40 , resizable: true },\n  { key: '27', name: '27' , editor: TextEditor , minWidth:40 , resizable: true },\n  { key: '28', name: '28' , editor: TextEditor , minWidth:40 , resizable: true },\n  { key: '29', name: '29' , editor: TextEditor , minWidth:40 , resizable: true },\n  { key: '30', name: '30' , editor: TextEditor , minWidth:40 , resizable: true },\n  { key: '31', name: '31' , editor: TextEditor , minWidth:40 , resizable: true },\n  { key: 'qty', name: 'Qty' , minWidth:40 , resizable: true },\n  { key: 'rate', name: 'Rate' , minWidth:40 , resizable: true },\n  { key: 'bill', name: 'Bill' , minWidth:40 , resizable: true },\n  { key: 'dues', name: 'Dues' , minWidth:40 , resizable: true },\n  { key: 'totalBill', name: 'Total' , minWidth:60 , resizable: true },\n  { key: 'paid', name: 'Paid' , minWidth:60 , resizable: true }\n];\n\nconst CustomerCalendar = props => {\n\n  const initialCalendar = {\n    currentDate: moment()\n  };\n  \n    const [rows, setRows] = useState([]);  \n    const [calendar, setCalendar] = useState(initialCalendar);\n    \n\n    useEffect(() => {\n      var calendar={currentDate: moment(props.match.params.date,'MMM-YYYY')};\n      setCalendar(calendar);\n      var initialRows = null;\n      const paramCustomer = { active: true}; \n      CustomerService.getAll(paramCustomer).then((response) => {\n        var customers = response.data;\n        initialRows = new Array(customers.length);\n        customers.map((customer, index) => {\n          initialRows[index]={};\n          initialRows[index][\"id\"]=customer.id;\n          initialRows[index][\"name\"]=customer.name;\n        });\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n      const params ={ \"month\" : calendar.currentDate.format(\"MMM-YYYY\")};\n      console.log(params);\n      DeliveryService.getAll(params).then((response) => {\n        var deliverys = response.data;\n        deliverys.map((delivery) => {\n          for(var initialRow of initialRows){\n            if(initialRow.id == delivery.customerId){\n              initialRow[delivery.date] = delivery.quantity;\n              initialRow[\"id\"+delivery.date]=delivery.id;\n              break;\n            }\n          };\n        });\n        console.log(initialRows);\n        setRows(initialRows);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n\n      const paramsBill ={ \"month\" : calendar.currentDate.format(\"MMM-YYYY\")};\n      console.log(paramsBill);\n      BillService.getAll(paramsBill).then((response) => {\n        var deliverys = response.data;\n        console.log(deliverys);\n        deliverys.map((delivery) => {\n          for(var initialRow of initialRows){\n            if(initialRow.id == delivery.customerId){\n              initialRow[\"qty\"] = delivery.quantity;\n              initialRow[\"rate\"]=delivery.rate;\n              initialRow[\"bill\"]=delivery.bill;\n              initialRow[\"dues\"]=delivery.dues;\n              initialRow[\"totalBill\"]=initialRow[\"bill\"]+(initialRow[\"dues\"]? initialRow[\"dues\"] : 0);\n              if(initialRow[\"paid\"]){\n                initialRow[\"paid\"]=initialRow[\"paid\"]+delivery.payment;\n              }else{\n                initialRow[\"paid\"]=+delivery.payment\n              }\n              break;\n            }\n          };\n        });\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n    }, [props.match.params.date]);\n\n    function rowChange(row, col) {\n      constructDeliveryUpdateData(row,col);\n      setRows (row);\n    }\n\n    function constructDeliveryUpdateData(row, col){\n      var columnVal = row[col.indexes][col.column.key]; \n      var columnId = row[col.indexes][\"id\"+col.column.key];\n      /* for (const [key, value] of Object.entries(row[col.indexes])) {\n        if(key == col.column.key){\n          columnVal = value;\n        }else if(key == (\"id\"+col.column.key)){\n          columnId = value;\n        }\n      } */\n      console.log(row[col.indexes].id+ \" - \"+columnVal + \" - \" +columnId);\n      saveDelivery(row[col.indexes].id, col.column.key, calendar.currentDate , columnVal, columnId, row[col.indexes]);\n    }\n\n    function saveDelivery (cutomerId, date, month, quantity, id, rowData) {\n      var data = {\n        customerId: cutomerId,\n        date: date,\n        month: month.format(\"MMM-YYYY\"),\n        quantity: quantity\n      };\n      if(id){\n          DeliveryService.update(id, data)\n            .then(response => {\n              console.log(response.data);\n            })\n            .catch(e => {\n              console.log(e);\n            });\n      } else {\n        DeliveryService.create(data)\n            .then(response => {\n              var idName = \"id\"+date;\n              rowData[idName]=response.data.id;\n              console.log(rowData);\n            })\n            .catch(e => {\n              console.log(e);\n            });\n        }\n      }\n\n    function generateBill(month){\n      console.log(month);\n    }\n\n    return (\n      <div >\n        {calendar ? (\n        <div className=\"list row\">\n          <Grid container spacing={{ xs: 4}} >\n          <Grid item xs={6} sm={6}> \n              <Link\n                to={\"/customerCalendar/\"+calendar.currentDate.clone().subtract(1, 'months').format('MMM-YYYY')}\n                className=\"badge badge-warning\">\n                Prev\n              </Link>\n              {calendar.currentDate.format(\"DD-MMM-YYYY\")}\n              <Link\n                to={\"/customerCalendar/\"+calendar.currentDate.clone().add(1, 'months').format('MMM-YYYY')}\n                className=\"badge badge-warning\">\n                Next\n              </Link>\n          </Grid>\n          <Grid item xs={6} sm={6}> \n              <Link\n                onClick={generateBill(calendar.currentDate.format(\"DD-MMM-YYYY\"))}\n                className=\"badge\">\n                 Generate Bill For this Month\n              </Link>\n               \n          </Grid> \n        </Grid>\n        </div>     \n         ) : (\n          <div>\n            <br />\n            <p>Please click on a Customer...</p>\n          </div>\n        )}\n        <DataGrid columns={columns} rows={rows} onRowsChange={rowChange} />  \n      </div>\n    );\n  };\n  \n  export default CustomerCalendar;","import React, { Component, useState , useEffect } from \"react\";\nimport RouteService from \"../services/route.service\";\nimport { Link } from \"react-router-dom\";\nimport DataGrid, {TextEditor, SelectCellFormatter} from 'react-data-grid';\nimport DeliveryService from \"../services/delivery.service\";\nimport CustomerService from \"../services/customer.service\";\nimport DropDownEditor, {useRoute} from \"../components/editor/dropdown.component\";\nimport moment from 'moment';\n\nexport function stopPropagation(event) {\n  event.stopPropagation();\n}\n\nconst columns = [\n  { key: 'id', name: 'ID' , width: 40 , resizable: true },\n  { key: 'name', name: 'Name' , editor: TextEditor , resizable: true },\n  { key: 'address', name: 'Address' , editor: TextEditor , resizable: true },\n  { key: 'startDate', name: 'StartDate' , editor: TextEditor , resizable: true },\n  { key: 'endDate', name: 'EndDate' , editor: TextEditor , resizable: true },\n  { key: 'defaultQuantity', name: 'Quantity' , width: 40  , editor: TextEditor , resizable: true },\n  { key: 'active', name: 'Active' , width: 40 ,\n          formatter({ row, onRowChange, isCellSelected }) {\n            return (\n              <SelectCellFormatter\n                value={row.active}\n                onChange={() => {\n                  onRowChange({ ...row, active: !row.active });\n                }}\n                onClick={stopPropagation}\n                isCellSelected={isCellSelected}\n              />\n            );\n          } },\n  { key: 'routeId', name: 'Route' , resizable: true ,\n            formatter(props) {\n              return <>{props.row.routeName}</>;\n            },\n            editor: DropDownEditor,\n            editorOptions: {\n              editOnClick: true\n            }},\n  { key: 'routeSeq', name: 'Seq' , width: 40 , editor: TextEditor , resizable: true },\n];\n\nconst CustomerList = props => {  \n    const [rows, setRows] = useState([]);\n\n    useEffect(() => {\n      var initialRows = null;\n      const paramCustomer = {_sort: \"routeId\",\n                        _order: \"asc\"};\n      CustomerService.getAll(paramCustomer).then((response) => {\n        var customers = response.data;\n        initialRows = new Array(customers.length);\n        customers.map((customer, index) => {\n          initialRows[index]={};\n          initialRows[index][\"id\"]=customer.id;\n          initialRows[index][\"name\"]=customer.name;\n          initialRows[index][\"address\"]=customer.address;\n          initialRows[index][\"startDate\"]=customer.startDate;\n          initialRows[index][\"endDate\"]=customer.endDate;\n          initialRows[index][\"defaultQuantity\"]=customer.defaultQuantity;\n          initialRows[index][\"active\"]=customer.active;\n          initialRows[index][\"routeId\"]=customer.routeId;\n          initialRows[index][\"routeSeq\"]=customer.routeSeq;\n          if(customer.route){\n            initialRows[index][\"routeName\"]=customer.route.name;\n          }\n        });\n        setRows(initialRows);\n      })\n      .catch((e) => {\n        console.log(e);\n      });    \n    }, []);\n\n    function rowChange(row, col) {\n      constructDeliveryUpdateData(row,col);\n      setRows (row);\n    }\n\n    function constructDeliveryUpdateData(row, col){\n      console.log(row[col.indexes].id+ \" - \"+row[col.indexes][col.column.key]);\n      saveDelivery(row[col.indexes]);\n    }\n\n    function saveDelivery (row) {\n      var data = {\n        id: row.id,\n        name: row.name,\n        address: row.address,\n        startDate: row.startDate,\n        endDate: row.endDate,\n        active: row.active,\n        routeId: row.routeId,\n        defaultQuantity: row.defaultQuantity,\n        routeSeq: row.routeSeq\n      };\n      \n          CustomerService.update(row.id, data)\n            .then(response => {\n              console.log(response.data);\n            })\n            .catch(e => {\n              console.log(e);\n            });\n    }\n\n    return (\n      <div >\n                <Link to={\"/addCustomer\"} className=\"nav-link\">\n                  Add Customer\n                </Link>\n        <div>\n          <DataGrid columns={columns} rows={rows} onRowsChange={rowChange} />  \n        </div>\n      </div>\n    );\n  };\n  \n  export default CustomerList;","import React, { useState , useEffect } from \"react\";\r\nimport RouteService from \"../../services/route.service\";\r\nimport DataGrid, {TextEditor, EditorProps, Row} from 'react-data-grid';\r\nimport RoutesList from \"../routes-list.component\";\r\nimport { useRoutes } from \"../hooks/route.hook\";\r\n\r\nexport default function DropDownEditor({ row, onRowChange }) {\r\n  const { selectData } = useRoutes(); \r\n    \r\n  return (\r\n    <select\r\n      className={TextEditor.textEditorClassname}\r\n      value={row.routeId}\r\n      onChange={(event) => onRowChange({ ...row, routeId: event.target.value }, true)}\r\n      autoFocus\r\n    >\r\n      {selectData && selectData.map((selectDataRecord) => (\r\n        <option key={selectDataRecord.id} value={selectDataRecord.id}>\r\n          {selectDataRecord.name}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n}","import React, { useState , useEffect } from \"react\";\r\nimport RouteService from \"../../services/route.service\";\r\n\r\nexport const useRoutes = () => {\r\n  const [selectData, setSelectData] = useState();\r\n  useEffect(() => {\r\n    if(!selectData || selectData.length === 0){\r\n      RouteService.getAll()\r\n      .then(response => {\r\n        setSelectData(response.data);\r\n        console.log(selectData);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n    }\r\n  }, [selectData]);\r\n  return {selectData};\r\n}","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport moment from 'moment';\n\nimport AddCustomer from \"./components/add-customer.component\";\nimport ProjectData from \"./components/daily-delivery.component\";\nimport AddRoute from \"./components/add-route.component\";\nimport RoutesList from \"./components/routes-list.component\";\nimport CustomerCalendar from \"./components/customer-calendar.component\";\nimport CustomerList from \"./components/customer-list.component\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n            <div className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n                <Link to={\"/routes\"} className=\"nav-link\">\n                  Routes\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link to={\"/customers\"} className=\"nav-link\">\n                  Customers\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link to={\"/customerCalendar/\"+moment().format(\"MMM-YYYY\")} className=\"nav-link\">\n                  Customer-Calendar\n                </Link>\n              </li>\n            </div>\n          </nav>\n\n          <div className=\"container mt-3\">\n            <Switch>\n              <Route exact path={[\"/\", \"/routes\"]} component={RoutesList} />\n              <Route exact path=\"/customers\" component={CustomerList} />\n              <Route exact path=\"/addCustomer\" component={AddCustomer} />\n              <Route exact path=\"/dailyDelivery/:id\" component={ProjectData} />\n              <Route exact path=\"/route\" component={AddRoute} />\n              <Route exact path=\"/routes\" component={RoutesList} />\n              <Route exact path=\"/customerCalendar/:date\" component={CustomerCalendar} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { StyledEngineProvider } from '@mui/material/styles';\nReactDOM.render(\n  <StyledEngineProvider injectFirst>\n    <App />\n  </StyledEngineProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}