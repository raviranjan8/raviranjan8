{"version":3,"sources":["http-common.js","services/customer.service.js","services/route.service.js","components/add-customer.component.js","services/product.service.js","components/add-product.component.js","services/delivery.service.js","services/route.stock.service.js","components/editor/numericeditor.component.js","components/routes-list.component.js","components/editor/dropdown.component.js","components/hooks/route.hook.js","components/product-list.component.js","services/seller.product.service.js","components/seller-product.component.js","services/bill.service.js","services/payment.service.js","components/modal.component.js","components/daily-delivery.component.js","components/add-route.component.js","services/rate.service.js","components/hooks/countdown.latch.js","components/customer-calendar.component.js","components/customer-today.component.js","components/collection-bills-list.component.js","components/collection-daily.component.js","components/customer-list.component.js","components/bills.component.js","components/collection-bills.component.js","components/expense-bills.component.js","components/expense-list.component.js","components/add-expense.component.js","services/auth.service.js","components/login.component.js","App.js","serviceWorker.js","index.js"],"names":["axios","create","baseURL","headers","params","http","get","id","data","post","put","mobNo","delete","AddCustomer","props","onChangeName","bind","onChangeAddress","onChangeMobNo","onChangeStartDate","onChangeActive","onChangeRoute","onChangeType","onChangeDefaultQuantity","onChangeRouteSeq","saveTutorial","newTutorial","getRoute","myRef","React","createRef","myRefType","today","moment","state","name","address","type","active","startDate","format","routeId","defaultQuantity","routes","routeSeq","submitted","e","this","setState","target","value","length","checked","disabled","current","console","log","CustomerService","then","response","Response","catch","RouteService","getAll","className","onClick","htmlFor","required","onChange","ref","map","option","defaultChecked","Component","AddProduct","onChangeminRate","onChangemaxRate","onChangephoto","onChangedescription","onChangeunitOfQuantity","minRate","maxRate","photo","description","unitOfQuantity","ProductService","products","autoFocusAndSelect","input","select","focus","NumericEditor","row","column","onRowChange","onClose","inputmode","key","event","onBlur","columns","width","editor","editorOptions","editOnClick","resizable","formatter","disable","to","quantity","pending","TextEditor","RoutesList","rowChange","saveRoute","routeStockService","rows","retrieveRoutes","currentDate","initialRows","param","date","month","Array","route","index","extraInfo","customerCount","customerTotalQuantity","customerDeliveredCount","customerDeliveredQuantity","customerPendingCount","RouteStockService","stocks","stock","initialRow","col","indexes","update","routeStockId","Grid","container","spacing","xs","item","sm","onRowsChange","DropDownEditor","useState","selectData","setSelectData","useEffect","useRoutes","textEditorClassname","autoFocus","selectDataRecord","FilterContext","createContext","undefined","inputStopPropagation","includes","stopPropagation","getComparator","sortColumn","a","b","localeCompare","ProductList","setRows","sortColumns","setSortColumns","enabled","filters","setFilters","headerCellClass","headerRenderer","p","FilterRenderer","rest","onKeyDown","_sort","_order","product","filteredRows","useMemo","filter","r","sort","compResult","columnKey","comparator","direction","Provider","saveDelivery","constructDeliveryUpdateData","defaultColumnOptions","sortable","onSortColumnsChange","headerRowHeight","isCellSelected","children","useContext","isSelected","useRef","useLayoutEffect","preventScroll","tabIndex","useFocusRef","SellerProduct","onChangeDescription","onChangeBrand","onChangeCompany","onChangeMRP","onChangeUnit","onChangeWeight","onChangeMeasurment","onChangeQuantity","onChangeRate","onChangeDiscount","onChangeDiscountType","onChangeDeliveryCharge","onChangeproduct","getproduct","brand","company","MRP","unit","weight","measurment","rate","discount","discountType","deliveryCharge","productId","SellerProductService","Modal","handleClickOpen","open","handleClose","getCustomerBill","savePayment","saveMobNo","onChangePayment","getPayment","getBill","partyId","payment","prevBill","currentBill","updateMobNo","PaymentService","bill","dues","monthprev","clone","subtract","billName","BillService","bills","category","align","readOnly","onDate","amount","onAmount","onQuantity","style","textAlign","onUpdate","onModalClose","onPrev","previousTitle","onNext","nextTitle","TableContainer","component","Paper","Table","sx","minWidth","TableHead","TableRow","TableCell","TableBody","scope","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","ProjectData","handleModalOpen","idx","activeProject","modalTitle","projects","handleModalClose","handleNextProject","arr","handlePrevProject","handleModalUpdate","getProjects","onChangeDate","onChangeAmount","match","searchFlag","dateObj","DeliveryService","response1","projectComponents","url","onModalOpen","md","i","prevTitle","Item","styled","theme","typography","body2","padding","color","palette","text","secondary","Project","AddRoute","Date","getDate","parseInt","getMonth","getFullYear","CountdownLatch","limit","count","waitBlock","prototype","countDown","await","callback","filterColumnClassName","filterClassname","CustomerCalendar","initialCalendar","message","setMessage","setRate","setOpen","confirm","setConfirm","calendar","setCalendar","frozen","generateBillAfterCheck","paramsBill","generateBills","deliverys","delivery","paramCustomer","RateService","rates","barrier","customers","customer","lastBillTotal","paramsBillPrev","billService","deliveryService","add","validateBillGeneration","status","defaultValue","height","endDate","newRate","variant","filename","columnVal","columnId","cutomerId","rowData","slice","CustomerDaily","CollectionBillsList","from","setFrom","setTo","getBills","party","generateBillsCollectionAfterCheck","generateBillsCollection","hidden","paramsFrom","validateCollectionBillsGeneration","generateBillCollection","placeholder","CollectionDaily","pa0tyId","rowCopy","qty","paid","splice","addCollectionForSameFarmer","idtoday","fat","snf","water","tempQantity","deliveryDate","CustomerList","routeName","Bills","border","totalBill","margin","colspan","rowSpan","CollectionBills","colSpan","ExpenseBills","allBills","allBill","allPayments","allPayment","ExpenseList","expenses","sortedRows","cotegory","AddExpense","saveExpense","newExpense","onChangeCategory","inputDate","JSON","parse","localStorage","getItem","userName","setItem","stringify","roles","Login","AuthService","setCurrentUser","getCurrentUser","history","push","window","location","reload","App","showModeratorBoard","showAdminBoard","currentUser","user","exact","path","EmployeeDaily","Boolean","hostname","ReactDOM","render","StyledEngineProvider","injectFirst","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.41bf0f41.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n baseURL: \"http://dairyweb-env.eba-rp2mcr7k.ap-south-1.elasticbeanstalk.com/api\",\r\n  //baseURL: \"http://localhost:8080/api\",\r\n  //baseURL: \"http://192.168.43.137:3000\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\",\r\n    \"Access-Control-Allow-Origin\": \"*\"\r\n  }\r\n});","import http from \"../http-common\";\r\n\r\nclass CustomerService {\r\n  getAll(params) {\r\n    return http.get(\"/partys\", { params });\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/partys/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/partys\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/partys/${id}`, data);\r\n  }\r\n\r\n  updateMobNo(id, mobNo, data) {\r\n    return http.put(`/partys/${id}/${mobNo}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/partys/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(\"/partys\");\r\n  }\r\n}\r\n\r\nexport default new CustomerService();\r\n","import http from \"../http-common\";\r\n\r\nclass RouteService {\r\n  getAll(params) {\r\n    return http.get(\"/routes\", { params });\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/routes/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/routes\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/routes/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/routes/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(\"/routes\");\r\n  }\r\n}\r\n\r\nexport default new RouteService();\r\n","import React, { Component } from \"react\";\r\nimport CustomerService from \"../services/customer.service\";\r\nimport RouteService from \"../services/route.service\";\r\nimport moment from \"moment\";\r\n\r\nexport default class AddCustomer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeName = this.onChangeName.bind(this);\r\n    this.onChangeAddress = this.onChangeAddress.bind(this);\r\n    this.onChangeMobNo = this.onChangeMobNo.bind(this);\r\n    this.onChangeStartDate = this.onChangeStartDate.bind(this);\r\n    this.onChangeActive = this.onChangeActive.bind(this);\r\n    this.onChangeRoute = this.onChangeRoute.bind(this);\r\n  \tthis.onChangeType = this.onChangeType.bind(this);\r\n    this.onChangeDefaultQuantity = this.onChangeDefaultQuantity.bind(this);\r\n    this.onChangeRouteSeq = this.onChangeRouteSeq.bind(this);\r\n    this.saveTutorial = this.saveTutorial.bind(this);\r\n    this.newTutorial = this.newTutorial.bind(this);\r\n    this.getRoute = this.getRoute.bind(this);\r\n    this.myRef = React.createRef();\r\n  \tthis.myRefType = React.createRef();\r\n\r\n    const today = moment();\r\n    this.state = {\r\n      id: null,\r\n      name: \"\",\r\n      address: \"\", \r\n      mobNo: \"\",\r\n\t    type:\"\",\r\n      active: true,\r\n      startDate: today.format(\"DD-MMM-YYYY\"),\r\n      routeId: \"\",\r\n      defaultQuantity: 1,\r\n      routes:[],\r\n      routeSeq:null,\r\n      submitted: false\r\n    };\r\n  }\r\n\r\n\tonChangeType(e){\r\n\t\tthis.setState({\r\n\t\t  type: e.target.value\r\n\t\t});\r\n\t}\r\n  onChangeName(e) {\r\n    this.setState({\r\n      name: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeAddress(e) {\r\n    this.setState({\r\n      address: e.target.value\r\n    });\r\n  }\r\n  onChangeMobNo(e) {\r\n    if (e.target.value.length<11 ){\r\n    this.setState({\r\n    mobNo: e.target.value  \r\n    });\r\n  }\r\n  }\r\n\r\n  onChangeRouteSeq(e) {\r\n    this.setState({\r\n      routeSeq: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeStartDate(e) {\r\n    this.setState({\r\n      startDate: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeActive(e) {\r\n    this.setState({\r\n      active: e.target.checked\r\n    });\r\n  }\r\n\r\n  onChangeRoute(e) {\r\n    this.setState({\r\n      routeId: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeDefaultQuantity(e) {\r\n    this.setState({\r\n      defaultQuantity: e.target.value\r\n    });\r\n  }\r\n\r\n  saveTutorial(e) {\r\n\te.target.disabled=true;\r\n    var data = {\r\n      name: this.state.name,\r\n      address: this.state.address,\r\n      mobNo: this.state.mobNo,\r\n      startDate: this.state.startDate,\r\n      active: this.state.active,\r\n      routeId: this.myRef.current.value,\r\n\t  type: this.myRefType.current.value,\r\n      defaultQuantity: this.state.defaultQuantity,\r\n      routeSeq: this.state.routeSeq\r\n    };\r\nconsole.log(data);\r\nthis.setState({submitted: true});\r\n    CustomerService.create(data)\r\n      .then(response => {\r\n        this.setState({\r\n          id: response.data.id,\r\n          name: response.data.name,\r\n          address: response.data.address,\r\n          mobNo: Response.data.mobNo,\r\n          active: response.data.active,\r\n          startDate: response.data.startDate,\r\n          routeId: response.data.routeId,\r\n\t\t      type: response.data.type,\r\n          defaultQuantity: response.data.defaultQuantity,\r\n          routeSeq: response.data.routeSeq,\r\n          submitted: true\r\n        });\r\n\t\te.target.disabled=false;\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  newTutorial() {\r\n    this.setState({\r\n      id: null,\r\n      name: \"\",\r\n      address: \"\",\r\n      mobNo: \"\",\r\n      startDate: moment().format(\"DD-MMM-YYYY\"),\r\n      active: true,\r\n      routeId: \"\",\r\n\t  type: \"\",\r\n      defaultQuantity:1,\r\n      routeSeq: null,\r\n      submitted: false\r\n    });\r\n  }\r\n\r\n  //\r\n  componentDidMount() {\r\n    this.getRoute();\r\n  }\r\n\r\n  getRoute(){\r\n    RouteService.getAll()\r\n      .then(response => {\r\n        this.setState({\r\n          routes: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { routes } = this.state;\r\n    return (\r\n      <div className=\"submit-form\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>You submitted successfully!</h4>\r\n            <button className=\"btn btn-success\" onClick={this.newTutorial}>\r\n              Add\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"name\">Customer Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"name\"\r\n                required\r\n                value={this.state.name}\r\n                onChange={this.onChangeName}\r\n                name=\"name\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"address\">Address</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"address\"\r\n                required\r\n                value={this.state.address}\r\n                onChange={this.onChangeAddress}\r\n                name=\"address\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"mobNo\">MobNo</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control phone validate\"\r\n                id=\"mobNo\"\r\n                required\r\n                value={this.state.mobNo}\r\n                onChange={this.onChangeMobNo}\r\n                name=\"mobNo\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"startDate\">Start Date</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"startDate\"\r\n                required\r\n                value={this.state.startDate}\r\n                onChange={this.onChangeStartDate}\r\n                name=\"startDate\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"defaultQuantity\">Default Quantity</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                id=\"defaultQuantity\"\r\n                required\r\n                value={this.state.defaultQuantity}\r\n                onChange={this.onChangeDefaultQuantity}\r\n                name=\"defaultQuantity\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">        \r\n                  <label htmlFor=\"routeId\">Route</label>\r\n                  <div className=\"select-container\">\r\n                    <select className=\"form-control\" value={this.state.routeId} \r\n                    onChange={this.onChangeRoute} ref={this.myRef} name=\"routeId\">\r\n                      {routes.map((option) => (\r\n                        <option value={option.id}>{option.name}</option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"routeSeq\">Route Sequene</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                id=\"routeSeq\"\r\n                required\r\n                value={this.state.routeSeq}\r\n                onChange={this.onChangeRouteSeq}\r\n                name=\"routeSeq\"\r\n              />\r\n            </div>\r\n\t\t\t <div className=\"form-group\">        \r\n                  <label htmlFor=\"type\">Type</label>\r\n                  <div className=\"select-container\">\r\n                    <select className=\"form-control\" value={this.state.type} \r\n\t\t\t\t\t\tonChange={this.onChangeType} ref={this.myRefType} name=\"type\">\r\n                        <option value=\"customer\">Customer</option>\r\n                        <option value=\"staff\">Staff</option>\r\n                        <option value=\"vendor\">Vendor</option>\r\n                        <option value=\"farmer\">Farmer</option>\r\n                        <option value=\"chicken\">Chicken</option>\r\n                        <option value=\"car\">Car</option>\r\n                        <option value=\"ace\">Ace</option>\r\n                        <option value=\"vegetable\">Vegetable</option>\r\n                        <option value=\"grains\">Grains</option>\r\n                        <option value=\"fuel\">Fuel</option>\r\n                    </select>\r\n                  </div>\r\n            </div>\r\n            <div className=\"form-group\">        \r\n                  <label htmlFor=\"active\">Active</label>\r\n                  <input type=\"checkbox\" className=\"form-control\"\r\n                  id=\"active\" name=\"active\"\r\n                  onChange={this.onChangeActive} defaultChecked={this.state.active}/>\r\n            </div>\r\n\r\n            <button onClick={this.saveTutorial} className=\"btn btn-success\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import http from \"../http-common\";\r\n\r\nclass ProductService {\r\n  getAll(params) {\r\n    return http.get(\"/products\", { params });\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/products/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/products\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/products/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/products/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(\"/products\");\r\n  }\r\n}\r\n\r\nexport default new ProductService();\r\n","import React, { Component } from \"react\";\r\nimport ProductService from \"../services/product.service\";\r\nimport moment from \"moment\";\r\n\r\nexport default class AddProduct extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeName = this.onChangeName.bind(this);\r\n    this.onChangeminRate = this.onChangeminRate.bind(this);\r\n    this.onChangemaxRate = this.onChangemaxRate.bind(this);\r\n    this.onChangephoto = this.onChangephoto.bind(this);\r\n    this.onChangedescription = this.onChangedescription.bind(this);\r\n    this.onChangeunitOfQuantity= this.onChangeunitOfQuantity.bind(this);\r\n  \tthis.onChangeType = this.onChangeType.bind(this);\r\n    this.saveTutorial = this.saveTutorial.bind(this);\r\n    this.newTutorial = this.newTutorial.bind(this);\r\n    \r\n    const today = moment();\r\n    this.state = {\r\n      id: null,\r\n      name: \"\",\r\n      minRate: \"\",\r\n      maxRate: \"\",\r\n      photo: \"\",\r\n      description: \"\",\r\n      unitOfQuantity: \"\",\r\n      submitted: false\r\n    };\r\n  }\r\n\r\n\tonChangeType(e){\r\n\t\tthis.setState({\r\n\t\t  type: e.target.value\r\n\t\t});\r\n\t}\r\n  onChangeName(e) {\r\n    this.setState({\r\n      name: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeminRate(e) {\r\n    this.setState({\r\n      minRate: e.target.value\r\n    });\r\n  }\r\n  onChangemaxRate(e) {\r\n    this.setState({\r\n      maxRate: e.target.value  \r\n    });\r\n  }\r\n  \r\n\r\n  onChangephoto(e) {\r\n    this.setState({\r\n      photo: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangedescription(e) {\r\n    this.setState({\r\n      description: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeunitOfQuantity(e) {\r\n    this.setState({\r\n      unitOfQuantity: e.target.checked\r\n    });\r\n  }\r\n  \r\n  saveTutorial(e) {\r\n\te.target.disabled=true;\r\n    var data = {\r\n      name: this.state.name,\r\n      minRate: this.state.minRate,\r\n      maxRate: this.state.maxRate,\r\n      photo: this.state.photo,\r\n      description: this.state.description,\r\n      unitOfQuantity:this.state.unitOfQuantity,\r\n    \r\n\t \r\n    };\r\nconsole.log(data);\r\nthis.setState({submitted: true});\r\n    ProductService.create(data)\r\n      .then(response => {\r\n        this.setState({\r\n          id: response.data.id,\r\n          name: response.data.name,\r\n          minRate: response.data.minRate,\r\n          maxRate: Response.data.maxRate,\r\n          photo: response.data.photo,\r\n          description: response.data.description,\r\n          submitted: true\r\n        });\r\n\t\t    e.target.disabled=false;\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  newTutorial() {\r\n    this.setState({\r\n      id: null,\r\n      name: \"\",\r\n      minRate: \"\",\r\n      maxRate: \"\",\r\n      photo: \"\",\r\n      description: \"\",\r\n      unitOfQuantity: \"\",\r\n      submitted: false\r\n    });\r\n  }\r\n\r\n  //\r\n  componentDidMount() {\r\n  }\r\n  \r\n  render() {\r\n    const { products } = this.state;\r\n    return (\r\n      <div className=\"submit-form\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>You submitted successfully!</h4>\r\n            <button className=\"btn btn-success\" onClick={this.newTutorial}>\r\n              Add\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"name\">Product Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"name\"\r\n                required\r\n                value={this.state.name}\r\n                onChange={this.onChangeName}\r\n                name=\"name\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"minRate\">MinRate</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                id=\"minRate\"\r\n                required\r\n                value={this.state.minRate}\r\n                onChange={this.onChangeminRate}\r\n                name=\"minRate\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"maxRate\">MaxRate</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                id=\"maxRate\"\r\n                required\r\n                value={this.state.maxRate}\r\n                onChange={this.onChangemaxRate}\r\n                name=\"maxRate\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"photo\">Photo\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"photo\"\r\n                required\r\n                value={this.state.photo}\r\n                onChange={this.onChangephoto}\r\n                  name=\"photo\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"description\">Description</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"description\"\r\n                required\r\n                value={this.state.description}\r\n                onChange={this.onChangedescription}\r\n                name=\"description\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"unitOfQuantity\">Unit Of Quantity Quantity</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"unitOfQuantity\"\r\n                required\r\n                value={this.state.unitOfQuantity}\r\n                onChange={this.onChangeunitOfQuantity}\r\n                name=\"unitOfQuantity\"\r\n              />\r\n            </div>\r\n\r\n            <button onClick={this.saveTutorial} className=\"btn btn-success\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import http from \"../http-common\";\r\n\r\nclass DeliveryService {\r\n  getAll(params) {\r\n    return http.get(\"/dailyBills\", { params });\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/dailyBills/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/dailyBills\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/dailyBills/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/dailyBills/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(\"/dailyBills\");\r\n  }\r\n}\r\n\r\nexport default new DeliveryService();\r\n","import http from \"../http-common\";\r\n\r\nclass RouteStockService {\r\n  getAll(params) {\r\n    return http.get(\"/routeStocks\", { params });\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/routeStocks/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/routeStocks\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/routeStocks/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/routeStocks/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(\"/routeStocks\");\r\n  }\r\n}\r\n\r\nexport default new RouteStockService();\r\n","import React from \"react\";\r\nimport type { EditorProps } from 'react-data-grid';\r\n\r\nexport const textEditorClassname = `rdg-text-editor textEditor`;\r\n\r\nfunction autoFocusAndSelect(input: HTMLInputElement | null) {\r\n  if(input)input.select();\r\n  if(input)input.focus();\r\n}\r\n\r\nexport default function NumericEditor({\r\n  row,\r\n  column,\r\n  onRowChange,\r\n  onClose\r\n}: EditorProps) {\r\n  return (\r\n    <input\r\n\t\ttype=\"number\"\r\n\t\tinputmode=\"numeric\" \r\n      className={textEditorClassname}\r\n      ref={autoFocusAndSelect}\r\n      value={row[column.key]}\r\n      onChange={(event) => onRowChange({ ...row, [column.key]: event.target.value })}\r\n      onBlur={() => onClose(true)}\r\n    />\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport RouteService from \"../services/route.service\";\r\nimport RouteStockService from \"../services/route.stock.service\";\r\nimport CustomerService from \"../services/customer.service\";\r\nimport DeliveryService from \"../services/delivery.service\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DataGrid, {TextEditor} from 'react-data-grid';\r\nimport NumericEditor from \"../components/editor/numericeditor.component\";\r\nimport moment from \"moment\";\r\nimport Grid from '@mui/material/Grid';\r\n\r\nconst columns = [\r\n  { key: 'quantity', name: 'Stock Q' , width: 40, editor: NumericEditor, editorOptions: {editOnClick: true} , resizable: true },\r\n  { key: 'routeId', name: 'Action' , width: 40, resizable: true ,\r\n            formatter(props) {\r\n              return <>\r\n                <Link disable=\"true\"\r\n                to={props.row.quantity ? (\"/gui/dailyDelivery/\" + props.row.id ) : \"\"}\r\n                className=\"badge badge-warning\">\r\n                Start\r\n                </Link>\r\n              </>;\r\n            }},\r\n  { key: 'delivered', name: 'Delivered Q' , width: 100 , resizable: true },\r\n  { key: 'pending', name: 'Pending' , width: 80 , resizable: true ,\r\n\t\tformatter(props) {\r\n              return <>\r\n                <Link disable=\"true\"\r\n                to={props.row.quantity ? (\"/gui/dailyDelivery/\" + props.row.id+\"/\"+props.row.pending ): \"\"}\r\n                className=\"badge badge-warning\">\r\n                Pending - {props.row.pending}\r\n                </Link>\r\n              </>;\r\n            }},\r\n\t\t\t\r\n  { key: 'served', name: 'Customer Served' , width: 140 , resizable: true },\r\n  { key: 'totalCustomer', name: 'Total Customer' , width: 130 , resizable: true },\r\n  { key: 'customerQuantity', name: 'Required Q' , width: 100 , resizable: true },\r\n  { key: 'id', name: 'Route ID' , width: 80 , resizable: true },\r\n  { key: 'name', name: 'Name' , editor: TextEditor, editorOptions: {editOnClick: true} , resizable: true },\r\n  { key: 'address', name: 'Address' , editor: TextEditor, editorOptions: {editOnClick: true} , resizable: true }\r\n];\r\n\r\nexport default class RoutesList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.rowChange = this.rowChange.bind(this);\r\n    this.saveRoute = this.saveRoute.bind(this);\r\n    this.routeStockService = this.routeStockService.bind(this);    \r\n\r\n    this.state = {\r\n      rows: []\r\n    };\r\n    \r\n  }\r\n\r\n  componentDidMount() {\r\n    this.retrieveRoutes();\r\n  }\r\n  retrieveRoutes() {\r\n    var currentDate = moment();\r\n    var initialRows = null;\r\n    const param = {\r\n      date: currentDate.format(\"DD\") ,\r\n      month: currentDate.format(\"MMM-YYYY\") , \r\n      type: \"income\"\r\n    };\r\n    RouteService.getAll(param).then(response => {\r\n        var routes = response.data;\r\n\t\t    console.log(routes);\r\n        initialRows = new Array(routes.length);\r\n        routes.map((route, index) => {\r\n          initialRows[index]={};\r\n          initialRows[index][\"id\"]=route.id;\r\n          initialRows[index][\"name\"]=route.name;\r\n          initialRows[index][\"address\"]=route.address;    \r\n          \r\n          if(route.extraInfo){\r\n            initialRows[index][\"totalCustomer\"]=route.extraInfo.customerCount;\r\n            initialRows[index][\"customerQuantity\"]=route.extraInfo.customerTotalQuantity;\r\n\r\n            initialRows[index][\"served\"]=route.extraInfo.customerDeliveredCount;\r\n            initialRows[index][\"delivered\"]=route.extraInfo.customerDeliveredQuantity;\r\n            initialRows[index][\"pending\"]=route.extraInfo.customerPendingCount;\r\n          }\r\n        });\r\n        \r\n        this.routeStockService(param, initialRows);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  routeStockService(param, initialRows){\r\n    RouteStockService.getAll(param).then((response) => {\r\n      var stocks = response.data;    \r\n      if(stocks){\r\n        stocks.map((stock, index) => {\r\n        for(var initialRow of initialRows){\r\n          if(initialRow.id == stock.routeId){\r\n            initialRow[\"quantity\"]=stock.quantity;\r\n            initialRow[\"routeStockId\"]=stock.id;\r\n          break;\r\n          }\r\n        };\r\n        });\r\n      }\r\n      this.setState({\r\n        rows: initialRows\r\n      });\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n    });   \r\n  }  \r\n\r\n  rowChange(row, col) {\r\n    this.saveRoute(row[col.indexes],col);\r\n    this.setState({\r\n      rows: row\r\n    });\r\n  };\r\n\r\n  saveRoute(row,col) {\r\n    if(col.column.key != 'quantity'){\r\n        var data = {\r\n          id: row.id,\r\n          name: row.name,\r\n          address: row.address,\r\n        };\r\n        RouteService.update(row.id, data)\r\n          .then(response => {\r\n            console.log(response.data);\r\n          })\r\n          .catch(e => {\r\n            console.log(e);\r\n          });\r\n    }else{\r\n      var data = {\r\n        id: row.routeStockId,\r\n        routeId: row.id,\r\n        quantity: +row.quantity,\r\n        date: moment().format(\"DD\"),\r\n        month: moment().format(\"MMM-YYYY\")\r\n      };\r\n      if(data.id){\r\n        RouteStockService.update(data.id, data)\r\n        .then(response => {\r\n          console.log(response.data);\r\n          row.routeStockId = response.data.id;\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n      }else{\r\n        RouteStockService.create(data)\r\n        .then(response => {\r\n          console.log(response.data);\r\n          row.routeStockId = response.data.id;\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    const { rows } = this.state;\r\n\r\n    return (\r\n      <div >\r\n        <Grid container spacing={{ xs: 4}} >\r\n            <Grid item xs={6} sm={6}> \r\n              <Link to={\"/gui/route\"} className=\"nav-link\">\r\n                        Add Route\r\n              </Link>\r\n            </Grid>\r\n            <Grid item xs={6} sm={6}> \r\n            <Link className=\"nav-link\">\r\n                  {moment().format(\"DD-MMM-YYYY\")}\r\n              </Link>\r\n            </Grid>\r\n        </Grid>\r\n        <DataGrid columns={columns} rows={rows} onRowsChange={this.rowChange} />  \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useState , useEffect } from \"react\";\r\nimport RouteService from \"../../services/route.service\";\r\nimport DataGrid, {TextEditor, EditorProps, Row} from 'react-data-grid';\r\nimport RoutesList from \"../routes-list.component\";\r\nimport { useRoutes } from \"../hooks/route.hook\";\r\n\r\nexport default function DropDownEditor({ row, onRowChange }) {\r\n  const { selectData } = useRoutes(); \r\n    \r\n  return (\r\n    <select\r\n      className={TextEditor.textEditorClassname}\r\n      value={row.routeId}\r\n      onChange={(event) => onRowChange({ ...row, routeId: event.target.value }, true)}\r\n      autoFocus\r\n    >\r\n      {selectData && selectData.map((selectDataRecord) => (\r\n        <option key={selectDataRecord.id} value={selectDataRecord.id}>\r\n          {selectDataRecord.name}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n}","import React, { useState , useEffect } from \"react\";\r\nimport RouteService from \"../../services/route.service\";\r\n\r\nexport const useRoutes = () => {\r\n  const [selectData, setSelectData] = useState();\r\n  useEffect(() => {\r\n    if(!selectData || selectData.length === 0){\r\n      RouteService.getAll()\r\n      .then(response => {\r\n        setSelectData(response.data);\r\n        console.log(selectData);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n    }\r\n  }, [selectData]);\r\n  return {selectData};\r\n}","import React, { useState , useEffect, useMemo, useContext, createContext, useRef , useLayoutEffect } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport DataGrid, {TextEditor, SelectCellFormatter} from 'react-data-grid';\r\nimport DeliveryService from \"../services/delivery.service\";\r\nimport ProductService from \"../services/product.service\";\r\nimport DropDownEditor, {useRoute} from \"./editor/dropdown.component\";\r\nimport NumericEditor from \"./editor/numericeditor.component\";\r\nimport moment from 'moment';\r\n\r\n//const rootClassname = 'rootClassname';\r\nconst filterColumnClassName = 'filter-cell';\r\nconst filterContainerClassname = 'filterContainerClassname';\r\nconst filterClassname = 'filterClassname';\r\n\r\nconst FilterContext = createContext(undefined);\r\n\r\nfunction inputStopPropagation(event) {\r\n  if (['ArrowLeft', 'ArrowRight'].includes(event.key)) {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n\r\nexport function stopPropagation(event) {\r\n  event.stopPropagation();\r\n}\r\n\r\nfunction getComparator(sortColumn) {\r\n  switch (sortColumn) {\r\n    case 'name':\r\n\tcase 'description':\r\n\r\n      return (a, b) => {\r\n        return a[sortColumn].localeCompare(b[sortColumn]);\r\n      };\r\n    default:\r\n      return (a, b) => {\r\n        return a[sortColumn] - b[sortColumn];\r\n      };\r\n  }\r\n}\r\n\r\nconst ProductList = props => {  \r\n\r\n  const [rows, setRows] = useState([]);\r\n\tconst [sortColumns, setSortColumns] = useState([]);  \r\n  const [filters, setFilters] = useState({\r\n    name: '',\r\n    enabled: true\r\n  });\r\n\r\n  const columns = [\r\n    { key: 'id', name: 'ID' , width: 40 , resizable: true,\r\n        headerCellClass: filterColumnClassName,\r\n        headerRenderer: (p) => (\r\n          <FilterRenderer {...p}>\r\n            {({ filters, ...rest }) => (\r\n              <input\r\n                {...rest}\r\n                className={filterClassname}\r\n                value={filters.name}\r\n                onChange={(e) =>\r\n                  setFilters({\r\n                    ...filters,\r\n                    name: e.target.value\r\n                  })\r\n                }\r\n                onKeyDown={inputStopPropagation}\r\n              />\r\n            )}\r\n          </FilterRenderer>\r\n        )\r\n    },\r\n    { key: 'name', name: 'Name' , editor: TextEditor, editorOptions: {editOnClick: true} , resizable: true },\r\n    { key: 'minRate', name: 'minRate' , editor: NumericEditor, editorOptions: {editOnClick: true} , resizable: true },\r\n    { key: 'maxRate', name: 'maxRate' , editor: NumericEditor, editorOptions: {editOnClick: true} , resizable: true },\r\n    { key: 'photo', name: 'Photo' , editor: TextEditor, editorOptions: {editOnClick: true} , resizable: true },\r\n    { key: 'description', name: 'Description' , editor: TextEditor, editorOptions: {editOnClick: true} , resizable: true ,\r\n           },\r\n  ];\r\n\r\n    useEffect(() => {\r\n      var initialRows = null;\r\n      const paramProduct= { _sort: \"routeId\",\r\n                        _order: \"asc\"};\r\n     ProductService.getAll(paramProduct).then((response) => {\r\n        var products = response.data;\r\n        initialRows = new Array(products.length);\r\n        products.map((product, index) => {\r\n          initialRows[index]={};\r\n          initialRows[index][\"id\"]=product.id;\r\n          initialRows[index][\"name\"]=product.name;\r\n          initialRows[index][\"minRate\"]=product.minRate;\r\n          initialRows[index][\"maxRate\"]=product.maxRate;\r\n          initialRows[index][\"photo\"]=product.photo;\r\n          initialRows[index][\"description\"]=product.description;\r\n          \r\n        });\r\n        setRows(initialRows);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });    \r\n    }, []);\r\n\r\n    function rowChange(row, col) {\r\n      constructDeliveryUpdateData(row,col);\r\n      setRows (row);\r\n    }\r\n\r\n    function constructDeliveryUpdateData(row, col){\r\n      console.log(row[col.indexes].id+ \" - \"+row[col.indexes][col.column.key]);\r\n      saveDelivery(row[col.indexes]);\r\n    }\r\n\r\n    function saveDelivery (row) {\r\n      var data = {\r\n        id: row.id,\r\n        name: row.name,\r\n        minRate: row.minRate,\r\n        maxRate: row.maxRate,\r\n        photo: row.photo,\r\n        description: row.description,\r\n      };\r\n      console.log(data);\r\n      \r\n           ProductService.update(row.id, data)\r\n            .then(response => {\r\n              console.log(response.data);\r\n            })\r\n            .catch(e => {\r\n              console.log(e);\r\n            }); \r\n    }\r\n\r\n\t  const filteredRows = useMemo( () => {\r\n      function filter(){\r\n        var filteredRows = null;\r\n         filteredRows = rows.filter((r) => {\r\n          return (\r\n            (filters.name ? r.name.includes(filters.name) : true)\r\n          );\r\n        })\r\n        if (sortColumns.length === 0) return filteredRows;\r\n        filteredRows = [...filteredRows].sort((a, b) => {\r\n          for (const sort of sortColumns) {\r\n            const comparator = getComparator(sort.columnKey);\r\n            const compResult = comparator(a, b);\r\n            if (compResult !== 0) {\r\n              return sort.direction === 'ASC' ? compResult : -compResult;\r\n            }\r\n          }\r\n          return 0;\r\n        })\r\n        return filteredRows;\r\n      }\r\n      return filter();\r\n    }, [rows, filters, sortColumns]);\r\n  \r\n    return (\r\n      <div >\r\n                <Link to={\"/gui/addProduct\"} className=\"nav-link\">\r\n                  Add Product\r\n                </Link>\r\n        <div className=\"rootClassname\">\r\n          <FilterContext.Provider value={filters}>\r\n            <DataGrid columns={columns} onRowsChange={rowChange} \r\n             defaultColumnOptions={{\r\n              sortable: true,\r\n              resizable: true\r\n            }}\r\n              className={filters.enabled ? filterContainerClassname : undefined}\r\n              rows={filteredRows}\r\n              sortColumns={sortColumns}\r\n              onSortColumnsChange={setSortColumns}\r\n              headerRowHeight={filters.enabled ? 50 : undefined}\r\n              />\r\n            </FilterContext.Provider>\r\n          </div>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default ProductList;\r\n\r\n  \r\nfunction FilterRenderer({isCellSelected,column,children}) {\r\n  const filters = useContext(FilterContext);\r\n  const { ref, tabIndex } = useFocusRef(isCellSelected);\r\n\r\n  return (\r\n    <>\r\n      <div>{column.name}</div>\r\n      {filters.enabled && <div>{children({ ref, tabIndex, filters })}</div>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport function useFocusRef(isSelected) {\r\n  const ref = useRef(null);\r\n\r\n  useLayoutEffect(() => {\r\n    if (!isSelected) return;\r\n    ref.current && ref.current.focus({ preventScroll: true });\r\n  }, [isSelected]);\r\n\r\n\r\n  return {\r\n    ref,\r\n    tabIndex: isSelected ? 0 : -1\r\n  };\r\n}","import http from \"../http-common\";\r\n\r\nclass SellerProductService {\r\n  getAll(params) {\r\n    return http.get(\"/sellerProducts\", { params });\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/sellerProducts/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/sellerProducts\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/sellerProducts/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/sellerProducts/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(\"/sellerProducts\");\r\n  }\r\n}\r\n\r\nexport default new SellerProductService();\r\n","import React, { Component } from \"react\";\r\nimport moment from \"moment\";\r\nimport ProductService from \"../services/product.service\";\r\nimport SellerProductService from \"../services/seller.product.service\";\r\n\r\nexport default class SellerProduct extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeName = this.onChangeName.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    this.onChangeBrand = this.onChangeBrand.bind(this);\r\n    this.onChangeCompany = this.onChangeCompany.bind(this);\r\n    this.onChangeMRP = this.onChangeMRP.bind(this);\r\n    this.onChangeUnit = this.onChangeUnit.bind(this);\r\n    this.onChangeWeight = this.onChangeWeight.bind(this);\r\n  \tthis.onChangeMeasurment = this.onChangeMeasurment.bind(this);\r\n    this.onChangeQuantity = this.onChangeQuantity.bind(this);\r\n    this.onChangeRate = this.onChangeRate.bind(this);\r\n    this.onChangeDiscount = this.onChangeDiscount.bind(this);\r\n    this.onChangeDiscountType = this.onChangeDiscountType.bind(this);\r\n    this.onChangeDeliveryCharge = this.onChangeDeliveryCharge.bind(this);\r\n    this.saveTutorial = this.saveTutorial.bind(this);\r\n    this.newTutorial = this.newTutorial.bind(this);\r\n    this.onChangeproduct=this.onChangeproduct.bind(this);\r\n    this.getproduct=this.getproduct.bind(this);\r\n    this.myRef = React.createRef();\r\n    \r\n    const today = moment();\r\n    this.state = {\r\n      id: null,\r\n      name: \"\",\r\n      description: \"\", \r\n      brand: \"\",\r\n\t    company:\"\",\r\n      MRP:\"\",\r\n      unit:\"\",\r\n      weight:\"\",\r\n      measurment:\"\",\r\n      quantity:\"\",\r\n      rate:\"\",\r\n      discount:\"\",\r\n      discountType:\"\",\r\n      deliveryCharge:\"\",\r\n      products:[],\r\n      productId: \"\",\r\n      submitted: false\r\n    };\r\n  }\r\n\r\n\tonChangeType(e){\r\n\t\tthis.setState({\r\n\t\t  type: e.target.value\r\n\t\t});\r\n\t}\r\n  onChangeName(e) {\r\n    this.setState({\r\n      name: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeDescription(e) {\r\n    this.setState({\r\n      description: e.target.value\r\n    });\r\n  }\r\n  onChangeBrand(e) {\r\n    if (e.target.value.length<11 ){\r\n    this.setState({\r\n    brand: e.target.value  \r\n    });\r\n  }\r\n  }\r\n\r\n  onChangeCompany(e) {\r\n    this.setState({\r\n      company: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeMRP(e) {\r\n    this.setState({\r\n      MRP: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeUnit(e) {\r\n    this.setState({\r\n      unit: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeWeight(e) {\r\n    this.setState({\r\n      weight: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeMeasurment(e) {\r\n    this.setState({\r\n      measurment: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeQuantity(e) {\r\n    this.setState({\r\n      quantity: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeRate(e) {\r\n    this.setState({\r\n      rate: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeDiscount(e) {\r\n    this.setState({\r\n      discount: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeDiscountType(e) {\r\n    this.setState({\r\n      discountType: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeDeliveryCharge(e) {\r\n    this.setState({\r\n      deliveryCharge: e.target.value\r\n    });\r\n  }\r\n  onChangeproduct(e) {\r\n    this.setState({\r\n      productId: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeActive(e) {\r\n    this.setState({\r\n      active: e.target.checked\r\n    });\r\n  }\r\n\r\n  saveTutorial(e) {\r\n\te.target.disabled=true;\r\n    var data = {\r\n      name: this.myRef.current.value,\r\n      description: this.state.description,\r\n      brand: this.state.brand,\r\n      company: this.state.company,\r\n      MRP: this.state.MRP,\r\n      unit: this.state.unit,\r\n      weight: this.state.weight,\r\n      measurment: this.state.measurment,\r\n      quantity: this.state.quantity,\r\n      rate: this.state.rate,\r\n      discount: this.state.discount,\r\n      discountType: this.state.discountType,\r\n      deliveryCharge: this.state.deliveryCharge,\r\n      active: this.state.active,\r\n      productId: this.myRef.current.value\r\n    };\r\nconsole.log(data);\r\nthis.setState({submitted: true});\r\n    SellerProductService.create(data)\r\n      .then(response => {\r\n        this.setState({\r\n          id: response.data.id,\r\n          name: response.data.name,\r\n          name: response.data.name,\r\n          description: response.data.description,\r\n          brand: response.data.brand,\r\n          company: response.data.company,\r\n          MRP: response.data.MRP,\r\n          unit: response.data.unit,\r\n          weight: response.data.weight,\r\n          measurment: response.data.measurment,\r\n          quantity: response.data.quantity,\r\n          rate: response.data.rate,\r\n          discount: response.data.discount,\r\n          discountType: response.data.discountType,\r\n          deliveryCharge: response.data.deliveryCharge,\r\n          active: response.data.active,\r\n          productId: response.data.productId,\r\n          submitted: true\r\n        });\r\n\t\te.target.disabled=false;\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  newTutorial() {\r\n    this.setState({\r\n      id: null,\r\n      name: \"\",\r\n      description: \"\",\r\n      brand: \"\",\r\n      company: \"\",\r\n      MRP: \"\",\r\n      unit: \"\",\r\n      weight: \"\",\r\n      measurment: \"\",\r\n      quantity: \"\",\r\n      rate: \"\",\r\n      discount: \"\",\r\n      discountType: \"\",\r\n      deliveryCharge: \"\",\r\n      productId: \"\",\r\n      submitted: false\r\n    });\r\n  }\r\n\r\n  //\r\n  componentDidMount() {\r\n    this.getproduct();\r\n  }\r\n\r\n  getproduct(){\r\n    ProductService.getAll()\r\n      .then(response => {\r\n        this.setState({\r\n          products: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { products } = this.state;\r\n    return (\r\n      <div className=\"submit-form\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>You submitted successfully!</h4>\r\n            <button className=\"btn btn-success\" onClick={this.newTutorial}>\r\n              Add\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className=\"form-group\">        \r\n                  <label htmlFor=\"productId\">Product Name</label>\r\n                  <div className=\"select-container\">\r\n                    <select className=\"form-control\" value={this.state.productId} \r\n                    onChange={this.onChangeproduct} ref={this.myRef} name=\"productId\">\r\n                      {products && products.map((option) => (\r\n                        <option value={option.name}>{option.name}</option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"description\">Description</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"description\"\r\n                required\r\n                value={this.state.description}\r\n                onChange={this.onChangeDescription}\r\n                name=\"description\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"brand\">Brand</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"brand\"\r\n                required\r\n                value={this.state.brand}\r\n                onChange={this.onChangeBrand}\r\n                name=\"brand\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"company\">Company Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"company\"\r\n                required\r\n                value={this.state.company}\r\n                onChange={this.onChangeCompany}\r\n                name=\"company\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"MRP\">MRP</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"MRP\"\r\n                required\r\n                value={this.state.MRP}\r\n                onChange={this.onChangeMRP}\r\n                name=\"MRP\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"unit\">unit</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"unit\"\r\n                required\r\n                value={this.state.unit}\r\n                onChange={this.onChangeUnit}\r\n                name=\"unit\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"weight\">Weight</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"weight\"\r\n                required\r\n                value={this.state.weight}\r\n                onChange={this.onChangeWeight}\r\n                name=\"unit\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"measurment\">Measurment</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"measurment\"\r\n                required\r\n                value={this.state.measurment}\r\n                onChange={this.onChangeMeasurment}\r\n                name=\"measurment\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"quantity\">Quantity</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"quantity\"\r\n                required\r\n                value={this.state.quantity}\r\n                onChange={this.onChangeQuantity}\r\n                name=\"quantity\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"rate\">Product Rate</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"rate\"\r\n                required\r\n                value={this.state.rate}\r\n                onChange={this.onChangeRate}\r\n                name=\"rate\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"discount\">Discount </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"discount\"\r\n                required\r\n                value={this.state.discount}\r\n                onChange={this.onChangeDiscount}\r\n                name=\"discount\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"discountType\">DiscountType </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"discountType\"\r\n                required\r\n                value={this.state.discountType}\r\n                onChange={this.onChangeDiscountType}\r\n                name=\"discountType\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"deliveryCharge\">DeliveryCharge </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"deliveryCharge\"\r\n                required\r\n                value={this.state.deliveryCharge}\r\n                onChange={this.onChangeDeliveryCharge}\r\n                name=\"deliveryCharge\"\r\n              />\r\n            </div>\r\n\r\n            <button onClick={this.saveTutorial} className=\"btn btn-success\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import http from \"../http-common\";\r\n\r\nclass BillService {\r\n  getAll(params) {\r\n    return http.get(\"/bills\", { params });\r\n  }\r\n\r\n  generateBillsCollection(params) {\r\n    return http.get(\"/generateBillsCollection\",{params});\r\n  }\r\n  \r\n  validateCollectionBillsGeneration(type,params) {\r\n    return http.get(`/generateBillsCollection/${type}`,{params});\r\n}\r\n\r\n  generateBills(params) {\r\n    return http.get(\"/generateBills\", { params });\r\n  }\r\n  \r\n  validateBillGeneration(month,type) {\r\n    return http.get(`/generateBills/${month}/${type}`);\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/bills/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/bills\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/bills/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/bills/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(\"/bills\");\r\n  }\r\n}\r\n\r\nexport default new BillService();\r\n","import http from \"../http-common\";\r\n\r\nclass PaymentService {\r\n  getAll(params) {\r\n    return http.get(\"/payments\", { params });\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/payments/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/payments\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/payments/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/payments/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(\"/payments\");\r\n  }\r\n}\r\n\r\nexport default new PaymentService();\r\n","import React, { Component } from \"react\";\r\nimport moment from 'moment';\r\n\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\n\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nimport { experimentalStyled as styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nimport BillService from \"../services/bill.service\";\r\nimport PaymentService from \"../services/payment.service\";\r\nimport CustomerService from \"../services/customer.service\";\r\n\r\nexport default class Modal extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.getCustomerBill = this.getCustomerBill.bind(this);\r\n      this.savePayment = this.savePayment.bind(this);\r\n      this.saveMobNo = this.saveMobNo.bind(this);\r\n      this.onChangePayment = this.onChangePayment.bind(this);\r\n      this.onChangeMobNo = this.onChangeMobNo.bind(this);\r\n      this.handleClickOpen = this.handleClickOpen.bind(this);\r\n      this.handleClose = this.handleClose.bind(this);\r\n      this.getPayment = this.getPayment.bind(this);\r\n      this.getBill = this.getBill.bind(this);\r\n  \r\n      this.state = {\r\n        partyId: props.partyId,\r\n        payment: null,\r\n        prevBill: {},\r\n        currentBill: {},\r\n        open: false,\r\n        mobNo: null\r\n      }; \r\n    }\r\n  \r\n    componentDidMount() {\r\n      this.getCustomerBill(this.props);\r\n    }\r\n\r\n    \r\n    onChangePayment(e){\r\n      this.setState({\r\n        payment: +e.target.value\r\n      });\r\n    }\r\n\r\n    onChangeMobNo(e){\r\n      if (e.target.value.length<11 ){\r\n        this.setState({\r\n          mobNo: +e.target.value\r\n        });\r\n      }\r\n    }\r\n    saveMobNo(e){\r\n      e.target.disabled=true;\r\n      if(this.state.mobNo){\r\n        var data = {id: this.props.partyId};\r\n             CustomerService.updateMobNo(this.props.partyId, this.state.mobNo, data)\r\n              .then(response => {\r\n                console.log(response.data);\r\n                e.target.disabled=false;\r\n              })\r\n              .catch(e => {\r\n                console.log(e);\r\n              }); \r\n      }\r\n    }\r\n\r\n    savePayment(e){\r\n\t    e.target.disabled=true;\r\n      if(this.state.payment){\r\n        var data = {\r\n          partyId: this.props.partyId,\r\n          month: moment(this.props.date, \"DD-MMM-YYYY\").format(\"MMM-YYYY\"),\r\n          date: moment(this.props.date, \"DD-MMM-YYYY\").format(\"DD\"),\r\n\t\t      active: true,\r\n          payment: this.state.payment,\r\n          type: \"income\"\r\n        };\r\n        PaymentService.create(data)\r\n          .then(response => {\r\n            this.setState({\r\n              currentBill: {\r\n                quantity: this.state.currentBill.quantity,\r\n                rate: this.state.currentBill.rate,\r\n                bill: this.state.currentBill.bill,\r\n                dues: this.state.currentBill.dues,\r\n                month: moment(this.props.date, \"DD-MMM-YYYY\").format(\"MMM-YYYY\"),\r\n                payment: (this.state.currentBill.payment? this.state.currentBill.payment : 0) + response.data.payment\r\n              }\r\n            });\r\n            console.log(response.data);\r\n\t\t\t      e.target.disabled=false;\r\n            this.handleClickOpen();\r\n            this.state.payment=\"\";\r\n          })\r\n          .catch(e => {\r\n            console.log(e);\r\n          });\r\n        }\r\n    }\r\n  \r\n    handleClickOpen = () => {\r\n      this.setState({\r\n        open: true\r\n      });\r\n    };\r\n  \r\n    handleClose = () => {\r\n      this.setState({\r\n        open: false\r\n      });\r\n    };\r\n  \r\n    getCustomerBill(props){\r\n      var date = moment(props.date, \"DD-MMM-YYYY\");\r\n      var month = date.format(\"MMM-YYYY\");\r\n\r\n      var currentBill = {month: month};\r\n      this.getPayment(month, props.partyId, currentBill);\r\n      this.getBill(month, props.partyId, \"currentBill\", currentBill);\r\n    \r\n      var monthprev = date.clone().subtract(1, 'months').format(\"MMM-YYYY\");\r\n      var prevBill = {month: monthprev};\r\n      this.getPayment(monthprev, props.partyId, prevBill);\r\n      this.getBill(monthprev, props.partyId, \"prevBill\", prevBill);\r\n    \r\n    }\r\n\r\n    getBill(month, partyId, billName, prevBill){\r\n      var params ={ \"partyId\" : partyId ,\r\n              \"month\": month, \"active\": true, type: \"income\"};\r\n      BillService.getAll(params).then(response => {\r\n        var bills = response.data;\r\n        if(bills){\r\n          bills.map((bill) => {\r\n              prevBill[\"quantity\"] = bill.quantity;\r\n              prevBill[\"rate\"]=bill.rate;\r\n              prevBill[\"bill\"]=bill.bill;\r\n              prevBill[\"dues\"]=bill.dues;\r\n          });\r\n        }\r\n        this.setState({\r\n          [billName]: prevBill\r\n        });\r\n        console.log(this.state);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n    }\r\n\r\n    getPayment(month, partyId, prevBill){\r\n      var params ={ \"partyId\" : partyId ,\r\n                    \"month\": month, \"active\": true, type: \"income\"};\r\n      PaymentService.getAll(params).then(response => {\r\n        var bills = response.data;\r\n        if(bills){\r\n          bills.map((bill) => {\r\n            if(bill.category == 'discount'){\r\n              prevBill[\"discount\"]=bill.payment;\r\n            } else{\r\n              if(prevBill[\"payment\"]){\r\n                prevBill[\"payment\"]=prevBill[\"payment\"]+bill.payment;\r\n              }else{\r\n                prevBill[\"payment\"]=+bill.payment\r\n              }\r\n            }\r\n          });\r\n        }\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n    }\r\n  \r\n    render() {\r\n      const {prevBill, currentBill} = this.state;\r\n      if(this.props.partyId != this.state.partyId){\r\n        this.getCustomerBill(this.props);\r\n        this.setState({\r\n          partyId: this.props.partyId\r\n        });\r\n      }\r\n      return (\r\n        <div>\r\n          <h1 align=\"center\">{this.props.name}</h1>\r\n          <Grid container spacing={{ xs: 4}} >\r\n            <Grid item xs={12} sm={6}> \r\n                <div className=\"form-group\">\r\n                      <label htmlFor=\"date\"> Date</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"date\"\r\n                        required\r\n\t\t\t\t\t\t            readOnly =\"readOnly\"\r\n                        value={this.props.date}\r\n                        onChange={this.props.onDate}\r\n                        name=\"date\"\r\n                      />\r\n                </div>\r\n\t\t\t\t<div className=\"form-group\">\r\n                      <label htmlFor=\"amount\">Amount</label>\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        id=\"amount\"\r\n                        required\r\n                        value={this.props.amount}\r\n                        onChange={this.props.onAmount}\r\n                        name=\"amount\"\r\n                      />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                      <label htmlFor=\"defaultQuantity\">Quantity</label>\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"form-control\"\r\n                        id=\"defaultQuantity\"\r\n                        required\r\n                        value={this.props.defaultQuantity}\r\n                        onChange={this.props.onQuantity}\r\n                        name=\"defaultQuantity\"\r\n                      />\r\n                </div>\r\n                    <div className=\"form-group\" style={{ textAlign: 'center' }}>\r\n                      <button className=\"btn btn-success\" onClick={this.props.onUpdate}>Update & Next</button>\r\n                    </div>\r\n                    <div className=\"form-group\" style={{ textAlign: 'center' }}>\r\n                      <button className=\"btn btn-success\" onClick={this.props.onModalClose}>Back</button>\r\n                      {\" \"}\r\n                      <button className=\"btn btn-success\" onClick={this.props.onPrev}>{'\\u2B05'}{this.props.previousTitle} </button>\r\n                      {\" \"}                      \r\n                      <button className=\"btn btn-success\" onClick={this.props.onNext}>{this.props.nextTitle} {'\\u27A1'}</button>\r\n                    </div>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}> \r\n                <div className=\"form-group\">\r\n  \r\n                <TableContainer component={Paper}>\r\n                        <Table sx={{ minWidth: 200 }} aria-label=\"simple table\">\r\n                          <TableHead>\r\n                            <TableRow>\r\n                              <TableCell>Billing</TableCell>\r\n                              <TableCell align=\"right\">Prev Month ({prevBill.month})</TableCell>\r\n                              <TableCell align=\"right\">Current Month ({currentBill.month})</TableCell>\r\n                            </TableRow>\r\n                          </TableHead>\r\n                          <TableBody>\r\n                              <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    Quantity\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">{prevBill.quantity}</TableCell>\r\n                                <TableCell align=\"right\">{currentBill.quantity}</TableCell>\r\n                              </TableRow>\r\n                              <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    Rate\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">{prevBill.rate}</TableCell>\r\n                                <TableCell align=\"right\">{currentBill.rate}</TableCell>\r\n                              </TableRow>\r\n                              <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    Bill\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">{prevBill.bill}</TableCell>\r\n                                <TableCell align=\"right\">{currentBill.bill}</TableCell>\r\n                              </TableRow>\r\n                              <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    Payment\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">{prevBill.payment}</TableCell>\r\n                                <TableCell align=\"right\">{currentBill.payment}</TableCell>\r\n                              </TableRow>\r\n                              <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    Dues\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">{prevBill.dues}</TableCell>\r\n                                <TableCell align=\"right\">{currentBill.dues}</TableCell>\r\n                              </TableRow>\r\n                          </TableBody>\r\n                        </Table>\r\n                      </TableContainer>\r\n                    \r\n                </div>\r\n                <div className=\"form-group\">\r\n                      <label htmlFor=\"payment\">Payment</label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        id=\"payment\"\r\n                        required\r\n                        value={this.state.payment}\r\n                        onChange={this.onChangePayment}\r\n                        name=\"payment\"\r\n\t\t\t\t\t\t            type=\"number\"\r\n                      />\r\n                </div>\r\n                <button className=\"btn btn-success\" onClick={this.savePayment}>Payment Received</button>\r\n\r\n                <div className=\"form-group\">\r\n                      <label htmlFor=\"mobNo\">MobileNo</label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        id=\"mobNo\"\r\n                        required\r\n                        value={this.state.mobNo}\r\n                        onChange={this.onChangeMobNo}\r\n                        name=\"mobNo\"\r\n\t\t\t\t\t\t            type=\"number\"\r\n                      />\r\n                </div>\r\n                <button className=\"btn btn-success\" onClick={this.saveMobNo}>Set Mob No</button>  \r\n          </Grid>\r\n        </Grid>\r\n  \r\n        <Dialog\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\">\r\n          <DialogTitle id=\"alert-dialog-title\">\r\n            {\"Payments\"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              Payment of amount {this.state.payment} is confirmed.\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose}>Close</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        </div>\r\n      );\r\n    }\r\n  }","import React, { Component } from \"react\";\r\nimport moment from 'moment';\r\n\r\nimport { experimentalStyled as styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport Grid from '@mui/material/Grid';\r\n\r\n\r\nimport CustomerService from \"../services/customer.service\";\r\nimport DeliveryService from \"../services/delivery.service\";\r\nimport Modal from \"./modal.component\";\r\n\r\nexport default class ProjectData extends Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.getProjects= this.getProjects.bind(this);\r\n    this.saveDelivery= this.saveDelivery.bind(this);\r\n    this.onChangeDate = this.onChangeDate.bind(this);\r\n    this.handleNextProject = this.handleNextProject.bind(this);\r\n    this.onChangeDefaultQuantity = this.onChangeDefaultQuantity.bind(this);\r\n\tthis.onChangeAmount = this.onChangeAmount.bind(this);\r\n\r\n    this.state = {\r\n      projects: [],\r\n      activeProject: '',\r\n      modalTitle: '',\r\n      partyId: null,\r\n      quantity: null,\r\n\t    amount: null,\r\n      date: moment().format(\"DD-MMM-YYYY\")\r\n    }\r\n   \r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.getProjects(this.props.match.params.id, this.props.match.params.pending);\r\n  }\r\n\r\n  getProjects(id, pending) {\r\n\tif(pending){\r\n\t\tconst params ={ \"routeId\" : id, type: \"customer\", searchFlag: \"pending\" };\r\n\t\tCustomerService.getAll(params)\r\n\t\t  .then(response => {\r\n\t\t\tconsole.log(response.data);\r\n\t\t\tthis.setState({\r\n\t\t\t  projects: response.data\r\n\t\t\t});\r\n\t\t  })\r\n\t\t  .catch(e => {\r\n\t\t\tconsole.log(e);\r\n\t\t  });\r\n\t}else{\r\n\t\tconst params ={ \"routeId\" : id, type: \"customer\" };\r\n\t\tCustomerService.getAll(params)\r\n\t\t  .then(response => {\r\n\t\t\tconsole.log(response.data);\r\n\t\t\tthis.setState({\r\n\t\t\t  projects: response.data\r\n\t\t\t});\r\n\t\t  })\r\n\t\t  .catch(e => {\r\n\t\t\tconsole.log(e);\r\n\t\t  });\r\n\t}\r\n  }\r\n\r\n\r\n  handleModalOpen = (idx) => {\r\n    this.setState({\r\n      activeProject: idx,\r\n      modalTitle: this.state.projects[idx].name,\r\n      quantity: this.state.projects[idx].defaultQuantity,\r\n\t    amount: this.state.projects[idx].amount,\r\n      date: this.state.date,\r\n      partyId: this.state.projects[idx].id\r\n    });  \r\n  };\r\n\r\n  handleModalClose = () => {\r\n    this.setState({\r\n      activeProject: ''\r\n    });  \r\n  };\r\n\r\n  handleNextProject = () => {\r\n    \r\n    var arr = this.state.projects.length;\r\n    var idx = this.state.activeProject + 1;\r\n    var idx = idx % arr;\r\n    \r\n    this.setState({\r\n      activeProject: idx,\r\n      modalTitle: this.state.projects[idx].name,\r\n      quantity: this.state.projects[idx].defaultQuantity,\r\n\t    amount: this.state.projects[idx].amount,\r\n      date: this.state.date,\r\n      partyId: this.state.projects[idx].id\r\n    }); \r\n    \r\n  }\r\n\r\n  handlePrevProject = () => {\r\n    var arr = this.state.projects.length;\r\n    var idx = this.state.activeProject;    \r\n    if (idx === 0) {\r\n      var idx = arr - 1;\r\n    } else {\r\n      var idx = idx -1;\r\n    }\r\n    \r\n    this.setState({\r\n      activeProject: idx,\r\n      modalTitle: this.state.projects[idx].name,\r\n      quantity: this.state.projects[idx].defaultQuantity,\r\n\t  amount: this.state.projects[idx].amount,\r\n      date: this.state.date,\r\n      partyId: this.state.projects[idx].id\r\n    });  \r\n    \r\n  }\r\n\r\n  handleModalUpdate = (e) => {\r\n\t  e.target.disabled=true;\r\n    this.saveDelivery(this.state.partyId,this.state.date, this.state.quantity,this.state.amount, e);\r\n  }\r\n\r\n  onChangeDefaultQuantity(e) {\r\n    this.setState({\r\n      quantity: e.target.value\r\n    });\r\n  }\r\n  onChangeAmount(e) {\r\n    this.setState({\r\n      amount: e.target.value\r\n    });\r\n  }\r\n  onChangeDate(e) {\r\n    this.setState({\r\n      date: e.target.value\r\n    });\r\n  }\r\n\r\n  saveDelivery (id, date, quantity, amount, e) {\r\n    const dateObj = moment(date, \"DD-MMM-YYYY\");\r\n    var data = {\r\n      partyId: id,\r\n      date: dateObj.format(\"DD\"),\r\n      month: dateObj.format(\"MMM-YYYY\"),\r\n      quantity: quantity,\r\n      amount: amount,\r\n      type: \"income\"\r\n    };\r\n    \r\n    const params =  { \"partyId\" : id , \r\n                      \"date\": data.date,\r\n                      \"month\": data.month, \r\n\t\t\t\t\t  type: \"income\"\r\n                   };\r\n\t\t\t\t   //checking if already delivered for the day\r\n    DeliveryService.getAll(params).then(response => {\r\n        if(response.data && response.data.length > 0){\r\n          data[\"id\"]=response.data[0].id;\r\n          DeliveryService.update(data[\"id\"], data).then(response1 => {\r\n            console.log(response1.data);\r\n              e.target.disabled=false;\r\n              this.handleNextProject();\r\n          })\r\n          .catch(e => {\r\n            console.log(e);\r\n          });\r\n        } else {\r\n          DeliveryService.create(data).then(response1 => {\r\n            console.log(response1.data);\r\n            e.target.disabled=false;\r\n            this.handleNextProject();\r\n          })\r\n          .catch(e => {\r\n            console.log(e);\r\n          });\r\n        }\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n    \r\n    this.state.date=moment().format(\"DD-MMM-YYYY\");\r\n  }\r\n\r\n  render() {\r\n    const { projects } = this.state;\r\n    \r\n    function nextTitle(idx, arr) {\r\n      var i = idx + 1;\r\n      var i = i % arr.length;\r\n      return arr[i].name;\r\n    }\r\n    \r\n    function prevTitle(idx, arr) {\r\n      \r\n      if (idx === 0) {\r\n        var i = arr.length -1;\r\n      } else {\r\n        var i = idx -1;\r\n      }\r\n      \r\n      return arr[i].name;\r\n    }\r\n\r\n    const projectComponents = projects && projects.map((data, idx, arr) =>\r\n      <Project\r\n        key={'project-' + data.id}\r\n        index={idx}\r\n        name={data.name}\r\n        url={data.address}\r\n        onModalOpen={this.handleModalOpen}\r\n      />,\r\n    );\r\n\r\n    if(this.state.activeProject === '') {\r\n      return (\r\n        <div>\r\n          <div style={{ textAlign: 'center' }}><h1>Route - {projects && projects[0] && projects[0].route.name}</h1></div>\r\n          <Grid container spacing={{ xs: 1, md: 1 }} columns={{ xs: 4, sm: 8, md: 12 }}>\r\n                {projectComponents}\r\n          </Grid>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <Modal \r\n            name={this.state.modalTitle}\r\n            defaultQuantity={this.state.quantity}\r\n\t\t\t      amount={this.state.amount}\r\n            date={this.state.date}\r\n            partyId={this.state.partyId}\r\n            previousTitle={prevTitle(this.state.activeProject, projects)}\r\n            nextTitle={nextTitle(this.state.activeProject, projects)}\r\n            onModalClose={this.handleModalClose}\r\n            onNext={this.handleNextProject}\r\n            onPrev={this.handlePrevProject}\r\n            onDate={this.onChangeDate}\r\n            onQuantity={this.onChangeDefaultQuantity}\r\n\t\t\t      onAmount={this.onChangeAmount}\r\n            onUpdate={this.handleModalUpdate}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    color: theme.success.main\r\n  }\r\n});\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(2),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\n\r\n\r\nclass Project extends React.Component {\r\n  render() {\r\n    return (\r\n\r\n  <Grid item xs={2} sm={4} md={4} key={this.props.index} onClick={this.props.onModalOpen.bind(this, this.props.index)}>\r\n    <Item><h1>{this.props.name}</h1></Item>\r\n  </Grid>                \r\n    );\r\n  }\r\n}\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport RouteService from \"../services/route.service\";\r\n\r\nexport default class AddRoute extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeName = this.onChangeName.bind(this);\r\n    this.onChangeAddress = this.onChangeAddress.bind(this);\r\n    this.onChangeStartDate = this.onChangeStartDate.bind(this);\r\n    this.onChangeActive = this.onChangeActive.bind(this);\r\n    this.saveTutorial = this.saveTutorial.bind(this);\r\n    this.newTutorial = this.newTutorial.bind(this);\r\n    const today = new Date();\r\n    this.state = {\r\n      id: null,\r\n      name: \"\",\r\n      address: \"\", \r\n      active: true,\r\n      startDate: today.getDate() + \"-\"+ parseInt(today.getMonth()+1) +\"-\"+today.getFullYear(),\r\n\r\n      submitted: false\r\n    };\r\n  }\r\n\r\n  onChangeName(e) {\r\n    this.setState({\r\n      name: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeAddress(e) {\r\n    this.setState({\r\n      address: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeStartDate(e) {\r\n    this.setState({\r\n      startDate: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeActive(e) {\r\n    console.log(e.target.checked);\r\n    this.setState({\r\n      active: e.target.checked\r\n    });\r\n  }\r\n\r\n  saveTutorial() {\r\n    var data = {\r\n      name: this.state.name,\r\n      address: this.state.address,\r\n      startDate: this.state.startDate,\r\n      active: this.state.active\r\n    };\r\n    console.log(this.state.active);\r\n    RouteService.create(data)\r\n      .then(response => {\r\n        this.setState({\r\n          id: response.data.id,\r\n          name: response.data.name,\r\n          address: response.data.address,\r\n          active: response.data.active,\r\n          startDate: response.data.startDate,\r\n\r\n          submitted: true\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  newTutorial() {\r\n    this.today = new Date();\r\n    this.setState({\r\n      id: null,\r\n      name: \"\",\r\n      address: \"\",\r\n      startDate: this.today.getDate() + \"-\"+ parseInt(this.today.getMonth()+1) +\"-\"+this.today.getFullYear(),\r\n      active: true,\r\n\r\n      submitted: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"submit-form\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>You submitted successfully!</h4>\r\n            <button className=\"btn btn-success\" onClick={this.newTutorial}>\r\n              Add\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"name\">Route Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"name\"\r\n                required\r\n                value={this.state.name}\r\n                onChange={this.onChangeName}\r\n                name=\"name\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"address\">Address</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"address\"\r\n                required\r\n                value={this.state.address}\r\n                onChange={this.onChangeAddress}\r\n                name=\"address\"\r\n              />\r\n            </div>            \r\n\r\n            <button onClick={this.saveTutorial} className=\"btn btn-success\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import http from \"../http-common\";\r\n\r\nclass RateService {\r\n  getAll(params) {\r\n    return http.get(\"/rates\", { params });\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/rates/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/rates\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/rates/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/rates/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(\"/rates\");\r\n  }\r\n}\r\n\r\nexport default new RateService();\r\n","\r\n function CountdownLatch (limit) {\r\n  this.limit = limit;\r\n  this.count = 0;\r\n  this.waitBlock = function (){};\r\n};\r\n\r\nCountdownLatch.prototype.countDown = function (){\r\n  this.count = this.count + 1;\r\n  if(this.limit <= this.count){\r\n    return this.waitBlock();\r\n  }\r\n};\r\n\r\nCountdownLatch.prototype.await = function(callback){\r\n  this.waitBlock = callback;\r\n};\r\n\r\nexport default CountdownLatch;","import React, { useState , useEffect, useMemo, useContext, createContext, useRef , useLayoutEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DataGrid from 'react-data-grid';\r\nimport NumericEditor from \"../components/editor/numericeditor.component\";\r\nimport DeliveryService from \"../services/delivery.service\";\r\nimport CustomerService from \"../services/customer.service\";\r\nimport BillService from \"../services/bill.service\";\r\nimport RateService from \"../services/rate.service\";\r\nimport PaymentService from \"../services/payment.service\";\r\nimport CountdownLatch from \"../components/hooks/countdown.latch\";\r\nimport moment from 'moment';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nimport { CSVLink } from 'react-csv';\r\n\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\n\r\n\r\nconst rootClassname = 'rootClassname';\r\nconst filterColumnClassName = 'filter-cell';\r\nconst filterContainerClassname = 'filterContainerClassname';\r\nconst filterClassname = 'filterClassname';\r\n\r\nconst FilterContext = createContext(undefined);\r\n\r\nfunction inputStopPropagation(event) {\r\n  if (['ArrowLeft', 'ArrowRight'].includes(event.key)) {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n\r\nfunction getComparator(sortColumn) {\r\n  switch (sortColumn) {\r\n    case 'name':\r\n      return (a, b) => {\r\n        return a[sortColumn].localeCompare(b[sortColumn]);\r\n      };\r\n    default:\r\n      return (a, b) => {\r\n        return a[sortColumn] - b[sortColumn];\r\n      };\r\n  }\r\n}\r\n\r\nconst CustomerCalendar = props => {\r\n\r\n  const [filters, setFilters] = useState({\r\n    name: '',\r\n    route: '',\r\n    enabled: true\r\n  });\r\n\r\n  const initialCalendar = {\r\n    currentDate: moment()\r\n  };\r\n  \r\n    const [rows, setRows] = useState([]);  \r\n\t  const [message, setMessage] = useState();\r\n\t  const [rate, setRate] = useState({});\r\n\t  const [open, setOpen] = useState(false);\r\n\t  const [confirm, setConfirm] = useState(false);\r\n    const [calendar, setCalendar] = useState(initialCalendar);\r\n    const [sortColumns, setSortColumns] = useState([]);  \r\n    \r\n    const columns = [\r\n      { key: 'id', name: 'ID' , minWidth: 60 , resizable: true , frozen: true,\r\n          headerCellClass: filterColumnClassName,\r\n          headerRenderer: (p) => (\r\n            <FilterRenderer {...p}>\r\n              {({ filters, ...rest }) => (\r\n                <input\r\n                  {...rest}\r\n                  className={filterClassname}\r\n                  value={filters.name}\r\n                  onChange={(e) =>\r\n                    setFilters({\r\n                      ...filters,\r\n                      name: e.target.value\r\n                    })\r\n                  }\r\n                  onKeyDown={inputStopPropagation}\r\n                />\r\n              )}\r\n            </FilterRenderer>\r\n          )\r\n      },\r\n      { key: 'name', name: 'Name' , width: 200, resizable: true, frozen: true },\r\n      { key: 'route', name: 'Route' , minWidth:100 , resizable: true ,\r\n          headerCellClass: filterColumnClassName,\r\n          headerRenderer: (p) => (\r\n            <FilterRenderer {...p}>\r\n              {({ filters, ...rest }) => (\r\n                <input\r\n                  {...rest}\r\n                  className={filterClassname}\r\n                  value={filters.route}\r\n                  onChange={(e) =>\r\n                    setFilters({\r\n                      ...filters,\r\n                      route: e.target.value\r\n                    })\r\n                  }\r\n                  onKeyDown={inputStopPropagation}\r\n                />\r\n              )}\r\n            </FilterRenderer>\r\n          )\r\n      },\r\n      { key: '01', name: '1' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40, resizable: true },\r\n      { key: '02', name: '2' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '03', name: '3' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '04', name: '4' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '05', name: '5' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '06', name: '6' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '07', name: '7' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '08', name: '8' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '09', name: '9' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '10', name: '10' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '11', name: '11' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '12', name: '12' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '13', name: '13' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '14', name: '14' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '15', name: '15' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '16', name: '16' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '17', name: '17' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '18', name: '18' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '19', name: '19' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '20', name: '20' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '21', name: '21' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '22', name: '22' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '23', name: '23' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '24', name: '24' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '25', name: '25' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '26', name: '26' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '27', name: '27' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '28', name: '28' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '29', name: '29' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '30', name: '30' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: '31', name: '31' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: 'qty', name: 'Qty' , minWidth:40 , resizable: true },\r\n      { key: 'rate', name: 'Rate' , minWidth:40 , resizable: true },\r\n      { key: 'bill', name: 'Bill' , minWidth:60 , resizable: true },\r\n      { key: 'dues', name: 'Dues' , minWidth:40 , resizable: true },\r\n      { key: 'totalBill', name: 'Total' , minWidth:60 , resizable: true },\r\n      { key: 'prevBill', name: 'P-Bill' , minWidth:75 , resizable: true },\r\n      { key: 'paid', name: 'Paid' , minWidth:60 , resizable: true },\r\n      { key: 'currentDue', name: 'C-Due' , minWidth:60 , resizable: true },\r\n      { key: 'discount', name: 'Discount' , width:80 , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:40 , resizable: true },\r\n      { key: 'pay', name: 'Pay' , minWidth:60 , resizable: true , editor: NumericEditor, editorOptions: {editOnClick: true} }\r\n    ];\r\n\r\n    useEffect(() => {\r\n      var calendar={currentDate: moment(props.match.params.date,'MMM-YYYY')};\r\n      setCalendar(calendar);\r\n      var initialRows = null;\r\n      const paramCustomer = { active: true, type: \"customer\"}; \r\n\r\n      RateService.getAll(paramCustomer).then((response) => {\r\n        var rates = response.data;\r\n        var rate ={};\r\n        rates && rates.map((r, index) => {\r\n          rate = {\r\n            id: r.id,\r\n            rate: r.rate,\r\n            startDate: r.startDate,\r\n          };\r\n          });\r\n        setRate(rate);\r\n        })\r\n          .catch((e) => {\r\n            console.log(e);\r\n      });\r\n      var barrier = new CountdownLatch(3);\r\n      CustomerService.getAll(paramCustomer).then((response) => {\r\n        var customers = response.data;\r\n        initialRows = new Array(customers.length);\r\n        customers.map((customer, index) => {\r\n          initialRows[index]={};\r\n          initialRows[index][\"id\"]=customer.id;\r\n          initialRows[index][\"name\"]=customer.name;\r\n          initialRows[index][\"route\"]=customer.route.name;\r\n        });\r\n        billService(calendar, initialRows,barrier);\r\n        getPayment(calendar, initialRows,barrier);\r\n        deliveryService(calendar, initialRows,barrier);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\t  \r\n      barrier.await(function(){\r\n        setRows(initialRows);\r\n        console.log('done all');\r\n      });\r\n    }, [props.match.params.date]);\r\n\r\n    function getPayment(calendar, initialRows, barrier){\r\n      var params ={ \"month\": calendar.currentDate.format(\"MMM-YYYY\"), \"active\": true, type: \"income\"};\r\n      PaymentService.getAll(params).then(response => {\r\n        var bills = response.data;\r\n        initialRows && initialRows.map((initialRow) => {\r\n          bills && bills.map((bill) => {\r\n              if(bill.partyId == initialRow.id){\r\n                if(bill.category == 'discount'){\r\n                  initialRow[\"discount\"]=bill.payment;\r\n                  initialRow[\"iddiscount\"]=bill.id;\r\n                } else{\r\n                  if(initialRow[\"paid\"]){\r\n                    initialRow[\"paid\"]=initialRow[\"paid\"]+bill.payment;\r\n                  }else{\r\n                    initialRow[\"paid\"]=+bill.payment;\r\n                  }\r\n                }\r\n              }\r\n            });\r\n        });  \r\n        barrier.countDown();      \r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n    }\r\n\r\n    function deliveryService(calendar, initialRows,barrier){\r\n      const params ={ \"month\" : calendar.currentDate.format(\"MMM-YYYY\"), type: \"income\"};\r\n      DeliveryService.getAll(params).then((response) => {\r\n        var deliverys = response.data;\r\n        deliverys && deliverys.map((delivery) => {\r\n          for(var initialRow of initialRows){\r\n            if(initialRow.id == delivery.partyId){\r\n              initialRow[delivery.date] = delivery.quantity;\r\n              initialRow[\"id\"+delivery.date]=delivery.id;\r\n              break;\r\n            }\r\n          };\r\n        });\r\n        barrier.countDown();\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n    }\r\n\r\n    function billService(calendar, initialRows,barrier){\r\n      const paramsBill ={ month : calendar.currentDate.format(\"MMM-YYYY\"), active: true, type: \"income\"};\r\n      BillService.getAll(paramsBill).then((response) => {\r\n        var deliverys = response.data;\r\n        deliverys && deliverys.map((delivery) => {\r\n          for(var initialRow of initialRows){\r\n            if(initialRow.id == delivery.partyId){\r\n              if(delivery.rate){\r\n                initialRow[\"qty\"] = delivery.quantity;\r\n                initialRow[\"rate\"]=delivery.rate;\r\n                initialRow[\"bill\"]=delivery.bill;\r\n                initialRow[\"dues\"]=delivery.dues;\r\n                initialRow[\"totalBill\"]=initialRow[\"bill\"]+(initialRow[\"dues\"]? initialRow[\"dues\"] : 0);\r\n                initialRow[\"prevBill\"]=delivery.lastBillTotal;\r\n                initialRow[\"currentDue\"]=initialRow[\"prevBill\"]-(initialRow[\"paid\"]? initialRow[\"paid\"] : 0);\r\n              }\r\n              break;\r\n            }\r\n          };\r\n        });\r\n        barrier.countDown();   \r\n        //previous month bill and due amount\r\n\t  const paramsBillPrev ={ month :  calendar.currentDate.clone().subtract(1, 'months').format('MMM-YYYY'), active: true, type: \"income\"};\r\n\t  BillService.getAll(paramsBillPrev).then((response) => {\r\n        var deliverys = response.data;\r\n        deliverys && deliverys.map((delivery) => {\r\n          for(var initialRow of initialRows){\r\n            if(initialRow.id == delivery.partyId){\r\n              if(delivery.rate){\r\n                initialRow[\"prevBill\"]=delivery.bill+delivery.dues;\r\n                initialRow[\"prevDues\"]=delivery.dues;\r\n                initialRow[\"currentDue\"]=initialRow[\"prevBill\"]-(initialRow[\"paid\"]? initialRow[\"paid\"] : 0);\r\n              }\r\n              break;\r\n            }\r\n          };\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n    }\r\n   \r\n    function rowChange(row, col) {\r\n      constructDeliveryUpdateData(row,col);\r\n    }\r\n\r\n\tfunction handleClickOpen () {\r\n      setOpen(true);\r\n    };\r\n  \r\n    function handleClose () {\r\n\t\tsetConfirm(false);\r\n\t\tsetOpen(false);\r\n    };\r\n\t\r\n\tfunction handleConfirm () {\r\n\t\tsetConfirm(false);\r\n\t\tgenerateBillAfterCheck(calendar.currentDate.format(\"MMM-YYYY\"));\r\n\t\tsetOpen(false);\r\n\t}\r\n\r\n    function constructDeliveryUpdateData(row, col){\r\n      var columnVal = row[col.indexes][col.column.key]; \r\n      var columnId = row[col.indexes][\"id\"+col.column.key];\r\n      /* for (const [key, value] of Object.entries(row[col.indexes])) {\r\n        if(key == col.column.key){\r\n          columnVal = value;\r\n        }else if(key == (\"id\"+col.column.key)){\r\n          columnId = value;\r\n        }\r\n      } */\r\n      console.log(row[col.indexes].id+ \" - \"+columnVal + \" - \" +columnId);\r\n      saveDelivery(row[col.indexes].id, col.column.key, calendar.currentDate , columnVal, columnId, row[col.indexes]);\r\n      rows[col.indexes] = row[col.indexes];\r\n      //row gives filtered rows, so putting updated data into rows\r\n      setRows (rows.slice());\r\n    }\r\n    \r\n    function saveDelivery (cutomerId, date, month, columnVal, id, rowData) {\r\n      var data = {\r\n        id: id,\r\n        partyId: cutomerId,\r\n        date: date,\r\n        month: month.format(\"MMM-YYYY\"),\r\n        quantity: columnVal,\r\n        type: \"income\",\r\n        category:null,\r\n        active: true,\r\n        payment: null\r\n      };\r\n      if(date != \"discount\" && date != \"pay\"){\r\n          if(id){\r\n              DeliveryService.update(id, data)\r\n                .then(response => {\r\n                  console.log(response.data);\r\n                })\r\n                .catch(e => {\r\n                  console.log(e);\r\n                });\r\n          } else {\r\n            DeliveryService.create(data)\r\n                .then(response => {\r\n                  var idName = \"id\"+date;\r\n                  rowData[idName]=response.data.id;\r\n                  console.log(rowData);\r\n                })\r\n                .catch(e => {\r\n                  console.log(e);\r\n                });\r\n            }\r\n      }else{\r\n        if(date == \"discount\"){\r\n          data.category=\"discount\";\r\n        }\r\n        data.payment=columnVal;\r\n        data.date=moment().format(\"DD\");\r\n        if(id){\r\n          PaymentService.update(id, data)\r\n            .then(response => {\r\n              console.log(response.data);\r\n            })\r\n            .catch(e => {\r\n              console.log(e);\r\n            });\r\n        } else {\r\n          PaymentService.create(data)\r\n            .then(response => {\r\n              var idName = \"id\"+date;\r\n              rowData[idName]=response.data.id;\r\n              console.log(rowData);\r\n            })\r\n            .catch(e => {\r\n              console.log(e);\r\n            });\r\n        }\r\n      }\r\n    }\r\n\r\n    function generateBill(month){\r\n\t\tBillService.validateBillGeneration(month,\"income\").then((response) => {\r\n\t\t\tvar bill = response.data;\r\n\t\t\t//bill object has bill, means the bill was generated\r\n\t\t\tif(bill.rate){\r\n\t\t\t\tsetConfirm(true);\r\n\t\t\t\tsetMessage(\"Bill already generated for the month \"+month+\". Do you want to continue? Please confirm to proceed.\");\r\n\t\t\t\thandleClickOpen();\r\n\t\t\t}else{\r\n\t\t\t\tgenerateBillAfterCheck(month);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\tconsole.log(e);\r\n\t\t\t//no bill exist for the month, so generate bill without prompting user\r\n\t\t\tif(e.response.status == 404){\r\n\t\t\t\tgenerateBillAfterCheck(month);\r\n\t\t\t}\r\n\t\t});\r\n    }\r\n\t\r\n\tfunction generateBillAfterCheck(month){\r\n\t\tconst paramsBill ={ \"month\" : month, \"type\": \"income\"};\r\n\t\tBillService.generateBills(paramsBill).then((response) => {\r\n        var deliverys = response.data;\r\n        deliverys && deliverys.map((delivery) => {\r\n          for(var initialRow of rows){\r\n            if(initialRow.id == delivery.partyId){\r\n              initialRow[\"qty\"] = delivery.quantity;\r\n              initialRow[\"rate\"]=delivery.rate;\r\n              initialRow[\"bill\"]=delivery.bill;\r\n              initialRow[\"dues\"]=delivery.dues;\r\n              initialRow[\"totalBill\"]=initialRow[\"bill\"]+(initialRow[\"dues\"]? initialRow[\"dues\"] : 0);\r\n              break;\r\n            }\r\n          };\r\n        });\r\n\t\tsetMessage(\"Bill generated for the month \"+month+\".\");\r\n\t\thandleClickOpen();\r\n\t\tsetRows(rows);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\t}\r\n\t\r\n\tfunction onChangeRate(e){\r\n\t\trate.rate = e.target.value;\r\n\t\tsetRate(rate);\r\n\t}\r\n  function sendMail(){\r\n    \r\n  }\r\n\tfunction saveRate(){\r\n      var data = {\r\n        id: rate.id,\r\n        rate: rate.rate,\r\n\t\t    active: false,\r\n\t    \tstartDate: rate.startDate,\r\n\t    \tendDate: calendar.currentDate.format(\"DD-MMM-YYYY\")\r\n      };\r\n      if(rate.id){\r\n          RateService.update(data.id, data)\r\n            .then(response => {\r\n              console.log(response.data);\r\n            })\r\n            .catch(e => {\r\n              console.log(e);\r\n            });\r\n      }\r\n\t  var newRate = {\r\n        rate: rate.rate,\r\n\t\t    active: true,\r\n\t\t    startDate: calendar.currentDate.format(\"DD-MMM-YYYY\")\r\n      };\r\n\t  RateService.create(newRate)\r\n\t\t.then(response => {\r\n\t\t   setRate(response.data);\r\n        setMessage(\"New rate saved.\");\r\n        handleClickOpen();\r\n\t\t})\r\n\t\t.catch(e => {\r\n\t\t  console.log(e);\r\n\t\t});\r\n\t}\r\n\r\n  const filteredRows = useMemo( () => {\r\n    function filter(){\r\n      var filteredRows = null;\r\n       filteredRows = rows.filter((r) => {\r\n        return (\r\n          (filters.name ? r.name.includes(filters.name) : true)\r\n          && (filters.route ? r.route.includes(filters.route) : true)\r\n        );\r\n      })\r\n      if (sortColumns.length === 0) return filteredRows;\r\n      filteredRows = [...filteredRows].sort((a, b) => {\r\n        for (const sort of sortColumns) {\r\n          const comparator = getComparator(sort.columnKey);\r\n          const compResult = comparator(a, b);\r\n          if (compResult !== 0) {\r\n            return sort.direction === 'ASC' ? compResult : -compResult;\r\n          }\r\n        }\r\n        return 0;\r\n      })\r\n      return filteredRows;\r\n    }\r\n    return filter();\r\n  }, [rows, filters, sortColumns]);\r\n\r\n    return (\r\n      <div >\r\n        {calendar ? (\r\n        <div >\r\n          <Grid container spacing={{ xs: 1}} >\r\n          <Grid item xs={6} sm={3}> \r\n              <Link\r\n                to={\"/gui/customerCalendar/\"+calendar.currentDate.clone().subtract(1, 'months').format('MMM-YYYY')}\r\n                className=\"badge badge-warning\">\r\n                Prev\r\n              </Link>\r\n              {calendar.currentDate.format(\"DD-MMM-YYYY\")}\r\n              <Link\r\n                to={\"/gui/customerCalendar/\"+calendar.currentDate.clone().add(1, 'months').format('MMM-YYYY')}\r\n                className=\"badge badge-warning\">\r\n                Next\r\n              </Link>\r\n          </Grid>\r\n          <Grid item xs={6} sm={3}> \r\n              <Link to=\"#\"\r\n                onClick={ () => generateBill(calendar.currentDate.format(\"MMM-YYYY\"))}\r\n                className=\"badge\">\r\n                 Generate Bill Month - {calendar.currentDate.format(\"MMM-YYYY\")}\r\n              </Link>\r\n               \r\n          </Grid> \r\n\t\t  <Grid item xs={6} sm={3}> \r\n\t\t\t<input\r\n                type=\"number\"\r\n                id=\"rate\"\r\n                required\r\n                defaultValue={rate.rate}\r\n                onChange={onChangeRate}\r\n                name=\"rate\"\r\n\t\t\t\tstyle={{ width:60, height:20 }}\r\n              />\r\n              <Link to=\"#\"\r\n                onClick={saveRate}\r\n                className=\"badge\">\r\n                 Set Rate\r\n              </Link>\r\n\t\t\t  \r\n          </Grid> \r\n          <Grid item xs={3} sm={2}> \r\n              <Link\r\n                to={\"/gui/bills/\"+calendar.currentDate.format('MMM-YYYY')}\r\n                className=\"badge\">\r\n                 Print - {calendar.currentDate.format(\"MMM-YYYY\")}\r\n              </Link>\r\n          </Grid> \r\n\t\t  <Grid item xs={3} sm={1}>\r\n\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t<Button variant=\"warning\" className=\"badge\">\r\n\t\t\t\t\t\t\t\t<CSVLink data={filteredRows} filename={'income.txt'}>Export</CSVLink>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Grid> \r\n        </Grid>\r\n        </div>     \r\n         ) : (\r\n          <div>\r\n            <br />\r\n            <p>Please click on a Customer...</p>\r\n          </div>\r\n        )}\r\n        <div className=\"rootClassname\">\r\n          <FilterContext.Provider value={filters}>\r\n            <DataGrid columns={columns} onRowsChange={rowChange} \r\n             defaultColumnOptions={{\r\n              sortable: true,\r\n              resizable: true\r\n            }}\r\n              className={filters.enabled ? filterContainerClassname : undefined}\r\n              rows={filteredRows}\r\n              sortColumns={sortColumns}\r\n              onSortColumnsChange={setSortColumns}\r\n              headerRowHeight={filters.enabled ? 50 : undefined}\r\n              />\r\n            </FilterContext.Provider>\r\n          </div>\r\n\t\t\r\n\t\t\r\n\t\t<Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\">\r\n          <DialogTitle id=\"alert-dialog-title\">\r\n            {\"Bills\"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n\t\t\t{message}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n\t\t  {confirm ? (\r\n\t\t\t<Button onClick={handleConfirm}>Confirm</Button>\r\n\t\t  ) : \"\"}\r\n            <Button onClick={handleClose}>Close</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default CustomerCalendar;\r\n\r\n\r\n  function FilterRenderer({isCellSelected,column,children}) {\r\n    const filters = useContext(FilterContext);\r\n    const { ref, tabIndex } = useFocusRef(isCellSelected);\r\n  \r\n    return (\r\n      <>\r\n        <div>{column.name}</div>\r\n        {filters.enabled && <div>{children({ ref, tabIndex, filters })}</div>}\r\n      </>\r\n    );\r\n  }\r\n  \r\n  export function useFocusRef(isSelected) {\r\n    const ref = useRef(null);\r\n  \r\n    useLayoutEffect(() => {\r\n      if (!isSelected) return;\r\n      ref.current && ref.current.focus({ preventScroll: true });\r\n    }, [isSelected]);\r\n  \r\n  \r\n    return {\r\n      ref,\r\n      tabIndex: isSelected ? 0 : -1\r\n    };\r\n  }","import React, { useState , useEffect, useMemo, useContext, createContext, useRef , useLayoutEffect } from \"react\";\r\nimport DataGrid,  {HeaderRendererProps} from 'react-data-grid';\r\n\r\nimport NumericEditor from \"../components/editor/numericeditor.component\";\r\nimport DeliveryService from \"../services/delivery.service\";\r\nimport CustomerService from \"../services/customer.service\";\r\nimport BillService from \"../services/bill.service\";\r\nimport PaymentService from \"../services/payment.service\";\r\nimport moment from 'moment';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nimport { CSVLink } from 'react-csv';\r\nimport Button from '@mui/material/Button';\r\n\r\nconst rootClassname = 'rootClassname';\r\nconst filterColumnClassName = 'filter-cell';\r\nconst filterContainerClassname = 'filterContainerClassname';\r\nconst filterClassname = 'filterClassname';\r\n\r\nconst FilterContext = createContext(undefined);\r\n\r\nfunction inputStopPropagation(event) {\r\n  if (['ArrowLeft', 'ArrowRight'].includes(event.key)) {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n\r\nfunction getComparator(sortColumn) {\r\n  switch (sortColumn) {\r\n    case 'name':\r\n      return (a, b) => {\r\n        return a[sortColumn].localeCompare(b[sortColumn]);\r\n      };\r\n    default:\r\n      return (a, b) => {\r\n        return a[sortColumn] - b[sortColumn];\r\n      };\r\n  }\r\n}\r\n\r\nconst CustomerDaily = props => {\r\n\r\n  const [filters, setFilters] = useState({\r\n    name: '',\r\n    route: '',\r\n    enabled: true\r\n  });\r\n\r\n  const initialCalendar = {\r\n    currentDate: moment()\r\n  };\r\n  \r\n    const [rows, setRows] = useState([]);  \r\n    const [calendar, setCalendar] = useState(initialCalendar);\r\n    const [sortColumns, setSortColumns] = useState([]);  \r\n\r\n\r\n    const columns = [\r\n      { key: 'id', name: 'ID' , minWidth: 40 , resizable: true ,\r\n      headerCellClass: filterColumnClassName,\r\n      headerRenderer: (p) => (\r\n        <FilterRenderer {...p}>\r\n          {({ filters, ...rest }) => (\r\n            <input\r\n              {...rest}\r\n              className={filterClassname}\r\n              value={filters.name}\r\n              onChange={(e) =>\r\n                setFilters({\r\n                  ...filters,\r\n                  name: e.target.value\r\n                })\r\n              }\r\n              onKeyDown={inputStopPropagation}\r\n            />\r\n          )}\r\n        </FilterRenderer>\r\n      )\r\n      },\r\n      { key: 'name', name: 'Name' , width: 200, resizable: true},\r\n      { key: 'today', name: 'Today Quantity' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:80, resizable: true },\r\n      { key: 'dailyQuantity', name: 'Daily Quantity' , minWidth:80 , resizable: true },\r\n      { key: 'route', name: 'Route' , minWidth:100 , resizable: true ,\r\n          headerCellClass: filterColumnClassName,\r\n          headerRenderer: (p) => (\r\n            <FilterRenderer {...p}>\r\n              {({ filters, ...rest }) => (\r\n                <input\r\n                  {...rest}\r\n                  className={filterClassname}\r\n                  value={filters.route}\r\n                  onChange={(e) =>\r\n                    setFilters({\r\n                      ...filters,\r\n                      route: e.target.value\r\n                    })\r\n                  }\r\n                  onKeyDown={inputStopPropagation}\r\n                />\r\n              )}\r\n            </FilterRenderer>\r\n          )\r\n      },\r\n      { key: 'qty', name: 'Qty' , minWidth:40 , resizable: true },\r\n      { key: 'rate', name: 'Rate' , minWidth:40 , resizable: true },\r\n      { key: 'bill', name: 'Bill' , minWidth:40 , resizable: true },\r\n      { key: 'dues', name: 'Dues' , minWidth:40 , resizable: true },\r\n      { key: 'totalBill', name: 'Total' , minWidth:60 , resizable: true },\r\n      { key: 'prevBill', name: 'P-Bill' , minWidth:75 , resizable: true },\r\n      { key: 'prevDues', name: 'P-Dues' , minWidth:70 , resizable: true },\r\n      { key: 'paid', name: 'Paid' , minWidth:60 , resizable: true }\r\n    ];\r\n    \r\n    \r\n    useEffect(() => {\r\n      var calendar={currentDate: moment(props.match.params.date,'DD-MMM-YYYY')};\r\n      setCalendar(calendar);\r\n      var initialRows = null;\r\n      const paramCustomer = { active: true, type: \"customer\"};\r\n\r\n      CustomerService.getAll(paramCustomer).then((response) => {\r\n        var customers = response.data;\r\n        initialRows = new Array(customers.length);\r\n        customers.map((customer, index) => {\r\n          initialRows[index]={};\r\n          initialRows[index][\"id\"]=customer.id;\r\n          initialRows[index][\"name\"]=customer.name;\r\n          initialRows[index][\"dailyQuantity\"]=customer.defaultQuantity;\r\n          initialRows[index][\"route\"]=customer.route.name;\r\n        });\r\n        getPayment(calendar, initialRows);\r\n        deliveryService(calendar, initialRows);\r\n        billService(calendar, initialRows);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\t  \r\n    }, [props.match.params.date]);\r\n\r\n    function deliveryService(calendar, initialRows){\r\n      const params ={ \"date\": calendar.currentDate.format(\"DD\"), \r\n                      \"month\" : calendar.currentDate.format(\"MMM-YYYY\"), type: \"income\"};\r\n      DeliveryService.getAll(params).then((response) => {\r\n        var deliverys = response.data;\r\n        deliverys && deliverys.map((delivery) => {\r\n          for(var initialRow of initialRows){\r\n            if(initialRow.id == delivery.partyId){\r\n              initialRow[\"today\"] = delivery.quantity;\r\n              initialRow[\"idtoday\"]=delivery.id;\r\n              break;\r\n            }\r\n          };\r\n        });\r\n        console.log(initialRows);\r\n        setRows(initialRows);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n    }\r\n\r\n    function billService(calendar, initialRows){\r\n      const paramsBill ={ month : calendar.currentDate.format(\"MMM-YYYY\"), active: true, type: \"income\"};\r\n      BillService.getAll(paramsBill).then((response) => {\r\n        var deliverys = response.data;\r\n        deliverys && deliverys.map((delivery) => {\r\n          for(var initialRow of initialRows){\r\n            if(initialRow.id == delivery.partyId){\r\n              if(delivery.rate){\r\n                initialRow[\"qty\"] = delivery.quantity;\r\n                initialRow[\"rate\"]=delivery.rate;\r\n                initialRow[\"bill\"]=delivery.bill;\r\n                initialRow[\"dues\"]=delivery.dues;\r\n                initialRow[\"totalBill\"]=initialRow[\"bill\"]+(initialRow[\"dues\"]? initialRow[\"dues\"] : 0);\r\n              }\r\n              break;\r\n            }\r\n          };\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\t  \r\n      //previous month bill and due amount\r\n\t  const paramsBillPrev ={ month :  calendar.currentDate.clone().subtract(1, 'months').format('MMM-YYYY'), active: true, type: \"income\"};\r\n\t  BillService.getAll(paramsBillPrev).then((response) => {\r\n        var deliverys = response.data;\r\n        deliverys && deliverys.map((delivery) => {\r\n          for(var initialRow of initialRows){\r\n            if(initialRow.id == delivery.partyId){\r\n              if(delivery.rate){\r\n                initialRow[\"prevBill\"]=delivery.bill;\r\n                initialRow[\"prevDues\"]=delivery.dues;\r\n              }\r\n              break;\r\n            }\r\n          };\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n    }\r\n\r\n    function getPayment(calendar, initialRows){\r\n      var params ={ \"month\": calendar.currentDate.format(\"MMM-YYYY\"), \"active\": true, type: \"income\"};\r\n      PaymentService.getAll(params).then(response => {\r\n        var bills = response.data;\r\n        initialRows && initialRows.map((initialRow) => {\r\n          bills && bills.map((bill) => {\r\n              if(bill.partyId == initialRow.id){\r\n                if(bill.category == 'discount'){\r\n                  initialRow[\"discount\"]=bill.payment;\r\n                  initialRow[\"iddiscount\"]=bill.id;\r\n                } else{\r\n                  if(initialRow[\"paid\"]){\r\n                    initialRow[\"paid\"]=initialRow[\"paid\"]+bill.payment;\r\n                  }else{\r\n                    initialRow[\"paid\"]=+bill.payment;\r\n                  }\r\n                }\r\n              }\r\n            });\r\n        });\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n    }\r\n\r\n    function rowChange(row, col) {\r\n      constructDeliveryUpdateData(row,col);\r\n    }\r\n\r\n    function constructDeliveryUpdateData(row, col){\r\n      var columnVal = row[col.indexes][col.column.key]; \r\n      var columnId = row[col.indexes][\"idtoday\"];\r\n      console.log(row[col.indexes].id+ \" - \"+columnVal + \" - \" +columnId+\" - \" + col.column.key);\r\n      saveDelivery(row[col.indexes].id, calendar.currentDate, calendar.currentDate , columnVal, columnId, row[col.indexes]);\r\n      rows[col.indexes] = row[col.indexes];\r\n      //row gives filtered rows, so putting updated data into rows\r\n      setRows (rows.slice());\r\n    }\r\n\r\n    function saveDelivery (cutomerId, date, month, quantity, id, rowData) {\r\n      var data = {\r\n        id: id,\r\n        partyId: cutomerId,\r\n        date: date.format(\"DD\"),\r\n        month: month.format(\"MMM-YYYY\"),\r\n        quantity: quantity,\r\n\t\t    type: \"income\"\r\n      };\r\n      if(id){\r\n          DeliveryService.update(id, data)\r\n            .then(response => {\r\n              console.log(response.data);\r\n            })\r\n            .catch(e => {\r\n              console.log(e);\r\n            });\r\n      } else {\r\n        DeliveryService.create(data)\r\n            .then(response => {\r\n              rowData[\"idtoday\"]=response.data.id;\r\n              console.log(rowData);\r\n            })\r\n            .catch(e => {\r\n              console.log(e);\r\n            });\r\n        }\r\n      }\r\n\r\n  const filteredRows = useMemo( () => {\r\n    function filter(){\r\n      var filteredRows = null;\r\n       filteredRows = rows.filter((r) => {\r\n        return (\r\n          (filters.name ? r.name.includes(filters.name) : true)\r\n          && (filters.route ? r.route.includes(filters.route) : true)\r\n        );\r\n      })\r\n      if (sortColumns.length === 0) return filteredRows;\r\n      filteredRows = [...filteredRows].sort((a, b) => {\r\n        for (const sort of sortColumns) {\r\n          const comparator = getComparator(sort.columnKey);\r\n          const compResult = comparator(a, b);\r\n          if (compResult !== 0) {\r\n            return sort.direction === 'ASC' ? compResult : -compResult;\r\n          }\r\n        }\r\n        return 0;\r\n      })\r\n      return filteredRows;\r\n    }\r\n    return filter();\r\n  }, [rows, filters, sortColumns]);\r\n\r\n    return (\r\n      <div >\r\n        {calendar ? (\r\n        <div >\r\n          <Grid container spacing={{ xs: 1}} >\r\n            <Grid item xs={3} sm={1}>\r\n                &nbsp;\r\n                <Button variant=\"warning\" className=\"badge\">\r\n                      <CSVLink data={filteredRows} filename={'dailyIncome.txt'}>Export</CSVLink>\r\n                </Button>\r\n              </Grid> \r\n          </Grid>\r\n        </div>     \r\n         ) : (\r\n          <div>\r\n            <br />\r\n            <p>Please click on a Customer...</p>\r\n          </div>\r\n        )}\r\n        <div className=\"rootClassname\">\r\n          <FilterContext.Provider value={filters}>\r\n            <DataGrid columns={columns} onRowsChange={rowChange} \r\n             defaultColumnOptions={{\r\n              sortable: true,\r\n              resizable: true\r\n            }}\r\n              className={filters.enabled ? filterContainerClassname : undefined}\r\n              rows={filteredRows}\r\n              sortColumns={sortColumns}\r\n              onSortColumnsChange={setSortColumns}\r\n              headerRowHeight={filters.enabled ? 50 : undefined}\r\n              />\r\n            </FilterContext.Provider>\r\n          </div>\r\n      </div>\r\n    );\r\n  };\r\nexport default CustomerDaily;\r\n\r\n\r\nfunction FilterRenderer({isCellSelected,column,children}) {\r\n  const filters = useContext(FilterContext);\r\n  const { ref, tabIndex } = useFocusRef(isCellSelected);\r\n\r\n  return (\r\n    <>\r\n      <div>{column.name}</div>\r\n      {filters.enabled && <div>{children({ ref, tabIndex, filters })}</div>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport function useFocusRef(isSelected) {\r\n  const ref = useRef(null);\r\n\r\n  useLayoutEffect(() => {\r\n    if (!isSelected) return;\r\n    ref.current && ref.current.focus({ preventScroll: true });\r\n  }, [isSelected]);\r\n\r\n\r\n  return {\r\n    ref,\r\n    tabIndex: isSelected ? 0 : -1\r\n  };\r\n}","import React, { useState , useEffect, useMemo, useContext, createContext, useRef , useLayoutEffect } from \"react\";\r\nimport DataGrid,  {HeaderRendererProps} from 'react-data-grid';\r\n\r\nimport NumericEditor from \"./editor/numericeditor.component\";\r\nimport DeliveryService from \"../services/delivery.service\";\r\nimport CustomerService from \"../services/customer.service\";\r\nimport BillService from \"../services/bill.service\";\r\nimport PaymentService from \"../services/payment.service\";\r\nimport moment from 'moment';\r\nimport Grid from '@mui/material/Grid';\r\nimport { Link } from \"react-router-dom\";\r\nimport { CSVLink } from 'react-csv';\r\n\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nconst rootClassname = 'rootClassname';\r\nconst filterColumnClassName = 'filter-cell';\r\nconst filterContainerClassname = 'filterContainerClassname';\r\nconst filterClassname = 'filterClassname';\r\n\r\nconst FilterContext = createContext(undefined);\r\n\r\nfunction inputStopPropagation(event) {\r\n  if (['ArrowLeft', 'ArrowRight'].includes(event.key)) {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n\r\nfunction getComparator(sortColumn) {\r\n  switch (sortColumn) {\r\n    case 'name':\r\n      return (a, b) => {\r\n        return a[sortColumn].localeCompare(b[sortColumn]);\r\n      };\r\n    default:\r\n      return (a, b) => {\r\n        return a[sortColumn] - b[sortColumn];\r\n      };\r\n  }\r\n}\r\n\r\nconst CollectionBillsList = props => {\r\n\r\n  const [filters, setFilters] = useState({\r\n    enabled: true\r\n  });\r\n\r\n  const initialCalendar = {\r\n    currentDate: moment()\r\n  };\r\n  \r\n    const [rows, setRows] = useState([]);  \r\n    const [calendar, setCalendar] = useState(initialCalendar);\r\n    const [sortColumns, setSortColumns] = useState([]);  \r\n    const [from, setFrom] = useState(); \r\n    const [to, setTo] = useState();   \r\n    const [confirm, setConfirm] = useState(false);\r\n    const [open, setOpen] = useState(false); \r\n    const [message, setMessage] = useState();\r\n\r\n    const columns = [\r\n\r\n      { key: 'print', name: 'PRINT' , width: 70, resizable: true,\r\n      formatter(props) {\r\n        return <>\r\n          <Link disable=\"true\"\r\n          to={ (\"/gui/collectionBills/\"+moment(props.row.from,'YYYY-MMM-DD').format(\"YYYY-MM-DD\")+\"/\"+moment(props.row.to,'YYYY-MMM-DD').format(\"YYYY-MM-DD\")+\"/\"+(props.row.partyId)) }\r\n          className=\"badge badge-warning\">\r\n          Print\r\n          </Link>\r\n        </>;\r\n      }\r\n    },\r\n\r\n      { key: 'id', name: 'ID' ,width:50, resizable: true ,\r\n      headerCellClass: filterColumnClassName,\r\n      headerRenderer: (p) => (\r\n        <FilterRenderer {...p}>\r\n          {({ filters, ...rest }) => (\r\n            <input\r\n              {...rest}\r\n              className={filterClassname}\r\n              value={filters.name}\r\n              onChange={(e) =>\r\n                setFilters({\r\n                  ...filters,\r\n                  name: e.target.value\r\n                })\r\n              }\r\n              onKeyDown={inputStopPropagation}\r\n            />\r\n          )}\r\n        </FilterRenderer>\r\n      )\r\n      },\r\n      { key: 'name', name: 'Name' ,  resizable: true},\r\n      { key: 'from', name: 'FROM' ,  resizable: true},\r\n      { key: 'to', name: 'TO' ,  resizable: true},\r\n      { key: 'qty', name: 'Quantity' , resizable: true},\r\n      { key: 'bill', name: 'Total' ,   resizable: true }\r\n    ];\r\n    \r\n    \r\n    useEffect(() => {\r\n      getBills();\r\n    }, [props.match.params.date]);\r\n\r\n\r\n\r\n    function getBills(){\r\n      var calendar={currentDate: moment(props.match.params.date,'DD-MMM-YYYY')};\r\n      setCalendar(calendar);\r\n      var initialRows = null;\r\n     const paramsBill={active:true, type:\"expense\", category: \"collection\"};\r\n     BillService.getAll(paramsBill).then((response) => {\r\n       var deliverys = response.data;\r\n       console.log(deliverys);\r\n       initialRows=new Array (deliverys.length);\r\n        deliverys && deliverys.map((bill, index)=>{\r\n          initialRows[index]={};\r\n          initialRows[index][\"id\"]=bill.id;\r\n          initialRows[index][\"name\"]=bill.party;\r\n            initialRows[index][\"qty\"]=bill.quantity;\r\n          initialRows[index][\"rate\"]=bill.rate;\r\n          initialRows[index][\"from\"]=bill.from;\r\n          initialRows[index][\"to\"]=bill.to;\r\n          initialRows[index][\"bill\"]=bill.bill;\r\n          initialRows[index][\"partyId\"]=bill.partyId;\r\n        });\r\n        billService(calendar, initialRows);\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });    \r\n      \r\n    }\r\n\r\n    function onChangeFrom(e){\r\n      setFrom(e.target.value);\r\n    }\r\n\r\n    function onChangeTo(e){\r\n      setTo(e.target.value);\r\n    }\r\n\r\n    function handleClickOpen () {\r\n      setOpen(true);\r\n    }\r\n  \r\n    function handleClose () {\r\n      setConfirm(false);\r\n      setOpen(false);\r\n    };\r\n\t\r\n      function handleConfirm () {\r\n        setConfirm(false);\r\n        generateBillsCollectionAfterCheck(calendar.currentDate.format(\"MMM-YYYY\"));\r\n        setOpen(false);\r\n      }\r\n\r\n\r\n\r\n    function deliveryService(calendar, initialRows){\r\n      const params ={ \"date\": calendar.currentDate.format(\"DD\"),  type: \"expence\"};\r\n      DeliveryService.getAll(params).then((response) => {\r\n        var deliverys = response.data;\r\n        deliverys && deliverys.map((delivery) => {\r\n          for(var initialRow of initialRows){\r\n            if(initialRow.id == delivery.partyId){\r\n              initialRow[\"today\"] = delivery.quantity;\r\n              initialRow[\"idtoday\"]=delivery.id;\r\n              break;\r\n            }\r\n          };\r\n        });\r\n        console.log(initialRows);\r\n        setRows(initialRows);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n    }\r\n\r\n    function billService(calendar, initialRows){\r\n      const paramsBill ={ active: true, type: \"expense\", category: \"collection\"};\r\n      BillService.getAll(paramsBill).then((response) => {\r\n        var deliverys = response.data;\r\n        console.log(deliverys);\r\n        deliverys && deliverys.map((delivery) => {\r\n          for(var initialRow of initialRows){\r\n            if(initialRow.id == delivery.partyId){\r\n              if(delivery.from){\r\n                initialRow[\"qty\"] = delivery.quantity;\r\n                initialRow[\"rate\"]=delivery.rate;\r\n                initialRow[\"bill\"]=delivery.bill;\r\n                initialRow[\"from\"]=delivery.from;\r\n                initialRow[\"to\"]=delivery.to;\r\n              }\r\n              break;\r\n            }\r\n          };\r\n        });\r\n        deliveryService(calendar, initialRows);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });    \r\n    }\r\n\r\n    function rowChange(row, col) {\r\n      constructDeliveryUpdateData(row,col);\r\n    }\r\n\r\n     function generateBillCollection(){\r\n        const paramsFrom ={ \"type\": \"expense\",\"from\":from, \"to\":to };\r\n        BillService.validateCollectionBillsGeneration(\"expense\",paramsFrom).then((response) => {\r\n          console.log(response.data);\r\n          var bill = response.data;\r\n          //bill object has bill, means the bill was generated\r\n          if(bill.from){\r\n            setConfirm(true);\r\n            setMessage(\"Bill already generated for the period. Do you want to continue? Please confirm to proceed.\");\r\n            handleClickOpen();\r\n          }else{\r\n            generateBillsCollectionAfterCheck();\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n          //no bill exist for the month, so generate bill without prompting user\r\n          if(e.response.status == 404){\r\n            generateBillsCollectionAfterCheck();\r\n          }\r\n        });\r\n        }\r\n      \r\n      function generateBillsCollectionAfterCheck(){\r\n        const paramsBill ={  \"type\": \"expense\",\"from\":from, \"to\":to , \"category\":\"collection\"};\r\n        BillService.generateBillsCollection(paramsBill).then((response) => {\r\n            var deliverys = response.data;\r\n            deliverys && deliverys.map((delivery) => {\r\n              for(var initialRow of rows){\r\n                if(initialRow.id == delivery.partyId){\r\n                  initialRow[\"qty\"] = delivery.quantity;\r\n                  initialRow[\"rate\"]=delivery.rate;\r\n                  initialRow[\"bill\"]=delivery.bill;\r\n                  break;\r\n                }\r\n              };\r\n            });\r\n            //call getBills\r\n             getBills();\r\n            setMessage(\"Bill generated for the period .\");\r\n            handleClickOpen();\r\n            console.log(rows);\r\n            setRows(rows);\r\n          })\r\n          .catch((e) => {\r\n            if(e.response.status == 404){\r\n              setMessage(\"Bill could not be generated for the period as there are overlapping bills.\");\r\n              setConfirm(false);\r\n              handleClickOpen();\r\n            }\r\n          });\r\n      }\r\n      \r\n    function constructDeliveryUpdateData(row, col){\r\n      var columnVal = row[col.indexes][col.column.key]; \r\n      var columnId = row[col.indexes][\"idtoday\"];\r\n      console.log(row[col.indexes].id+ \" - \"+columnVal + \" - \" +columnId+\" - \" + col.column.key);\r\n      saveDelivery(row[col.indexes].id, calendar.currentDate, calendar.currentDate , columnVal, columnId, row[col.indexes]);\r\n      rows[col.indexes] = row[col.indexes];\r\n      //row gives filtered rows, so putting updated data into rows\r\n      setRows (rows.slice());\r\n    }\r\n\r\n    function saveDelivery (cutomerId, date, month, quantity, id, rowData) {\r\n      var data = {\r\n        id: id,\r\n        partyId: cutomerId,\r\n        date: date.format(\"DD\"),\r\n        month: month.format(\"MMM-YYYY\"),\r\n        quantity: quantity,\r\n\t\t    type: \"expence\"\r\n      };\r\n      if(id){\r\n          DeliveryService.update(id, data)\r\n            .then(response => {\r\n              console.log(response.data);\r\n            })\r\n            .catch(e => {\r\n              console.log(e);\r\n            });\r\n      } else {\r\n        DeliveryService.create(data)\r\n            .then(response => {\r\n              rowData[\"idtoday\"]=response.data.id;\r\n              console.log(rowData);\r\n            })\r\n            .catch(e => {\r\n              console.log(e);\r\n            });\r\n        }\r\n      }\r\n\r\n  const filteredRows = useMemo( () => {\r\n    function filter(){\r\n      var filteredRows = null;\r\n       filteredRows = rows.filter((r) => {\r\n        return (\r\n          (filters.name ? r.name.includes(filters.name) : true)\r\n        );\r\n      })\r\n      if (sortColumns.length === 0) return filteredRows;\r\n      filteredRows = [...filteredRows].sort((a, b) => {\r\n        for (const sort of sortColumns) {\r\n          const comparator = getComparator(sort.columnKey);\r\n          const compResult = comparator(a, b);\r\n          if (compResult !== 0) {\r\n            return sort.direction === 'ASC' ? compResult : -compResult;\r\n          }\r\n        }\r\n        return 0;\r\n      })\r\n      return filteredRows;\r\n    }\r\n    return filter();\r\n  }, [rows, filters, sortColumns]);\r\n\r\n    return (\r\n      <div >\r\n        {calendar ? (\r\n        <div >\r\n          <Grid container spacing={{ xs: 1}} >\r\n            <Grid item xs={3} sm={1}>\r\n                &nbsp;\r\n                <Button variant=\"warning\" className=\"badge\">\r\n                      <CSVLink data={filteredRows} filename={'dailyIncome.txt'}>Export</CSVLink>\r\n                </Button>\r\n              </Grid> \r\n          <Grid item xs={3} sm={2}> \r\n              <Link\r\n                to={(from && to) ? (\"/gui/collectionBills/\"+from+\"/\"+to) : \"\"}\r\n                hidden={(from && to) ? false : true}\r\n                className=\"badge\">\r\n                 Print Collection\r\n              </Link>\r\n          </Grid> \r\n\r\n          <Grid item xs={6} sm={3}> \r\n              <Link to=\"#\"\r\n                onClick={ (from && to) ? (() => generateBillCollection(calendar.currentDate.format(\"DD-MM-YYYY\"))): \"\"}\r\n                className=\"badge\">\r\n                 Generate Collection Bill\r\n              </Link>    \r\n          </Grid> \r\n          <Grid item xs={6} sm={6}> \r\n\t\t\t      <input\r\n                type=\"date\"\r\n                id=\"from\"\r\n                required\r\n                onChange={onChangeFrom}\r\n                name=\"from\"\r\n\t\t\t\t        style={{ width:150, height:20 }}\r\n                placeholder=\"From\"\r\n              />\r\n              <input\r\n                type=\"date\"\r\n                id=\"to\"\r\n                required\r\n                onChange={onChangeTo}\r\n                name=\"to\"\r\n\t\t\t\t        style={{ width:150, height:20 }}\r\n                placeholder=\"To\"\r\n              />\r\n\t\t\t  \r\n          </Grid> \r\n          </Grid>\r\n        </div>     \r\n         ) : (\r\n          <div>\r\n            <br />\r\n            <p>Please click on a Customer...</p>\r\n          </div>\r\n        )}\r\n        <div className=\"rootClassname\">\r\n          <FilterContext.Provider value={filters}>\r\n            <DataGrid columns={columns} onRowsChange={rowChange} \r\n             defaultColumnOptions={{\r\n              sortable: true,\r\n              resizable: true\r\n            }}\r\n              className={filters.enabled ? filterContainerClassname : undefined}\r\n              rows={filteredRows}\r\n              sortColumns={sortColumns}\r\n              onSortColumnsChange={setSortColumns}\r\n              headerRowHeight={filters.enabled ? 50 : undefined}\r\n              />\r\n            </FilterContext.Provider>\r\n          </div>\r\n\r\n          <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\">\r\n              <DialogTitle id=\"alert-dialog-title\">\r\n                {\"Bills\"}\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                {message}\r\n                </DialogContentText>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                  {confirm ? (\r\n                    <Button onClick={handleConfirm}>Confirm</Button>\r\n                    ) : \"\"}\r\n                <Button onClick={handleClose}>Close</Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n      </div>\r\n    );\r\n  };\r\nexport default CollectionBillsList;\r\n\r\n\r\nfunction FilterRenderer({isCellSelected,column,children}) {\r\n  const filters = useContext(FilterContext);\r\n  const { ref, tabIndex } = useFocusRef(isCellSelected);\r\n\r\n  return (\r\n    <>\r\n      <div>{column.name}</div>\r\n      {filters.enabled && <div>{children({ ref, tabIndex, filters })}</div>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport function useFocusRef(isSelected) {\r\n  const ref = useRef(null);\r\n\r\n  useLayoutEffect(() => {\r\n    if (!isSelected) return;\r\n    ref.current && ref.current.focus({ preventScroll: true });\r\n  }, [isSelected]);\r\n\r\n\r\n  return {\r\n    ref,\r\n    tabIndex: isSelected ? 0 : -1\r\n  };\r\n}","import React, { useState , useEffect, useMemo, useContext, createContext, useRef , useLayoutEffect } from \"react\";\r\nimport DataGrid,  {HeaderRendererProps} from 'react-data-grid';\r\nimport { Link } from \"react-router-dom\";\r\nimport NumericEditor from \"./editor/numericeditor.component\";\r\nimport DeliveryService from \"../services/delivery.service\";\r\nimport CustomerService from \"../services/customer.service\";\r\nimport BillService from \"../services/bill.service\";\r\nimport PaymentService from \"../services/payment.service\";\r\nimport moment from 'moment';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nimport { CSVLink } from 'react-csv';\r\nimport Button from '@mui/material/Button';\r\nimport { collapseClasses } from \"@mui/material\";\r\n\r\nconst rootClassname = 'rootClassname';\r\nconst filterColumnClassName = 'filter-cell';\r\nconst filterContainerClassname = 'filterContainerClassname';\r\nconst filterClassname = 'filterClassname';\r\n\r\nconst FilterContext = createContext(undefined);\r\n\r\nfunction inputStopPropagation(event) {\r\n  if (['ArrowLeft', 'ArrowRight'].includes(event.key)) {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n\r\nfunction getComparator(sortColumn) {\r\n  switch (sortColumn) {\r\n    case 'name':\r\n      return (a, b) => {\r\n        return a[sortColumn].localeCompare(b[sortColumn]);\r\n      };\r\n    default:\r\n      return (a, b) => {\r\n        return a[sortColumn] - b[sortColumn];\r\n      };\r\n  }\r\n}\r\n\r\nconst CollectionDaily = props => {\r\n\r\n  const [filters, setFilters] = useState({\r\n    name: '',\r\n    route: '',\r\n    enabled: true\r\n  });\r\n\r\n  const initialCalendar = {\r\n    currentDate: moment()\r\n  };\r\n  \r\n    const [rows, setRows] = useState([]);  \r\n\t  const [message, setMessage] = useState();\r\n\t  const [rate, setRate] = useState({});\r\n\t  const [open, setOpen] = useState(false);\r\n\t  const [confirm, setConfirm] = useState(false);\r\n    const [calendar, setCalendar] = useState(initialCalendar);\r\n    const [sortColumns, setSortColumns] = useState([]);  \r\n    const [from, setFrom] = useState();\r\n    const [to, setTo] = useState();\r\n \r\n    const columns = [\r\n      { key: 'id', name: 'ID' , minWidth: 40 , resizable: true ,\r\n      headerCellClass: filterColumnClassName,\r\n      headerRenderer: (p) => (\r\n        <FilterRenderer {...p}>\r\n          {({ filters, ...rest }) => (\r\n            <input\r\n              {...rest}\r\n              className={filterClassname}\r\n              value={filters.name}\r\n              onChange={(e) =>\r\n                setFilters({\r\n                  ...filters,\r\n                  name: e.target.value\r\n                })\r\n              }\r\n              onKeyDown={inputStopPropagation}\r\n            />\r\n          )}\r\n        </FilterRenderer>\r\n      )\r\n      },\r\n      { key: 'name', name: 'Name' , width: 200, resizable: true,\r\n      formatter(props) {\r\n        return <>\r\n          {props.row.name}\r\n          <Link disable=\"true\" to=\"#\"\r\n          onClick={() => addCollectionForSameFarmer(props.row.id, props.row.index, props.row)}\r\n          className=\"badge badge-warning\">\r\n          Add\r\n          </Link>\r\n        </>;\r\n      }\r\n      },\r\n      { key: 'today', name: 'Quantity' , editor: NumericEditor, editorOptions: {editOnClick: true} , minWidth:80, resizable: true },\r\n      { key: 'fat', name: 'Fat' , minWidth:20 , resizable: true , editor: NumericEditor, editorOptions: {editOnClick: true} },\r\n      { key: 'snf', name: 'Snf' , minWidth:20 , resizable: true, editor: NumericEditor, editorOptions: {editOnClick: true} },\r\n      { key: 'water', name: 'Water' , minWidth:40 , resizable: true, editor: NumericEditor, editorOptions: {editOnClick: true} },\r\n      { key: 'rate', name: 'Rate' , minWidth:40 , resizable: true ,editor: NumericEditor, editorOptions: {editOnClick: true}},\r\n      { key: 'amount', name: 'Amount' , minWidth:40 , resizable: true },\r\n      { key: 'route', name: 'Route' , minWidth:40, resizable: true ,\r\n          headerCellClass: filterColumnClassName,\r\n          headerRenderer: (p) => (\r\n            <FilterRenderer {...p}>\r\n              {({ filters, ...rest }) => (\r\n                <input\r\n                  {...rest}\r\n                  className={filterClassname}\r\n                  value={filters.route}\r\n                  onChange={(e) =>\r\n                    setFilters({\r\n                      ...filters,\r\n                      route: e.target.value\r\n                    })\r\n                  }\r\n                  onKeyDown={inputStopPropagation}\r\n                />\r\n              )}\r\n            </FilterRenderer>\r\n          )\r\n      },\r\n      { key: 'bill', name: 'Bill' , minWidth:40 , resizable: true },\r\n      { key: 'qty', name: 'Bill Qty' , minWidth:70 , resizable: true },\r\n      { key: 'paid', name: 'Paid' , minWidth:60 , resizable: true }\r\n    ];\r\n    \r\n    \r\n    useEffect(() => {\r\n      var calendar={currentDate:moment(props.match.params.date,'DD-MMM-YYYY')};\r\n      setCalendar(calendar);\r\n      var initialRows = null;\r\n      const paramCustomer = { active: true, type: \"farmer\"};\r\n\r\n      CustomerService.getAll(paramCustomer).then((response) => {\r\n        var customers = response.data;\r\n        initialRows = new Array(customers.length);\r\n        customers.map((customer, index) => {\r\n          initialRows[index]={};\r\n          initialRows[index][\"id\"]=customer.id;\r\n          initialRows[index][\"name\"]=customer.name;\r\n          initialRows[index][\"route\"]=customer.route.name;\r\n          initialRows[index][\"index\"]=index;\r\n        });\r\n        deliveryService(calendar, initialRows);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\t  \r\n    }, [props.match.params.date]);\r\n\r\n    function deliveryService(calendar, initialRows){\r\n      const params ={ \"date\": calendar.currentDate.format(\"DD\"), \r\n                      \"month\" : calendar.currentDate.format(\"MMM-YYYY\"), type: \"expense\"};\r\n      DeliveryService.getAll(params).then((response) => {\r\n        var deliverys = response.data;\r\n       \r\n        deliverys && deliverys.map((delivery) => {\r\n          for(var initialRow of initialRows){\r\n            if(initialRow.id == delivery.partyId){\r\n              if(initialRow[\"idtoday\"]){\r\n                var rowCopy = {\r\n                  id: initialRow.id,\r\n                  name: initialRow.name,\r\n                  route: initialRow.route,\r\n                  index: initialRow.index+1,\r\n\r\n                  today: delivery.quantity,\r\n                  idtoday: delivery.id,\r\n                  fat: delivery.fat,\r\n                  snf: delivery.snf,\r\n                  water: delivery.water,\r\n                  rate: delivery.rate,\r\n                  amount: delivery.amount\r\n                }\r\n                initialRows.splice(initialRow.index, 0, rowCopy);\r\n              }else{\r\n                initialRow[\"today\"] = delivery.quantity;\r\n                initialRow[\"idtoday\"]=delivery.id;\r\n                initialRow[\"fat\"]=delivery.fat;\r\n                initialRow[\"snf\"]=delivery.snf;\r\n                initialRow[\"water\"]=delivery.water;\r\n                initialRow[\"rate\"]=delivery.rate;\r\n                initialRow[\"amount\"]=delivery.amount;\r\n              }\r\n              break;\r\n            }\r\n          };\r\n        });\r\n        billService(calendar, initialRows);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n    }\r\n\r\n    function billService(calendar, initialRows){\r\n      const paramsBill ={ from: calendar.currentDate.format(\"YYYY-MM-DD\"), month : calendar.currentDate.format(\"MMM-YYYY\"), active: true, type: \"expense\"};\r\n      BillService.getAll(paramsBill).then((response) => {\r\n        var deliverys = response.data;        \r\n        initialRows && initialRows.map((initialRow) => {\r\n          for(var delivery of deliverys){\r\n            if(initialRow.id == delivery.partyId){\r\n              if(delivery.bill){\r\n                initialRow[\"qty\"] = delivery.quantity;                \r\n                initialRow[\"bill\"]=delivery.bill;                \r\n              }\r\n              break;\r\n            }\r\n          };\r\n        });\r\n        getPayment(calendar, initialRows);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\t  \r\n      //previous month bill and due amount\r\n\t  \r\n    }\r\n\r\n    function getPayment(calendar, initialRows){\r\n      var params ={ \"month\": calendar.currentDate.format(\"MMM-YYYY\"), \"active\": true, type: \"expense\"};\r\n      PaymentService.getAll(params).then(response => {\r\n        var bills = response.data;\r\n        initialRows && initialRows.map((initialRow) => {\r\n          bills && bills.map((bill) => {\r\n              if(bill.partyId == initialRow.id){\r\n                if(initialRow[\"paid\"]){\r\n                  initialRow[\"paid\"]=initialRow[\"paid\"]+bill.payment;\r\n                }else{\r\n                  initialRow[\"paid\"]=+bill.payment\r\n                }\r\n              }\r\n            });\r\n        });\r\n\r\n        console.log(initialRows);\r\n        setRows(initialRows);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n    }\r\n\r\n    function addCollectionForSameFarmer(pa0tyId, index, row){\r\n        var rowCopy = {\r\n          id: row.id,\r\n          name: row.name,\r\n          route: row.route,\r\n          index: row.index,\r\n          qty: row.quantity,\r\n          bill: row.bill,\r\n          paid: row.paid\r\n        }\r\n        row.index=index+1;\r\n        rows.splice(index, 0, rowCopy);\r\n        setRows(rows.slice());\r\n    }\r\n\r\n    function rowChange(row, col) {\r\n      constructDeliveryUpdateData(row,col);\r\n      setRows (row);\r\n    }\r\n\r\n    function constructDeliveryUpdateData(row, col){\r\n      var rowData = row[col.indexes];\r\n      var columnVal = rowData[col.column.key]; \r\n      var columnId = rowData[\"idtoday\"];\r\n      console.log(rowData.id+ \" - \"+columnVal + \" - \" +columnId+\" - \" + col.column.key);\r\n      saveDelivery(rowData.id, calendar.currentDate, calendar.currentDate , rowData.today, \r\n        columnId, rowData, rowData.fat, rowData.snf, rowData.water, rowData.rate);\r\n    }\r\n\r\n    function saveDelivery (cutomerId, date, month, quantity, id, rowData, fat, snf, water, rate) {\r\n      var amount = 0;\r\n      var tempRate = 0;\r\n      var tempQantity = 0;\r\n      if(rate){\r\n        if(rate<30){\r\n          tempRate = 30;\r\n        }else {\r\n          tempRate = rate;\r\n        }\r\n      }\r\n      if(quantity){\r\n        tempQantity = quantity;\r\n      }\r\n\r\n      amount = rate * tempQantity;\r\n      rowData[\"amount\"]=amount;\r\n\r\n\r\n      var data = {\r\n        id: id,\r\n        partyId: cutomerId,\r\n        date: date.format(\"DD\"),\r\n        deliveryDate: date.format(\"DD-MMM-YYYY\"),\r\n        month: month.format(\"MMM-YYYY\"),\r\n        fat: fat,\r\n        snf: snf,\r\n        water: water,\r\n        quantity: quantity,\r\n        rate: rate,\r\n\t\t    type: \"expense\",   \r\n        amount: amount,\r\n        category: \"collection\"      \r\n      };\r\n      console.log(data);\r\n      if(id){\r\n          DeliveryService.update(id, data)\r\n            .then(response => {\r\n              console.log(response.data);\r\n            })\r\n            .catch(e => {\r\n              console.log(e);\r\n            });\r\n      } else {\r\n        DeliveryService.create(data)\r\n            .then(response => {\r\n              rowData[\"idtoday\"]=response.data.id;\r\n              console.log(rowData);\r\n            })\r\n            .catch(e => {\r\n              console.log(e);\r\n            });\r\n        }\r\n      } \r\n\r\n  const filteredRows = useMemo( () => {\r\n    function filter(){\r\n      var filteredRows = null;\r\n       filteredRows = rows.filter((r) => {\r\n        return (\r\n          (filters.name ? r.name.includes(filters.name) : true)\r\n          && (filters.route ? r.route.includes(filters.route) : true)\r\n        );\r\n      })\r\n      if (sortColumns.length === 0) return filteredRows;\r\n      filteredRows = [...filteredRows].sort((a, b) => {\r\n        for (const sort of sortColumns) {\r\n          const comparator = getComparator(sort.columnKey);\r\n          const compResult = comparator(a, b);\r\n          if (compResult !== 0) {\r\n            return sort.direction === 'ASC' ? compResult : -compResult;\r\n          }\r\n        }\r\n        return 0;\r\n      })\r\n      return filteredRows;\r\n    }\r\n    return filter();\r\n  }, [rows, filters, sortColumns]);\r\n\r\n    return (\r\n      <div >\r\n        {calendar ? (\r\n        <div >\r\n         \r\n            <Grid container spacing={{ xs: 1}} >\r\n          <Grid item xs={6} sm={3}> \r\n            <Link\r\n                to={\"/gui/collectionDaily/\"+calendar.currentDate.clone().subtract(1, 'days').format('DD-MMM-YYYY')}\r\n                className=\"badge badge-warning\">\r\n                Prev\r\n              </Link>\r\n              {calendar.currentDate.format(\"DD-MMM-YYYY\")}\r\n              <Link\r\n                to={\"/gui/collectionDaily/\"+calendar.currentDate.clone().add(1, 'days').format('DD-MMM-YYYY')}\r\n                className=\"badge badge-warning\">\r\n                Next\r\n              </Link>\r\n            </Grid>\r\n           \r\n            <Grid item xs={3} sm={1}>\r\n                &nbsp;\r\n                <Button variant=\"warning\" className=\"badge\">\r\n                      <CSVLink \r\n                      data={filteredRows} filename={'dailyCollectionExpense.txt'}>Export\r\n                      </CSVLink>\r\n                </Button>\r\n              </Grid> \r\n          </Grid>  \r\n          \r\n        </div>     \r\n         ) : (\r\n          <div>\r\n            <br />\r\n            <p>Please click on a Customer...</p>\r\n          </div>\r\n        )}\r\n        <div className=\"rootClassname\">\r\n          <FilterContext.Provider value={filters}>\r\n            <DataGrid columns={columns} onRowsChange={rowChange} \r\n             defaultColumnOptions={{\r\n              sortable: true,\r\n              resizable: true\r\n            }}\r\n              className={filters.enabled ? filterContainerClassname : undefined}\r\n              rows={filteredRows}\r\n              sortColumns={sortColumns}\r\n              onSortColumnsChange={setSortColumns}\r\n              headerRowHeight={filters.enabled ? 50 : undefined}\r\n              />\r\n            </FilterContext.Provider>\r\n          </div>\r\n      </div>\r\n    );\r\n  };\r\nexport default CollectionDaily;\r\n\r\n\r\nfunction FilterRenderer({isCellSelected,column,children}) {\r\n  const filters = useContext(FilterContext);\r\n  const { ref, tabIndex } = useFocusRef(isCellSelected);\r\n\r\n  return (\r\n    <>\r\n      <div>{column.name}</div>\r\n      {filters.enabled && <div>{children({ ref, tabIndex, filters })}</div>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport function useFocusRef(isSelected) {\r\n  const ref = useRef(null);\r\n\r\n  useLayoutEffect(() => {\r\n    if (!isSelected) return;\r\n    ref.current && ref.current.focus({ preventScroll: true });\r\n  }, [isSelected]);\r\n\r\n\r\n  return {\r\n    ref,\r\n    tabIndex: isSelected ? 0 : -1\r\n  };\r\n}","import React, { useState , useEffect, useMemo, useContext, createContext, useRef , useLayoutEffect } from \"react\";\r\nimport RouteService from \"../services/route.service\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DataGrid, {TextEditor, SelectCellFormatter} from 'react-data-grid';\r\nimport DeliveryService from \"../services/delivery.service\";\r\nimport CustomerService from \"../services/customer.service\";\r\nimport DropDownEditor, {useRoute} from \"../components/editor/dropdown.component\";\r\nimport NumericEditor from \"../components/editor/numericeditor.component\";\r\nimport moment from 'moment';\r\n\r\nconst rootClassname = 'rootClassname';\r\nconst filterColumnClassName = 'filter-cell';\r\nconst filterContainerClassname = 'filterContainerClassname';\r\nconst filterClassname = 'filterClassname';\r\n\r\nconst FilterContext = createContext(undefined);\r\n\r\nfunction inputStopPropagation(event) {\r\n  if (['ArrowLeft', 'ArrowRight'].includes(event.key)) {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n\r\nexport function stopPropagation(event) {\r\n  event.stopPropagation();\r\n}\r\n\r\nfunction getComparator(sortColumn) {\r\n  switch (sortColumn) {\r\n    case 'name':\r\n\tcase 'address':\r\n\tcase 'startDate':\r\n\tcase 'endDate':\r\n\tcase 'type':\r\n      return (a, b) => {\r\n        return a[sortColumn].localeCompare(b[sortColumn]);\r\n      };\r\n    default:\r\n      return (a, b) => {\r\n        return a[sortColumn] - b[sortColumn];\r\n      };\r\n  }\r\n}\r\n\r\nconst CustomerList = props => {  \r\n\r\n  const [rows, setRows] = useState([]);\r\n\tconst [sortColumns, setSortColumns] = useState([]);  \r\n  const [filters, setFilters] = useState({\r\n    name: '',\r\n    enabled: true\r\n  });\r\n\r\n  const columns = [\r\n    { key: 'id', name: 'ID' , width: 40 , resizable: true,frozen: true,\r\n        headerCellClass: filterColumnClassName,\r\n        headerRenderer: (p) => (\r\n          <FilterRenderer {...p}>\r\n            {({ filters, ...rest }) => (\r\n              <input\r\n                {...rest}\r\n                className={filterClassname}\r\n                value={filters.name}\r\n                onChange={(e) =>\r\n                  setFilters({\r\n                    ...filters,\r\n                    name: e.target.value\r\n                  })\r\n                }\r\n                onKeyDown={inputStopPropagation}\r\n              />\r\n            )}\r\n          </FilterRenderer>\r\n        )\r\n    },\r\n    { key: 'name', name: 'Name' , editor: TextEditor, editorOptions: {editOnClick: true} , resizable: true ,frozen: true,},\r\n    { key: 'address', name: 'Address' , editor: TextEditor, editorOptions: {editOnClick: true} , resizable: true },\r\n    { key: 'mobNo', name: 'MobNo' , editor: NumericEditor, editorOptions: {editOnClick: true} , resizable: true },\r\n    { key: 'startDate', name: 'StartDate' , editor: TextEditor, editorOptions: {editOnClick: true} , resizable: true },\r\n    { key: 'endDate', name: 'EndDate' , editor: TextEditor, editorOptions: {editOnClick: true} , resizable: true },\r\n    { key: 'defaultQuantity', name: 'Quantity' , width: 40  , editor: NumericEditor, editorOptions: {editOnClick: true} , resizable: true },\r\n    { key: 'active', name: 'Active' , width: 40 ,\r\n            formatter({ row, onRowChange, isCellSelected }) {\r\n              return (\r\n                <SelectCellFormatter\r\n                  value={row.active}\r\n                  onChange={() => {\r\n                    onRowChange({ ...row, active: !row.active });\r\n                  }}\r\n                  onClick={stopPropagation}\r\n                  isCellSelected={isCellSelected}\r\n                />\r\n              );\r\n            } },\r\n    { key: 'routeId', name: 'Route' , resizable: true ,\r\n              formatter(props) {\r\n                return <>{props.row.routeName}</>;\r\n              },\r\n              editor: DropDownEditor,\r\n              editorOptions: {\r\n                editOnClick: true\r\n              }},\r\n    { key: 'routeSeq', name: 'Seq' , width: 40 , editor: NumericEditor, editorOptions: {editOnClick: true} , resizable: true },\r\n    { key: 'type', name: 'Type' , width: 80 , editor: TextEditor, editorOptions: {editOnClick: true} , resizable: true }\r\n  ];\r\n\r\n    useEffect(() => {\r\n      var initialRows = null;\r\n      const paramCustomer = { _sort: \"routeId\", _order: \"asc\"};\r\n      console.log(paramCustomer);\r\n      CustomerService.getAll(paramCustomer).then((response) => {\r\n        var customers = response.data;\r\n        initialRows = new Array(customers.length);\r\n        customers.map((customer, index) => {\r\n          initialRows[index]={};\r\n          initialRows[index][\"id\"]=customer.id;\r\n          initialRows[index][\"name\"]=customer.name;\r\n          initialRows[index][\"address\"]=customer.address;\r\n          initialRows[index][\"mobNo\"]=customer.mobNo;\r\n          initialRows[index][\"startDate\"]=customer.startDate;\r\n          initialRows[index][\"endDate\"]=customer.endDate;\r\n          initialRows[index][\"defaultQuantity\"]=customer.defaultQuantity;\r\n          initialRows[index][\"active\"]=customer.active;\r\n          initialRows[index][\"routeId\"]=customer.routeId;\r\n          initialRows[index][\"routeSeq\"]=customer.routeSeq;\r\n\t\t      initialRows[index][\"type\"]=customer.type;\r\n          if(customer.route){\r\n            initialRows[index][\"routeName\"]=customer.route.name;\r\n          }\r\n        });\r\n        setRows(initialRows);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });    \r\n    }, []);\r\n\r\n    function rowChange(row, col) {\r\n      constructDeliveryUpdateData(row,col);\r\n      setRows (row);\r\n    }\r\n\r\n    function constructDeliveryUpdateData(row, col){\r\n      console.log(row[col.indexes].id+ \" - \"+row[col.indexes][col.column.key]);\r\n      saveDelivery(row[col.indexes]);\r\n    }\r\n\r\n    function saveDelivery (row) {\r\n      var data = {\r\n        id: row.id,\r\n        name: row.name,\r\n        address: row.address,\r\n        mobNo: row.mobNo,\r\n        startDate: row.startDate,\r\n        endDate: row.endDate,\r\n        active: row.active,\r\n        routeId: row.routeId,\r\n        defaultQuantity: row.defaultQuantity,\r\n        routeSeq: row.routeSeq,\r\n\t\ttype: row.type\r\n      };\r\n      console.log(data);\r\n      \r\n           CustomerService.update(row.id, data)\r\n            .then(response => {\r\n              console.log(response.data);\r\n            })\r\n            .catch(e => {\r\n              console.log(e);\r\n            }); \r\n    }\r\n\r\n\t  const filteredRows = useMemo( () => {\r\n      function filter(){\r\n        var filteredRows = null;\r\n         filteredRows = rows.filter((r) => {\r\n          return (\r\n            (filters.name ? r.name.includes(filters.name) : true)\r\n          );\r\n        })\r\n        if (sortColumns.length === 0) return filteredRows;\r\n        filteredRows = [...filteredRows].sort((a, b) => {\r\n          for (const sort of sortColumns) {\r\n            const comparator = getComparator(sort.columnKey);\r\n            const compResult = comparator(a, b);\r\n            if (compResult !== 0) {\r\n              return sort.direction === 'ASC' ? compResult : -compResult;\r\n            }\r\n          }\r\n          return 0;\r\n        })\r\n        return filteredRows;\r\n      }\r\n      return filter();\r\n    }, [rows, filters, sortColumns]);\r\n  \r\n    return (\r\n      <div >\r\n                <Link to={\"/gui/addCustomer\"} className=\"nav-link\">\r\n                  Add Customer\r\n                </Link>\r\n        <div className={rootClassname}>\r\n          <FilterContext.Provider value={filters}>\r\n            <DataGrid columns={columns} onRowsChange={rowChange} \r\n             defaultColumnOptions={{\r\n              sortable: true,\r\n              resizable: true\r\n            }}\r\n              className={filters.enabled ? filterContainerClassname : undefined}\r\n              rows={filteredRows}\r\n              sortColumns={sortColumns}\r\n              onSortColumnsChange={setSortColumns}\r\n              headerRowHeight={filters.enabled ? 50 : undefined}\r\n              />\r\n            </FilterContext.Provider>\r\n          </div>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default CustomerList;\r\n\r\n  \r\nfunction FilterRenderer({isCellSelected,column,children}) {\r\n  const filters = useContext(FilterContext);\r\n  const { ref, tabIndex } = useFocusRef(isCellSelected);\r\n\r\n  return (\r\n    <>\r\n      <div>{column.name}</div>\r\n      {filters.enabled && <div>{children({ ref, tabIndex, filters })}</div>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport function useFocusRef(isSelected) {\r\n  const ref = useRef(null);\r\n\r\n  useLayoutEffect(() => {\r\n    if (!isSelected) return;\r\n    ref.current && ref.current.focus({ preventScroll: true });\r\n  }, [isSelected]);\r\n\r\n\r\n  return {\r\n    ref,\r\n    tabIndex: isSelected ? 0 : -1\r\n  };\r\n}","import React, { Component } from \"react\";\r\nimport DeliveryService from \"../services/delivery.service\";\r\nimport BillService from \"../services/bill.service\";\r\nimport moment from \"moment\";\r\n\r\nexport default class Bills extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      bills: null\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getBills(this.props.match.params.month);\r\n  }\r\n\r\n  getBills(month){\r\n      const paramsBill ={ month : month, active: true, type: \"income\"};\r\n      var initialRows = [];\r\n      BillService.getAll(paramsBill).then((response) => {\r\n        var bills = response.data;\r\n        bills && bills.map((bill,index) => {\r\n\t\t\tif(bill.quantity > 0 || bill.dues > 0){\r\n\t\t\t\tvar initialRow = {};  \r\n\t\t\t\tinitialRow[\"id\"]=bill.id;\r\n\t\t\t\tinitialRow[\"partyId\"]=bill.partyId;\r\n\t\t\t\tinitialRow[\"month\"]=month;\r\n\t\t\t\tinitialRow[\"qty\"] = bill.quantity;\r\n\t\t\t\tinitialRow[\"rate\"]=bill.rate;\r\n\t\t\t\tinitialRow[\"bill\"]=bill.bill;\r\n\t\t\t\tinitialRow[\"dues\"]=bill.dues;\r\n\t\t\t\tinitialRow[\"totalBill\"]=initialRow[\"bill\"]+(initialRow[\"dues\"]? initialRow[\"dues\"] : 0);\r\n\t\t\t\tinitialRow[\"paid\"]=+bill.payment;\r\n        initialRow[\"discount\"]=+bill.discount;\r\n        initialRow[\"lastBillTotal\"]=+bill.lastBillTotal;\r\n\t\t\t\t\r\n\t\t\t\tinitialRow[\"name\"]=bill.party;\r\n\t\t\t\t\r\n\t\t\t\tinitialRows[index]={};\r\n\t\t\t\tinitialRows[index]=initialRow;\r\n\t\t\t}\r\n        });\r\n\t\t\r\n\t  const params ={ \"month\" : month, type: \"income\"};\r\n\t  DeliveryService.getAll(params).then((response) => {\r\n\t\tvar deliverys = response.data;\r\n\t\tdeliverys && deliverys.map((delivery) => {\r\n\t\t  for(var initialRow of initialRows){\r\n\t\t\tif(initialRow && initialRow.partyId == delivery.partyId){\r\n\t\t\t  initialRow[delivery.date] = delivery.quantity;\r\n\t\t\t  break;\r\n\t\t\t}\r\n\t\t  };\r\n\t\t});\r\n\t\tconsole.log(initialRows);\r\n\t\tthis.setState({\r\n\t\t  bills: initialRows\r\n\t\t});\r\n\t  })\r\n\t  .catch((e) => {\r\n\t\tconsole.log(e);\r\n\t  });\r\n\t  \r\n        this.setState({\r\n          bills: initialRows\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\r\n    \r\n  }\r\n\r\n  render() {\r\n    const { bills } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <table className=\"table\">\r\n          {bills && bills.map((count) => (\r\n            <tr>\r\n                <td >\r\n                      <table className=\"table noBorder\" border=\"1\" >\r\n                          <tr>\r\n                             <th>Name</th>\r\n                             <td><b>{count.name ? count.name : count.id}</b></td>\r\n                           \r\n                             <th>Month</th>\r\n                             <td>{count.month}</td>\r\n                           \r\n                             <th>Last Bill</th>\r\n                             <td>{count.lastBillTotal}</td>\r\n\r\n                             <th>Payment</th>\r\n                             <td>{count.paid}</td>\r\n\r\n                             <th>Discount</th>\r\n                             <td>{count.discount}</td>\r\n                             \r\n                           </tr>\r\n                           <tr>\r\n                             <th >Quantity</th>\r\n                             <td >{count.qty + ' Ltr'}</td>\r\n\r\n                             <th >Rate</th>\r\n                             <td >{count.rate}</td>\r\n                           \r\n                             <th >Bill</th>\r\n                             <td >{count.bill}</td>\r\n\r\n                             <th>Dues</th>\r\n                             <td>{count.dues}</td>\r\n\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t               <th>Total Bill</th>\r\n                             <td>{count.totalBill} </td>\r\n                           </tr>\r\n                           <tr>\r\n                             <td style={{margin:0, padding:0}} colspan={10}>\r\n                               <table style={{margin:0, padding:0}}>\r\n                                 <tr>\r\n                                   <td >Day</td>\r\n                                   <td >1</td>\r\n                                   <td >2</td>\r\n                                   <td >3</td>\r\n                                   <td >4</td>\r\n                                   <td >5</td>\r\n                                   <td >6</td>\r\n                                   <td >7</td>\r\n                                   <td >8</td>\r\n                                   <td >9</td>\r\n                                   <td >10</td>\r\n                                   <td >11</td>\r\n                                   <td >12</td>\r\n                                   <td >13</td>\r\n                                   <td >14</td>\r\n                                   <td >15</td>\r\n                                   <td >16</td>\r\n                                   <td rowSpan={2}><h1>RAMJI DAIRY</h1></td>\t\t\t\t\t\t\t\t   \r\n                                 </tr>\r\n                                 <tr>\r\n                                          <td >Quantity</td>  \r\n                                          <td  >{count[\"01\"]}</td>\r\n                                          <td  >{count[\"02\"]}</td>\r\n                                          <td  >{count[\"03\"]}</td>\r\n                                          <td  >{count[\"04\"]}</td>\r\n                                          <td  >{count[\"05\"]}</td>\r\n                                          <td  >{count[\"06\"]}</td>\r\n                                          <td  >{count[\"07\"]}</td>\r\n                                          <td  >{count[\"08\"]}</td>\r\n                                          <td  >{count[\"09\"]}</td>\r\n                                          <td  >{count[\"10\"]}</td>\r\n                                          <td  >{count[\"11\"]}</td>\r\n                                          <td  >{count[\"12\"]}</td>\r\n                                          <td  >{count[\"13\"]}</td>\r\n                                          <td  >{count[\"14\"]}</td>\r\n                                          <td  >{count[\"15\"]}</td>\r\n                                          <td  >{count[\"16\"]}</td>\r\n                                 </tr>\r\n                                 \r\n                                 <tr>\r\n                                   <td >Day</td>\r\n                                   <td >17</td>\r\n                                   <td >18</td>\r\n                                   <td >19</td>\r\n                                     <td >20</td>\r\n                                   <td >21</td>\r\n                                   <td >22</td>\r\n                                   <td >23</td>\r\n                                   <td >24</td>\r\n                                   <td >25</td>\r\n                                   <td >26</td>\r\n                                   <td >27</td>\r\n                                   <td >28</td>\r\n                                   <td >29</td>\r\n                                   <td >30</td>\r\n                                   <td >31</td>\r\n                                   <td >{\" \"}</td>\r\n                                   <td rowSpan={2}><h3>9860910995</h3></td>\r\n                                 </tr>\r\n                                 <tr>\r\n                                          <td >quantity</td>\r\n                                          <td  >{count[\"17\"]}</td>\r\n                                          <td  >{count[\"18\"]}</td>\r\n                                          <td  >{count[\"19\"]}</td>\r\n                                          <td  >{count[\"20\"]}</td>\r\n                                          <td  >{count[\"21\"]}</td>\r\n                                          <td  >{count[\"22\"]}</td>\r\n                                          <td  >{count[\"23\"]}</td>\r\n                                          <td  >{count[\"24\"]}</td>\r\n                                          <td  >{count[\"25\"]}</td>\r\n                                          <td  >{count[\"26\"]}</td>\r\n                                          <td  >{count[\"27\"]}</td>\r\n                                          <td  >{count[\"28\"]}</td>\r\n                                          <td  >{count[\"29\"]}</td>\r\n                                          <td  >{count[\"30\"]}</td>\r\n                                          <td  >{count[\"31\"]}</td>\r\n                                 </tr>\r\n                                \r\n                               </table>\r\n                             </td>\r\n                           </tr>\r\n                        </table>\r\n              </td>\r\n            </tr>\r\n          ))}    \r\n           </table> \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport DeliveryService from \"../services/delivery.service\";\r\nimport BillService from \"../services/bill.service\";\r\nimport moment from \"moment\";\r\n\r\nexport default class CollectionBills extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      bills: null\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getBills(this.props.match.params.from, this.props.match.params.to, this.props.match.params.partyId);\r\n  }\r\n  getBills(from, to, partyId){\r\n      const paramsBill ={ from : from, to: to, active: true, type: \"expense\", category: \"collection\",  partyId : partyId };\r\n      console.log(paramsBill);\r\n      var initialRows = [];\r\n      BillService.getAll(paramsBill).then((response) => {\r\n        var bills = response.data;\r\n        console.log(bills);\r\n        bills && bills.map((bill,index) => {\r\n\t\t\tif(bill.quantity > 0 || bill.dues > 0){\r\n\t\t\t\tvar initialRow = {};  \r\n\t\t\t\tinitialRow[\"id\"]=bill.id;\r\n\t\t\t\tinitialRow[\"partyId\"]=bill.partyId;\r\n\t\t\t\tinitialRow[\"from\"]=bill.from;\r\n        initialRow[\"to\"]=bill.to;\r\n\t\t\t\tinitialRow[\"qty\"] = bill.quantity;\r\n\t\t\t\tinitialRow[\"rate\"]=bill.rate;\r\n\t\t\t\tinitialRow[\"bill\"]=bill.bill;\r\n\t\t\t\tinitialRow[\"dues\"]=bill.dues;\r\n\t\t\t\tinitialRow[\"totalBill\"]=initialRow[\"bill\"]+(initialRow[\"dues\"]? initialRow[\"dues\"] : 0);\r\n\t\t\t\tinitialRow[\"paid\"]=+bill.payment;\r\n        initialRow[\"discount\"]=+bill.discount;\r\n        initialRow[\"lastBillTotal\"]=+bill.lastBillTotal;\t\t\t\t\r\n\t\t\t\tinitialRow[\"name\"]=bill.party;\r\n\t\t\t\t\r\n\t\t\t\tinitialRows[index]={};\r\n\t\t\t\tinitialRows[index]=initialRow;\r\n\t\t\t}\r\n        });\r\n\t\t\r\n\t  const params ={ \"from\" : from,\"to\":to, type: \"expense\", category:\"collection\"};\r\n\t  DeliveryService.getAll(params).then((response) => {\r\n\t\tvar deliverys = response.data;\r\n\t\tdeliverys && deliverys.map((delivery) => {\r\n\t\t  for(var initialRow of initialRows){\r\n\t\t\tif(initialRow && initialRow.partyId == delivery.partyId){\r\n        if(initialRow[\"delivery\"]){\r\n          initialRow[\"delivery\"][initialRow[\"delivery\"].length]=delivery;\r\n        }else {\r\n          initialRow[\"delivery\"]=new Array();\r\n          initialRow[\"delivery\"][0]=delivery;\r\n        }\r\n\t\t\t  break;\r\n\t\t\t}\r\n\t\t  };\r\n\t\t});\r\n\t\tconsole.log(initialRows);\r\n\t\tthis.setState({\r\n\t\t  bills: initialRows\r\n\t\t});\r\n\t  })\r\n\t  .catch((e) => {\r\n\t\tconsole.log(e);\r\n\t  });\r\n\t  \r\n        this.setState({\r\n          bills: initialRows\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\r\n    \r\n  }\r\n\r\n  render() {\r\n    const { bills } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <table className=\"table\">\r\n          {bills && bills.map((count) => (\r\n            <tr>\r\n                <td >\r\n                      <table className=\"table noBorder\" border=\"1\" >\r\n                          <tr>\r\n                             <th>Name</th>\r\n                             <td><b>{count.name ? count.name : count.id}</b></td>\r\n                           \r\n                             <th>From</th>\r\n                             <td>{count.from}</td>\r\n\r\n                             <th>To</th>\r\n                             <td>{count.to}</td>\r\n                           \r\n                             <th>Last Bill</th>\r\n                             <td>{count.lastBillTotal}</td>\r\n\r\n                             <th>Payment</th>\r\n                             <td>{count.paid}</td>\r\n\r\n                             <th>Discount</th>\r\n                             <td>{count.discount}</td>\r\n                             \r\n                           </tr>\r\n                           <tr>\r\n                             <th >Quantity</th>\r\n                             <td colSpan={3}>{count.qty + ' Ltr'}</td>\r\n\r\n                             \r\n                           \r\n                             <th >Bill</th>\r\n                             <td >{count.bill}</td>\r\n\r\n                               <th>Dues</th>\r\n                             <td>{count.dues}</td>\r\n\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t               <th>Total Bill</th>\r\n                             <td colSpan={3}>{count.totalBill} </td>\r\n                           </tr>\r\n                           <tr>\r\n                             <td style={{margin:0, padding:0}} colspan={12}>\r\n                               <table style={{margin:0, padding:0}}>   \r\n                                   <tr>\r\n                                     <td>\r\n                                       <table>\r\n                                         <tr>\r\n                                            <th>Date</th>\r\n                                            <th>SNF</th>\r\n                                            <th>Water</th>\r\n                                            <th>Rate</th>                                      \r\n                                            <th>Quantity</th>\r\n                                            <th>Amount</th>                                    \r\n                                          </tr>                               \r\n                                          {count.delivery && count.delivery.map((delivery, index) => (\r\n                                            (index%2==0 ? \r\n                                          <tr>\r\n                                            <td><b>{delivery.date}</b></td>\r\n                                            <td>{delivery.snf}</td>\r\n                                            <td>{delivery.water}</td>\r\n                                            <td>{delivery.rate}</td>                                      \r\n                                            <td>{delivery.quantity}</td>\r\n                                            <td>{delivery.amount}</td>\r\n                                          </tr>\r\n                                          :\"\")\r\n                                          ))}\r\n                                    </table>\r\n                                    </td>\r\n                                    <td>\r\n                                       <table>\r\n                                         <tr>\r\n                                            <th>Date</th>\r\n                                            <th>SNF</th>\r\n                                            <th>Water</th>\r\n                                            <th>Rate</th>                                      \r\n                                            <th>Quantity</th>\r\n                                            <th>Amount</th>                                    \r\n                                          </tr>                               \r\n                                          {count.delivery && count.delivery.map((delivery, index) => (\r\n                                           (index%2==1 ? \r\n                                              <tr>\r\n                                            <td><b>{delivery.date}</b></td>\r\n                                            <td>{delivery.snf}</td>\r\n                                            <td>{delivery.water}</td>\r\n                                            <td>{delivery.rate}</td>                                      \r\n                                            <td>{delivery.quantity}</td>\r\n                                            <td>{delivery.amount}</td>\r\n                                            </tr>\r\n                                            :\"\")\r\n                                          ))}\r\n                                    </table>\r\n                                    </td>\r\n                                    </tr>\r\n                               </table>\r\n                             </td>\r\n                           </tr>\r\n                        </table>\r\n              </td>\r\n            </tr>\r\n          ))}    \r\n           </table> \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport DeliveryService from \"../services/delivery.service\";\r\nimport BillService from \"../services/bill.service\";\r\nimport PaymentService from \"../services/payment.service\";\r\nimport moment from \"moment\";\r\n\r\nexport default class ExpenseBills extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      bills: null\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getBills(this.props.match.params.month);\r\n  }\r\n\r\n  getBills(month){\r\n      const paramsBill ={ month : month, active: true, type: \"expense\"};\r\n      var initialRows = [];\r\n      BillService.getAll(paramsBill).then((response) => {\r\n        var bills = response.data;\r\n        bills && bills.map((bill,index) => {\r\n\t\t\tif(bill.quantity > 0 || bill.dues > 0 || bill.payment > 0){\r\n\t\t\t\tvar initialRow = {};\r\n\t\t\t\tinitialRow[\"id\"]=bill.id;\r\n\t\t\t\tinitialRow[\"partyId\"]=bill.partyId;\r\n\t\t\t\tinitialRow[\"month\"]=month;\r\n\t\t\t\tinitialRow[\"qty\"] = bill.quantity;\r\n\t\t\t\tinitialRow[\"rate\"]=bill.rate;\r\n\t\t\t\tinitialRow[\"bill\"]=bill.bill;\r\n\t\t\t\tinitialRow[\"dues\"]=bill.dues;\r\n\t\t\t\tinitialRow[\"totalBill\"]=initialRow[\"bill\"]+(initialRow[\"dues\"]? initialRow[\"dues\"] : 0);\r\n\t\t\t\tinitialRow[\"paid\"]=+bill.payment\r\n\t\t\t\tif(bill.customer){\r\n\t\t\t\t\tinitialRow[\"name\"]=bill.customer.name;\r\n\t\t\t\t}\r\n\t\t\t\tinitialRows[index]={};\r\n\t\t\t\tinitialRows[index]=initialRow;\r\n\t\t\t\t\r\n\t\t\t\t//fetch all bills for the vendor/staff\r\n\t\t\t\t const params ={ \"month\" : month, type: \"expense\", partyId: bill.partyId};\r\n\t\t\t\t  DeliveryService.getAll(params).then((response) => {\r\n\t\t\t\t\tvar deliverys = response.data;\r\n\t\t\t\t\tinitialRows[index][\"allBills\"] = deliverys;\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t  bills: initialRows\r\n\t\t\t\t\t});\r\n\t\t\t\t  })\r\n\t\t\t\t  .catch((e) => {\r\n\t\t\t\t\tconsole.log(e);\r\n\t\t\t\t  });\r\n\t\t\t\t  PaymentService.getAll(params).then((response) => {\r\n\t\t\t\t\tvar deliverys = response.data;\r\n\t\t\t\t\tinitialRows[index][\"allPayments\"] = deliverys;\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t  bills: initialRows\r\n\t\t\t\t\t});\r\n\t\t\t\t  })\r\n\t\t\t\t  .catch((e) => {\r\n\t\t\t\t\tconsole.log(e);\r\n\t\t\t\t  });\r\n\t  \r\n\t\t\t}\r\n        });\r\n\t\tconsole.log(initialRows);\r\n        this.setState({\r\n          bills: initialRows\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });    \r\n  }\r\n\r\n  render() {\r\n    const { bills } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <table className=\"table\">\r\n          {bills && bills.map((count) => (\r\n            <tr>\r\n                <td >\r\n                      <table className=\"table noBorder\" border=\"1\" >\r\n                          <tr>\r\n                             <th>Name</th>\r\n                             <td colspan=\"3\"><b>{count.name ? count.name : count.id}</b></td>\r\n                           \r\n                             <th>Month</th>\r\n                             <td>{count.month}</td>\r\n                           \r\n                             <th >Quantity</th>\r\n                             <td >{count.qty}</td>\r\n                           </tr>\r\n                           <tr>\r\n                             <th >Bill</th>\r\n                             <td >{count.bill}</td>\r\n\r\n                             <th>Prev Dues</th>\r\n                             <td>{count.dues}</td>\r\n\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t <th>Total Bill</th>\r\n                             <td>{count.totalBill} </td>\r\n\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t <th>Payment</th>\r\n                             <td>{count.paid} </td>\r\n                           </tr>\r\n                           <tr>\r\n                             <td  colspan={4}>\r\n                               <table width=\"100%\">\r\n\t\t\t\t\t\t\t\t{count.allBills && count.allBills.map((allBill) => (\r\n                                 <tr>\r\n                                   <td >{allBill.date}-{allBill.month}</td>\r\n                                   <td >{allBill.amount}</td>\r\n                                 </tr>\r\n\t\t\t\t\t\t\t\t ))}\r\n                               </table>\r\n                             </td>\r\n\t\t\t\t\t\t\t <td colspan={4}>\r\n                               <table width=\"100%\">\r\n\t\t\t\t\t\t\t\t {count.allPayments && count.allPayments.map((allPayment) => (\r\n                                  <tr>\r\n                                   <td>{allPayment.date}-{allPayment.month}</td>\r\n                                   <td>{allPayment.payment}</td>\r\n                                 </tr>\t\r\n\t\t\t\t\t\t\t\t))}\t\t\t\t\t\t\t\t \r\n                               </table>\r\n                             </td>\r\n                           </tr>\r\n                        </table>\r\n              </td>\r\n            </tr>\r\n          ))}    \r\n           </table> \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, useState , useMemo, useEffect } from \"react\";\r\nimport RouteService from \"../services/route.service\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DataGrid, {TextEditor, SelectCellFormatter} from 'react-data-grid';\r\nimport NumericEditor, { textEditorClassname } from \"../components/editor/numericeditor.component\";\r\nimport DeliveryService from \"../services/delivery.service\";\r\nimport PaymentService from \"../services/payment.service\";\r\nimport moment from 'moment';\r\nimport Grid from '@mui/material/Grid';\r\nimport BillService from \"../services/bill.service\";\r\n\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n\r\nimport { CSVLink } from 'react-csv';\r\n\r\nexport function stopPropagation(event) {\r\n  event.stopPropagation();\r\n}\r\n\r\nfunction getComparator(sortColumn) {\r\n  switch (sortColumn) {\r\n    case 'name':\r\n\tcase 'date':\r\n\tcase 'month':\r\n\tcase 'category' :\r\n      return (a, b) => {\r\n        return a[sortColumn].localeCompare(b[sortColumn]);\r\n      };\r\n    default:\r\n      return (a, b) => {\r\n        return a[sortColumn] - b[sortColumn];\r\n      };\r\n  }\r\n}\r\n\r\nconst columns = [\r\n  { key: 'id', name: 'ID' , width: 40 , resizable: true },\r\n  { key: 'name', name: 'Name' , width:50, resizable: true },\r\n  { key: 'date', name: 'Date' , editor: TextEditor ,width: 20 , resizable: true },\r\n  { key: 'month', name: 'Month' , editor: TextEditor , width: 40 , resizable: true },\r\n  { key: 'payment', name: 'Payment Amount' , width: 140  ,editor: NumericEditor , resizable: true },\r\n  { key: 'amount', name: 'Bill Amount' , width: 120  , editor: NumericEditor , resizable: true },\r\n  { key: 'quantity', name: 'Quantity' , width: 80  , editor: NumericEditor , resizable: true },\r\n  { key: 'category', name: 'Category', editor:  TextEditor , resizable: true}\r\n];\r\n\r\nconst ExpenseList = props => {  \r\n\r\n\t const initialCalendar = {\r\n\t\tcurrentDate: moment()\r\n\t  };\r\n    const [rows, setRows] = useState([]);\r\n\tconst [sortColumns, setSortColumns] = useState([]);  \r\n\tconst [calendar, setCalendar] = useState(initialCalendar);\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst [confirm, setConfirm] = useState(false);\r\n\tconst [message, setMessage] = useState();\r\n  \r\n    useEffect(() => {\r\n\t  var calendar={currentDate: moment(props.match.params.month,'MMM-YYYY')};\r\n      setCalendar(calendar);\r\n      var initialRows = null;\r\n      const paramCustomer = {type: \"expense\", month: props.match.params.month,\r\n\t\t\t\t\t\t\t\t\t\tsearchFlag: \"not-collection\"};\r\n      DeliveryService.getAll(paramCustomer).then((response) => {\r\n        var expenses = response.data;\r\n\t\tconsole.log(expenses);\r\n        initialRows = [];\r\n        expenses && expenses.map((customer, index) => {\r\n          initialRows[index]={};\r\n          initialRows[index][\"id\"]=customer.id;\r\n          initialRows[index][\"partyId\"]=customer.partyId;\r\n          initialRows[index][\"date\"]=customer.date;\r\n          initialRows[index][\"month\"]=customer.month;\r\n          initialRows[index][\"quantity\"]=customer.quantity;\r\n          initialRows[index][\"amount\"]=customer.amount;\r\n\t\t  initialRows[index][\"type\"]=customer.type;\r\n\t\t  initialRows[index][\"category\"]=customer.category;\r\n          \r\n          initialRows[index][\"name\"]=customer.party;\r\n          \r\n        });\r\n\t\tconsole.log(initialRows);\r\n\t\tgetPayment(props.match.params.month, initialRows);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });    \r\n    }, [props.match.params.month]);\r\n\t\r\n\tfunction getPayment(month, initialRows){\r\n      var params ={ \"month\": month, \"active\": true, type: \"expense\"};\r\n      PaymentService.getAll(params).then(response => {\r\n        var bills = response.data;\r\n        bills &&  bills.map((customer) => {\r\n\t\t\t  var index = initialRows.length;\r\n\t\t\t  initialRows[initialRows.length]={};\r\n\t\t\t  initialRows[index][\"id\"]=customer.id;\r\n\t\t\t  initialRows[index][\"partyId\"]=customer.partyId;\r\n\t\t\t  initialRows[index][\"date\"]=customer.date;\r\n\t\t\t  initialRows[index][\"month\"]=customer.month;\r\n\t\t\t  initialRows[index][\"payment\"]=customer.payment;\r\n\t\t\t  initialRows[index][\"type\"]=customer.type;\r\n\t\t\t  initialRows[index][\"category\"]=customer.category;\r\n\t\t\t  \r\n\t\t\t  initialRows[index][\"name\"]=customer.party;\r\n\t\t\t  \r\n          });\r\n\t\t  setRows(initialRows);\r\n\t\t  console.log(initialRows);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n    }\r\n\r\n    function rowChange(row, col) {\r\n      constructDeliveryUpdateData(row,col);\r\n      setRows (row);\r\n    }\r\n\r\n    function constructDeliveryUpdateData(row, col){\r\n      console.log(row[col.indexes].id+ \" - \"+row[col.indexes][col.column.key]);\r\n      saveDelivery(row[col.indexes]);\r\n    }\r\n\r\n    function saveDelivery (row) {\r\n      var data = {\r\n        id: row.id,\r\n        partyId: row.partyId,\r\n        month: row.month,\r\n        date: row.date,\r\n        quantity: row.quantity,\r\n        amount: row.amount,\r\n\t\tpayment: row.payment,\r\n\t\ttype: row.type,\r\n\t\tcotegory: row.category,\r\n\t\tactive: true\r\n      };\r\n\t  \r\n\tif(row.amount > 0){\r\n\t\tDeliveryService.update(row.id, data)\r\n\t\t  .then(response => {\r\n\t\t\tconsole.log(response.data);\r\n\t\t  })\r\n\t\t  .catch(e => {\r\n\t\t\tconsole.log(e);\r\n\t\t  });\r\n\t}\r\n\tif(row.payment > 0){\r\n\t\tPaymentService.update(row.id, data)\r\n\t\t  .then(response => {\r\n\t\t\tconsole.log(response.data);\r\n\t\t  })\r\n\t\t  .catch(e => {\r\n\t\t\tconsole.log(e);\r\n\t\t  });\r\n\t}\r\n      \r\n         \r\n    }\r\n\r\n\t const sortedRows = useMemo( () => {\r\n\t\tif (sortColumns.length === 0) return rows;\r\n\t\treturn [...rows].sort((a, b) => {\r\n\t\t  for (const sort of sortColumns) {\r\n\t\t\tconst comparator = getComparator(sort.columnKey);\r\n\t\t\tconst compResult = comparator(a, b);\r\n\t\t\tif (compResult !== 0) {\r\n\t\t\t  return sort.direction === 'ASC' ? compResult : -compResult;\r\n\t\t\t}\r\n\t\t  }\r\n\t\t  return 0;\r\n\t\t});\r\n\t  }, [rows, sortColumns]);\r\n\t  \r\n\tfunction generateExpenseBill(month){\r\n\t\tBillService.validateBillGeneration(month,\"expense\").then((response) => {\r\n\t\t\tconsole.log(response.data);\r\n\t\t\tvar bill = response.data;\r\n\t\t\t//bill object has bill, means the bill was generated\r\n\t\t\tif(bill.rate){\r\n\t\t\t\tsetConfirm(true);\r\n\t\t\t\tsetMessage(\"Bill already generated for the month \"+month+\". Do you want to continue? Please confirm to proceed.\");\r\n\t\t\t\thandleClickOpen();\r\n\t\t\t}else{\r\n\t\t\t\tgenerateBillAfterCheck(month);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch((e) => {\r\n\t\t\tconsole.log(e);\r\n\t\t\t//no bill exist for the month, so generate bill without prompting user\r\n\t\t\tif(e.response.status == 404){\r\n\t\t\t\tgenerateBillAfterCheck(month);\r\n\t\t\t}\r\n\t\t});\r\n    }\r\n\t\r\n\tfunction generateBillAfterCheck(month){\r\n\t\tconst paramsBill ={ \"month\" : month, \"type\": \"expense\"};\r\n\t\tBillService.generateBills(paramsBill).then((response) => {\r\n        var deliverys = response.data;\r\n\t\tsetMessage(\"Bill generated for the month \"+month+\".\");\r\n\t\thandleClickOpen();\r\n\t\tconsole.log(deliverys);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\t}\r\n\t\r\n\tfunction handleClickOpen () {\r\n      setOpen(true);\r\n    };\r\n  \r\n    function handleClose () {\r\n\t\tsetConfirm(false);\r\n\t\tsetOpen(false);\r\n    };\r\n\t\r\n\tfunction handleConfirm () {\r\n\t\tsetConfirm(false);\r\n\t\tgenerateBillAfterCheck(calendar.currentDate.format(\"MMM-YYYY\"));\r\n\t\tsetOpen(false);\r\n\t}\r\n  \r\n    return (\r\n      <div >\t\r\n\t\t<div>\r\n\t\t\t<Grid container spacing={{ xs: 1}} >\r\n\t\t\t\t<Grid item xs={6} sm={3}> \r\n\t\t\t\t\t<Link to={\"/gui/addExpense\"} className=\"badge\">\r\n\t\t\t\t\t  Add Expense\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t <Grid item xs={6} sm={3}> \r\n\t\t\t\t\t  <Link to=\"#\"\r\n\t\t\t\t\t\tonClick={ () => generateExpenseBill(calendar.currentDate.format(\"MMM-YYYY\"))}\r\n\t\t\t\t\t\tclassName=\"badge\">\r\n\t\t\t\t\t\t Generate Expense Bill Month - {calendar.currentDate.format(\"MMM-YYYY\")}\r\n\t\t\t\t\t  </Link>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t  <Grid item xs={6} sm={3}> \r\n\t\t\t\t\t  <Link\r\n\t\t\t\t\t\tto={\"/gui/expense/\"+calendar.currentDate.clone().subtract(1, 'months').format('MMM-YYYY')}\r\n\t\t\t\t\t\tclassName=\"badge badge-warning\">\r\n\t\t\t\t\t\tPrev\r\n\t\t\t\t\t  </Link>\r\n\t\t\t\t\t  {calendar.currentDate.format(\"DD-MMM-YYYY\")}\r\n\t\t\t\t\t  <Link\r\n\t\t\t\t\t\tto={\"/gui/expense/\"+calendar.currentDate.clone().add(1, 'months').format('MMM-YYYY')}\r\n\t\t\t\t\t\tclassName=\"badge badge-warning\">\r\n\t\t\t\t\t\tNext\r\n\t\t\t\t\t  </Link>\r\n\t\t\t\t  </Grid>\r\n\t\t\t\t<Grid item xs={3} sm={2}>\r\n\t\t\t\t\t\t  <Link\r\n\t\t\t\t\t\t\tto={\"/gui/expenseBills/\"+calendar.currentDate.format('MMM-YYYY')}\r\n\t\t\t\t\t\t\tclassName=\"badge\">\r\n\t\t\t\t\t\t\t Print - {calendar.currentDate.format(\"MMM-YYYY\")} \r\n\t\t\t\t\t\t  </Link>\r\n\t\t\t\t</Grid> \r\n\t\t\t\t<Grid item xs={3} sm={1}>\r\n\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t<Button variant=\"warning\" className=\"badge\">\r\n\t\t\t\t\t\t\t\t<CSVLink data={sortedRows} filename={'expense.txt'}>Export</CSVLink>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Grid> \t\t  \r\n          </Grid> \r\n\t\t  </div>\r\n        <div>\r\n          <DataGrid columns={columns} onRowsChange={rowChange} \r\n\t\t  defaultColumnOptions={{\r\n            sortable: true,\r\n            resizable: true\r\n          }}\r\n          rows={sortedRows}\r\n          sortColumns={sortColumns}\r\n          onSortColumnsChange={setSortColumns}/>  \r\n        </div>\r\n\t\t\r\n\t\t<Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\">\r\n          <DialogTitle id=\"alert-dialog-title\">\r\n            {\"Bills\"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n\t\t\t{message}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n\t\t  {confirm ? (\r\n\t\t\t<Button onClick={handleConfirm}>Confirm</Button>\r\n\t\t  ) : \"\"}\r\n            <Button onClick={handleClose}>Close</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default ExpenseList;","import React, { Component } from \"react\";\r\nimport CustomerService from \"../services/customer.service\";\r\nimport DeliveryService from \"../services/delivery.service\";\r\nimport PaymentService from \"../services/payment.service\";\r\nimport moment from \"moment\";\r\n\r\nexport default class AddExpense extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\tthis.saveExpense = this.saveExpense.bind(this);\r\n\tthis.onChangeQuantity = this.onChangeQuantity.bind(this);\r\n\tthis.onChangeAmount = this.onChangeAmount.bind(this);\r\n\tthis.onChangePayment = this.onChangePayment.bind(this);\r\n\tthis.newExpense = this.newExpense.bind(this);\r\n\tthis.onChangeCategory=this.onChangeCategory.bind(this);\r\n\t\r\n\tthis.onDate = this.onDate.bind(this);\r\n\t\r\n    this.myRef = React.createRef();\r\n\r\n    this.state = {\r\n      id: null,\r\n      partyId: null,\r\n      quantity: null,\r\n      date:null,\r\n      month: null,\r\n\t  type: \"expense\",\r\n    category:null,\r\n\t  amount: null,\r\n\t  payment: null,\r\n\t  submitted: false,\r\n\t  routes:[],\r\n\t  inputDate: moment().format(\"DD-MMM-YYYY\")\r\n    };\r\n  }\r\n  \r\n  onChangeQuantity(e){\r\n\t  this.setState({\r\n\t\t  quantity: e.target.value\r\n\t\t});\r\n  }\r\n  \r\n  onChangePayment(e){\r\n\t   this.setState({\r\n\t\t  payment: e.target.value\r\n\t\t});\r\n  }\r\n  \r\n  onChangeAmount(e){\r\n\t   this.setState({\r\n\t\t  amount: e.target.value\r\n\t\t});\r\n  }\r\n  \r\n  onDate(e){\r\n\t   this.setState({\r\n\t\t  inputDate: e.target.value\r\n\t\t});\r\n  }\r\n  \r\n  onChangeCategory(e){\r\n    this.setState({\r\n     category: e.target.value\r\n   });\r\n }\r\n  \r\n  \r\n  saveExpense(e) {\r\n\te.target.disabled=true;\r\n\tvar data = {\r\n\t\t  partyId: this.myRef.current.value,\r\n\t\t  quantity: this.state.quantity,\r\n\t\t  date:moment(this.state.inputDate, \"DD-MMM-YYYY\").format(\"DD\"),\r\n\t\t  month: moment(this.state.inputDate, \"DD-MMM-YYYY\").format(\"MMM-YYYY\"),\r\n\t\t  type: \"expense\",\r\n      category: this.state.category,\r\n\t\t  amount: this.state.amount,\r\n\t\t  payment: this.state.payment,\r\n\t\t  active: true\r\n\t\t};\r\n\t\t\r\n\tif(this.state.amount > 0){\r\n\t\tDeliveryService.create(data)\r\n\t\t  .then(response => {\r\n\t\t\tthis.setState({\r\n\t\t\t  id: response.data.id,\r\n\t\t\t  amount: response.data.amount,\r\n\t\t\t  submitted: true\r\n\t\t\t});\r\n\t\t\tconsole.log(response.data);\r\n\t\t  })\r\n\t\t  .catch(e => {\r\n\t\t\tconsole.log(e);\r\n\t\t  });\r\n\t}\r\n\tif(this.state.payment > 0){\r\n\t\tPaymentService.create(data)\r\n\t\t  .then(response => {\r\n\t\t\tthis.setState({\r\n\t\t\t  id: response.data.id,\r\n\t\t\t  payment: response.data.payment,\r\n\t\t\t  submitted: true\r\n\t\t\t});\r\n\t\t\tconsole.log(response.data);\r\n\t\t\te.target.disabled=false;\r\n\t\t  })\r\n\t\t  .catch(e => {\r\n\t\t\tconsole.log(e);\r\n\t\t  });\r\n\t}\r\n  }\r\n\r\n  newExpense() {\r\n    this.setState({\r\n      id: null,\r\n      partyId: null,\r\n      quantity: null,\r\n      date:null,\r\n      month: null,\r\n\t  type: \"expense\",\r\n    category:null,\r\n\t  amount: null,\r\n\t  payment: null,\r\n\t  submitted: false,\r\n\t  inputDate: moment().format(\"DD-MMM-YYYY\")\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getRoute();\r\n  }\r\n\r\n  getRoute(){\r\n\tvar paramCustomer = {searchFlag: \"non-customer\"};\r\n    CustomerService.getAll(paramCustomer)\r\n      .then(response => {\r\n\t\tthis.setState({\r\n\t\t  routes: response.data\r\n\t\t});\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { routes } = this.state;\r\n    return (\r\n      <div className=\"submit-form\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>You submitted successfully!</h4>\r\n            <button className=\"btn btn-success\" onClick={this.newExpense}>\r\n              Add\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"name\">Vendor/Staff Name</label>\r\n                  <div className=\"select-container\">\r\n                    <select className=\"form-control\" value={this.state.partyId} \r\n\t\t\t\t\t\tonChange={this.onChangeRoute} ref={this.myRef} name=\"partyId\">\r\n\t\t\t\t\t\t  {routes && routes.map((option) => (\r\n\t\t\t\t\t\t\t<option value={option.id}>{option.name}</option>\r\n\t\t\t\t\t\t  ))}\r\n                    </select>\r\n                  </div>\r\n            </div>\r\n\t\t\t<div className=\"form-group\">\r\n              <label htmlFor=\"quantity\">Quantity</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                id=\"quantity\"\r\n                required\r\n                value={this.state.quantity}\r\n                onChange={this.onChangeQuantity}\r\n                name=\"quantity\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"amount\">Bill Amount</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                id=\"amount\"\r\n                required\r\n                value={this.state.amount}\r\n                onChange={this.onChangeAmount}\r\n                name=\"amount\"\r\n              />\r\n            </div>\r\n\t\t\t<div className=\"form-group\">\r\n              <label htmlFor=\"payment\">Payment Amount</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                id=\"payment\"\r\n                required\r\n                value={this.state.payment}\r\n                onChange={this.onChangePayment}\r\n                name=\"payment\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"category\">Category </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"category\"\r\n                required\r\n                value={this.state.category}\r\n                onChange={this.onChangeCategory}\r\n                name=\"category\"\r\n              />\r\n            </div>\r\n\t\t\t<div className=\"form-group\">\r\n                      <label htmlFor=\"inputDate\">Date</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"inputDate\"\r\n                        required\r\n\t\t\t\t\t\treadOnly =\"readOnly\"\r\n                        value={this.state.inputDate}\r\n                        onChange={this.onDate}\r\n                        name=\"inputDate\"\r\n                      />\r\n            </div>\r\n            <button onClick={this.saveExpense} className=\"btn btn-success\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import http from \"../http-common\";\r\n\r\nclass AuthService {\r\n   getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem('user'));\r\n  }\r\n  setCurrentUser(userName){\r\n\t  if(userName == 'Alok'){\r\n\t\t  var user = {\r\n\t\t\t  id: 'alok',\r\n\t\t\t  roles: ['ROLE_ADMIN','ROLE_MODERATOR']\r\n\t\t  };\r\n\t\tlocalStorage.setItem(\"user\", JSON.stringify(user));\r\n\t  }\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import React, { Component } from \"react\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    AuthService.setCurrentUser(\"Alok\");\r\n\tconsole.log(AuthService.getCurrentUser());\r\n\tthis.props.history.push(\"/gui/routes\");\r\n\twindow.location.reload();\r\n  }\r\n\r\n  render() {\r\n\t  return \"\";\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport moment from 'moment';\r\n\r\nimport AddCustomer from \"./components/add-customer.component\";\r\nimport AddProduct from \"./components/add-product.component\";\r\nimport ProductList from \"./components/product-list.component\";\r\nimport SellerProduct from \"./components/seller-product.component\";\r\nimport ProjectData from \"./components/daily-delivery.component\";\r\nimport AddRoute from \"./components/add-route.component\";\r\nimport RoutesList from \"./components/routes-list.component\";\r\nimport CustomerCalendar from \"./components/customer-calendar.component\";\r\nimport CustomerDaily from \"./components/customer-today.component\";\r\nimport CollectionBillsList from \"./components/collection-bills-list.component\";\r\nimport EmployeeDaily from \"./components/customer-today.component\";\r\nimport CollectionDaily from \"./components/collection-daily.component\";\r\nimport CustomerList from \"./components/customer-list.component\";\r\nimport Bills from \"./components/bills.component\";\r\nimport CollectionBills from \"./components/collection-bills.component\";\r\nimport ExpenseBills from \"./components/expense-bills.component\";\r\nimport ExpenseList from \"./components/expense-list.component\";\r\nimport AddExpense from \"./components/add-expense.component\";\r\nimport Login from \"./components/login.component\";\r\nimport AuthService from \"./services/auth.service\";\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\t  showModeratorBoard: true,\r\n      showAdminBoard: false,\r\n      currentUser: undefined\r\n    };\r\n\tconsole.log(props);\r\n\t//AuthService.setCurrentUser(props);\r\n  }\r\n  componentDidMount() {\r\n    const user = AuthService.getCurrentUser();\r\n    if (user) {\r\n      this.setState({\r\n        currentUser: user,\r\n        showModeratorBoard: user.roles.includes(\"ROLE_MODERATOR\"),\r\n        showAdminBoard: user.roles.includes(\"ROLE_ADMIN\"),\r\n      });\r\n    }\r\n  }\r\n\t\r\n  render() {\r\n\t  const { currentUser, showModeratorBoard, showAdminBoard } = this.state;\r\n    return (\r\n      <Router>\r\n        <div >\r\n          <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n            <div className=\"navbar-nav mr-auto\">\r\n\t\t\t{showModeratorBoard && (\r\n\t\t\t        <li className=\"nav-item\">\r\n                <Link to={\"/gui/routes\"} className=\"nav-link\">\r\n                  Routes\r\n                </Link>\r\n              </li>\r\n\t\t\t)}\r\n      {showModeratorBoard && (\r\n\t\t\t      <li className=\"nav-item\">\r\n              <Link to={\"/gui/customerDaily/\"+moment().format(\"DD-MMM-YYYY\")} className=\"nav-link\">\r\n                Today\r\n              </Link>\r\n            </li>\r\n\t\t\t)}\r\n      \r\n\t\t\t{showAdminBoard && (\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/gui/customerCalendar/\"+moment().format(\"MMM-YYYY\")} className=\"nav-link\">\r\n                  Calendar \r\n                </Link>\r\n              </li>\r\n\t\t\t)}\r\n\t\t\r\n\t\t\t{showModeratorBoard && (\r\n\t\t\t  <li className=\"nav-item\">\r\n                <Link to={\"/gui/expense/\"+moment().format(\"MMM-YYYY\")} className=\"nav-link\">\r\n                  Expense\r\n                </Link>\r\n              </li>\r\n\t\t\t)}\r\n      {showAdminBoard && (\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/gui/customers\"} className=\"nav-link\">\r\n                  Party\r\n                </Link>\r\n              </li>\r\n\t\t\t)}\r\n      {showModeratorBoard && (\r\n\t\t\t  <li className=\"nav-item\">\r\n                <Link to={\"/gui/collectionDaily/\"+moment().format(\"DD-MMM-YYYY\")} className=\"nav-link\">\r\n                  Collection\r\n                </Link>\r\n              </li>\r\n\t\t\t)}\r\n        {showModeratorBoard && (\r\n\t\t\t  <li className=\"nav-item\">\r\n                <Link to={\"/gui/CollectionBillsList/\"+moment().format(\"DD-MMM-YYYY\")} className=\"nav-link\">\r\n                  CollectionBillsList\r\n                </Link>\r\n              </li>\r\n\t\t\t)}\r\n    {showAdminBoard && (\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/gui/productlist\"} className=\"nav-link\">\r\n                  ProductList\r\n                </Link>\r\n              </li>\r\n\t\t\t)}\r\n      {showAdminBoard && (\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/gui/sellerProduct\"} className=\"nav-link\">\r\n                  SellerProduct\r\n                </Link>\r\n              </li>\r\n\t\t\t)}\r\n\r\n            </div>\r\n          </nav>\r\n\r\n          <div className=\"container mt-3\">\r\n            <Switch>\r\n              <Route exact path={[\"/\", \"/gui/routes\"]} component={RoutesList} />\r\n              <Route exact path=\"/gui/customers\" component={CustomerList} />\r\n              <Route exact path=\"/gui/addCustomer\" component={AddCustomer} />\r\n              <Route exact path=\"/gui/productlist\" component={ProductList} />\r\n              <Route exact path=\"/gui/addProduct\" component={AddProduct} />\r\n              <Route exact path=\"/gui/sellerProduct\" component={SellerProduct} />\r\n              <Route exact path=\"/gui/dailyDelivery/:id\" component={ProjectData} />\r\n\t\t\t        <Route exact path=\"/gui/dailyDelivery/:id/:pending\" component={ProjectData} />\r\n              <Route exact path=\"/gui/route\" component={AddRoute} />\r\n              <Route exact path=\"/gui/routes\" component={RoutesList} />\r\n              <Route exact path=\"/gui/customerCalendar/:date\" component={CustomerCalendar} />\r\n              <Route exact path=\"/gui/customerDaily/:date\" component={CustomerDaily} />\r\n              <Route exact path=\"/gui/bills/:month\" component={Bills} />\r\n              <Route exact path=\"/gui/collectionbills/:from/:to\" component={CollectionBills} />\r\n              <Route exact path=\"/gui/collectionbills/:from/:to/:partyId\" component={CollectionBills} />\r\n              <Route exact path=\"/gui/expenseBills/:month\" component={ExpenseBills} />\r\n              <Route exact path=\"/gui/bills/:month/:partyId\" component={Bills} />\r\n\t\t\t        <Route exact path=\"/gui/expense/:month\" component={ExpenseList} />\r\n\t\t\t        <Route exact path=\"/gui/addExpense\" component={AddExpense} />\r\n\t\t\t        <Route exact path=\"/gui/login\" component={Login} />\r\n              <Route exact path=\"/gui/collectionDaily/:date\" component={CollectionDaily} />\r\n              <Route exact path=\"/gui/CollectionBillsList/:date\" component={CollectionBillsList} />\r\n              <Route exact path=\"/gui/employeeDaily/:date\" component={EmployeeDaily} />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { StyledEngineProvider } from '@mui/material/styles';\r\nReactDOM.render(\r\n  <StyledEngineProvider injectFirst>\r\n    <App />\r\n  </StyledEngineProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}